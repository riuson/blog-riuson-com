<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>riuson.com - misc</title><link href="https://blog.riuson.com/" rel="alternate"></link><link href="https://blog.riuson.com/feeds/misc.atom.xml" rel="self"></link><id>https://blog.riuson.com/</id><updated>2017-09-07T00:00:00+05:00</updated><entry><title>Atlassian SourceTree, Git и нестандартный порт</title><link href="https://blog.riuson.com/ru/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port" rel="alternate"></link><published>2017-09-07T00:00:00+05:00</published><updated>2017-09-07T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-09-07:/ru/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port</id><summary type="html">&lt;p&gt;Как указать порт к Git репозиторию в Atlassian SourceTree.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Обычный url репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git@github.com:riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Url репозитория с указанием порта:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh://git@github.com:22/riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Git Port" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port-1.png" /&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows + KDiff3</title><link href="https://blog.riuson.com/ru/posts/2017/08/17/git-windows-kdiff3" rel="alternate"></link><published>2017-08-17T00:00:00+05:00</published><updated>2017-08-17T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-17:/ru/posts/2017/08/17/git-windows-kdiff3</id><summary type="html">&lt;p&gt;Настройка KDiff3 в качестве mergetool и difftool в Git for Windows.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка KDiff3 в качестве mergetool и difftool в Git for Windows.&lt;/p&gt;
&lt;p&gt;Устанавливаем &lt;a href="https://sourceforge.net/projects/kdiff3"&gt;KDiff3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;В Git Bash прописываем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add merge.tool kdiff3&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add mergetool.kdiff3.path &amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add mergetool.kdiff3.trustExitCode false&lt;/span&gt;

&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add diff.guitool kdiff3&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add difftool.kdiff3.path &amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add difftool.kdiff3.trustExitCode false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows - указание домашнего каталога</title><link href="https://blog.riuson.com/ru/posts/2017/08/03/git-for-windows-custom-home-directory" rel="alternate"></link><published>2017-08-03T00:00:00+05:00</published><updated>2017-08-03T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-03:/ru/posts/2017/08/03/git-for-windows-custom-home-directory</id><summary type="html">&lt;p&gt;Что делать, если требуется изменить расположение домашнего каталога &lt;em&gt;~/home&lt;/em&gt;, например для хранения ключей SSH в определённом месте.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Если требуется изменить расположение домашнего каталога &lt;em&gt;~/home&lt;/em&gt;, например для хранения ключей SSH в определённом месте.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Скачать &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Установить.&lt;/li&gt;
&lt;li&gt;Перейти в каталог установки. Например '*d:\Software\Installed\Git*'&lt;/li&gt;
&lt;li&gt;Открыть файл '&lt;em&gt;./etc/profile&lt;/em&gt;' .&lt;/li&gt;
&lt;li&gt;Добавить первой строкой:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;# HOME=&amp;quot;path-to-home-dir&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;HOME=&amp;quot;d:/Software/Installed/Git/home/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Как собрать необходимые DLL для приложения на Qt</title><link href="https://blog.riuson.com/ru/posts/2017/07/23/qt-deploy-on-windows" rel="alternate"></link><published>2017-07-23T00:00:00+05:00</published><updated>2017-07-23T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-23:/ru/posts/2017/07/23/qt-deploy-on-windows</id><summary type="html">&lt;p&gt;Как собрать DLL, необходимые для работы Qt приложения с динамической линковкой.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Как собрать динамические библиотеки, требуемые для приложения на Qt.&lt;/h2&gt;
&lt;p&gt;Исходная статья: &lt;a href="http://doc.qt.io/qt-5/windows-deployment.html"&gt;Qt for Windows - Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Создать простой батник *.bat со следующими командами:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Добавить&lt;/span&gt; &lt;span class="err"&gt;путь&lt;/span&gt; &lt;span class="err"&gt;к&lt;/span&gt; &lt;span class="err"&gt;набору&lt;/span&gt; &lt;span class="n"&gt;MinGW&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;переменную&lt;/span&gt; &lt;span class="err"&gt;окружения&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Tools&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mingw530_32&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Установить&lt;/span&gt; &lt;span class="err"&gt;путь&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;куда&lt;/span&gt; &lt;span class="err"&gt;будет&lt;/span&gt; &lt;span class="err"&gt;помещено&lt;/span&gt; &lt;span class="err"&gt;приложение&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;требуемые&lt;/span&gt; &lt;span class="err"&gt;им&lt;/span&gt; &lt;span class="err"&gt;библиотеки&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Путь&lt;/span&gt; &lt;span class="err"&gt;к&lt;/span&gt; &lt;span class="err"&gt;каталогу&lt;/span&gt; &lt;span class="err"&gt;со&lt;/span&gt; &lt;span class="err"&gt;скомпилированным&lt;/span&gt; &lt;span class="err"&gt;исполняемым&lt;/span&gt; &lt;span class="err"&gt;файлом&lt;/span&gt; &lt;span class="err"&gt;приложения&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Desktop_Qt_5_9_0_MinGW_32bit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Release&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;исполняемый&lt;/span&gt; &lt;span class="err"&gt;файл&lt;/span&gt;
&lt;span class="n"&gt;xcopy&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;source&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;остальные&lt;/span&gt; &lt;span class="err"&gt;необходимые&lt;/span&gt; &lt;span class="err"&gt;ресурсы&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;xcopy&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;readme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;библиотеки&lt;/span&gt; &lt;span class="err"&gt;с&lt;/span&gt; &lt;span class="err"&gt;помощью&lt;/span&gt; &lt;span class="n"&gt;windeployqt&lt;/span&gt;
&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mingw53_32&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;windeployqt&lt;/span&gt; &lt;span class="c1"&gt;--release --force --compiler-runtime %destination%my-project.exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запустить батник.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Статическая сборка Qt на Windows с MinGW</title><link href="https://blog.riuson.com/ru/posts/2017/07/19/qt-static-build-on-windows-with-mingw" rel="alternate"></link><published>2017-07-19T00:00:00+05:00</published><updated>2017-07-19T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-19:/ru/posts/2017/07/19/qt-static-build-on-windows-with-mingw</id><summary type="html">&lt;p&gt;Сборка статического комплекта Qt для получения приложения без зависимостей от других библиотек Qt.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Оригинал: &lt;a href="https://wiki.qt.io/Building_a_static_Qt_for_Windows_using_MinGW"&gt;Building a static Qt for Windows using MinGW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Загрузить и установить Qt. Не забыть выбрать набор MinGW:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Установка" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Запомнить каталог, куда установился MinGW. Например, *&lt;em&gt;D:\Qt\Tools\mingw530_32\bin*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Загрузить скрипт для PowerShell &lt;a href="https://sourceforge.net/p/qtlmovie/code/ci/v1.2.16/tree/build/windows-build-qt-static.ps1?format=raw"&gt;windows-build-qt-static.ps1&lt;/a&gt;.
Сохранить, например в *&lt;em&gt;D:\Qt*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Выбрать версию Qt в &lt;a href="http://download.qt.io/official_releases/qt/"&gt;Qt Downloads&lt;/a&gt; и запомнить ссылку на неё &lt;strong&gt;{Версия}/{Версия}/single/qt-everywhere-opensource-src-{Версия}.zip&lt;/strong&gt;. Например, http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&lt;/p&gt;
&lt;p&gt;Создать файл &lt;strong&gt;windows-build-run.bat&lt;/strong&gt; со следующим содержимым:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;PowerShell -NoProfile -ExecutionPolicy Bypass -Command &amp;quot;&amp;amp; &amp;#39;D:\Qt\windows-build-qt-static.ps1&amp;#39; -QtSrcUrl &amp;#39;http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&amp;#39; -QtStaticDir &amp;#39;D:\Qt\Static591&amp;#39; -MingwDir &amp;#39;D:\Qt\Tools\mingw530_32&amp;#39; -QtVersion &amp;#39;5.9.1-Static&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;где
  * -QtSrcUrl - ссылка на архив с исходниками;
  * -QtStaticDir - каталог для установки новой статической сборки Qt;
  * -MingwDir - путь к набору MinGW.&lt;/p&gt;
&lt;div class="alert alert-warning" role="alert"&gt;
Строка QtVersion не должна содержать пробелов!&lt;br&gt;
Иначе при сборке будет получена ошибка типа
&lt;code&gt;&lt;br&gt;
ERROR: Invalid command line parameter 'Static'.&lt;br&gt;
mingw32-make: *** No targets specified and no makefile found.  Stop.&lt;br&gt;
mingw32-make: *** No rule to make target 'install'.
&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;Запустить &lt;strong&gt;cmd.exe&lt;/strong&gt;, перейти в каталог со скриптами, &lt;strong&gt;D:\Qt&lt;/strong&gt;, запустить &lt;strong&gt;windows-build-run.bat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Если выдаётся ошибка на тему &lt;strong&gt;SQLite&lt;/strong&gt;, надо открыть файл &lt;strong&gt;windows-build-qt-static.ps1&lt;/strong&gt; в редакторе и заменить &lt;strong&gt;-qt-sql-sqlite&lt;/strong&gt; на &lt;strong&gt;-sql-sqlite&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ждём несколько часов.............&lt;/p&gt;
&lt;p&gt;Добавляем собранный Qt в Qt Creator: &lt;strong&gt;Инструменты&lt;/strong&gt; → &lt;strong&gt;Параметры&lt;/strong&gt; → &lt;strong&gt;Сборка и запуск&lt;/strong&gt; → &lt;strong&gt;Профили Qt&lt;/strong&gt; → &lt;strong&gt;Добавить...&lt;/strong&gt;. Указать путь к файлу &lt;strong&gt;qmake.exe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Версии Qt" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Добавляем новый комплект: &lt;strong&gt;Инструменты&lt;/strong&gt; → &lt;strong&gt;Параметры&lt;/strong&gt; → &lt;strong&gt;Сборка и запуск&lt;/strong&gt; → &lt;strong&gt;Комплекты&lt;/strong&gt; → &lt;strong&gt;Добавить...&lt;/strong&gt;. Выбрать компилятор C/C++ = MinGW 5.3.0, отладчик = GNU gdb из MinGW 5.3.0 и свежесобранный профиль Qt.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Комплекты" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Выбрать комплект для проект:&lt;/p&gt;
&lt;p&gt;&lt;img alt="выбор комплекта" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;После сборки получится изрядно потолстевший исполняемый файл.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Zyxel Keenetic + NameCheap DDNS</title><link href="https://blog.riuson.com/ru/posts/2017/06/10/zyxel-keenetic-namecheap-ddns" rel="alternate"></link><published>2017-06-10T00:00:00+05:00</published><updated>2017-06-10T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-06-10:/ru/posts/2017/06/10/zyxel-keenetic-namecheap-ddns</id><summary type="html">&lt;p&gt;Настройка DDNS от Namecheap на роутере Zyxel Keenetic.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Выбор провайдеров DDNS в роутере оказался на удивление малым:&lt;/p&gt;
&lt;p&gt;&lt;img alt="List of providers" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/06/10/zyxel-keenetic-namecheap-ddns-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;DDNS на Namecheap настраивается по их инструкции: &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/43/11/how-do-i-set-up-a-host-for-dynamic-dns"&gt;How do I set up a Host for Dynamic DNS?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Namecheap предоставляет следующие параметры, по &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9356/11/how-to-configure-a-ddwrt-router"&gt;инструкции для DD-WRT&lt;/a&gt;:
* &lt;strong&gt;DYNDNS Server&lt;/strong&gt;: dynamicdns.park-your-domain.com - the name of the server should not be changed
* &lt;strong&gt;Username&lt;/strong&gt;: yourdomain.com - replace it with your domain name
* &lt;strong&gt;Password&lt;/strong&gt;: Dynamic DNS password for your domain (Domain List &amp;gt;&amp;gt; click on the Manage button next to the domain &amp;gt;&amp;gt; the Advanced DNS tab &amp;gt;&amp;gt; Dynamic DNS)
* &lt;strong&gt;Hostname&lt;/strong&gt;: Your subdomain (@ for yourdomain.com, www for www.yourdomain.com, etc.)
* &lt;strong&gt;URL&lt;/strong&gt;: /update?domain=yourdomain.com&amp;amp;password=DynamicDNSPassword&amp;amp;host=&lt;/p&gt;
&lt;p&gt;Параметр URL, как оказалось, в Zyxel указывать негде.&lt;/p&gt;
&lt;p&gt;Однако, есть ещё инструкция для обновления через браузер: &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/29/11/how-do-i-use-a-browser-to-dynamically-update-the-hosts-ip"&gt;How do I use a browser to dynamically update the host's IP?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Обновить адрес можно, выполнив обычный запрос вида https://dynamicdns.park-your-domain.com/update?host=[host]&amp;amp;domain=[domain_name]&amp;amp;password=[ddns_password]&amp;amp;ip=[your_ip]&lt;br&gt;
Где
* Host = @
* Domain Name = yourdomain.tld
* Dynamic DNS Password = Domain List &amp;gt;&amp;gt; click Manage next to the domain &amp;gt;&amp;gt;Advanced DNS tab &amp;gt;&amp;gt; Dynamic DNS. If it is not enabled, enable it to check the password.
* IP Address = optional value. If you don't specify any IP, the IP from which you are accessing this URL will be set for the domain.&lt;/p&gt;
&lt;p&gt;При необходимости обновления субдомена, вместо @ надо указать его имя. Для test.yourdomain.tld это будет просто test.&lt;/p&gt;
&lt;p&gt;Далее надо подставить свои параметры в указанный выше URL и прописать его в настройках DDNS у Zyxel. Параметр your_ip не указывается. В этом случае, в качестве ip адреса будет взят тот внешний IP адрес, с которого поступит запрос. Т.е. внешний адрес роутера.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Settings" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/06/10/zyxel-keenetic-namecheap-ddns-2.png" /&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Установка и настройка Eclipse, STM32CubeMX под Windows (v2).</title><link href="https://blog.riuson.com/ru/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2" rel="alternate"></link><published>2017-02-21T00:00:00+05:00</published><updated>2017-02-21T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-02-21:/ru/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2</id><summary type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием Eclipse, STM32CubeMX, GNU ARM Embedded, GNU ARM Eclipse Plugins.&lt;br&gt;
На примере микроконтроллера STM32F103RET6.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/i5VUF1wYTQU"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Настройка Eclipse и STM32CubeMX под Windows (v2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В связи с некоторыми изменениями между рассмотренной ранее и текущей версией CubeMX, переделал инструкцию.{ .bg-info .text-white }&lt;/p&gt;
&lt;p&gt;Если у Вас это не работает или найдёте ошибку, пишите в комментариях.{ .bg-warning .text-dark }&lt;/p&gt;
&lt;p&gt;На видео приведён весь процесс установки и настройки. Операционная система Windows 10 Home.&lt;/p&gt;
&lt;h1&gt;Загрузка&lt;/h1&gt;
&lt;p&gt;Список ПО, которое понадобится:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE for C/C++ Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/download/"&gt;Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/gcc-arm-embedded"&gt;GCC ARM Embedded&lt;/a&gt; Windows Installer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/  install/"&gt;How to install the Windows Build Tools?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/"&gt;The GNU ARM Eclipse plug-ins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;How to install the GNU ARM Eclipse plug-ins?&lt;/a&gt;   (скачивается из самого Eclipse)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/en/development-tools/  stm32cubemx.html?icmp=stm32cubemx_pron_prcube_feb2014&amp;amp;sc=stm32cube-pr"&gt;STM32CubeMX STM32Cube initialization code generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://  www.st.com/content/st_com/en/products/development-tools/software-development-tools/  stm32-software-development-tools/stm32-configurators-and-code-generators/stsw-stm32095.html"&gt;STM32CubeMX Eclipse plug in for STM32 configuration and initialization C code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/content/st_com/en/products/embedded-software/  mcus-embedded-software/stm32-embedded-software/stm32cube-embedded-software/stm32cubef1.html"&gt;STM32CubeF1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.segger.com/jlink-software.html"&gt;Jlink - Software and documentation pack for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;h2&gt;Eclipse IDE for C/C++ Developers&lt;/h2&gt;
&lt;p&gt;Скачиваем установщик Eclipse и устанавливаем Eclipse IDE for C/C++ Developers.&lt;/p&gt;
&lt;h2&gt;Java Virtual Machine&lt;/h2&gt;
&lt;p&gt;Если установщик Eclipse не найдёт Java SE Runtime Environment подходящей версии, он предложит его скачать.
Скачиваем и устанавливаем.&lt;/p&gt;
&lt;h2&gt;Windows Build Tools&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;руководстве&lt;/a&gt;. Ничего необычного.&lt;/p&gt;
&lt;h2&gt;GCC ARM Embedded&lt;/h2&gt;
&lt;p&gt;При завершения установки снимаем галочки с Launch &lt;em&gt;gccvar.bat&lt;/em&gt; и &lt;em&gt;Add path to enviroment variable&lt;/em&gt;. Чтобы можно было установить несколько компиляторов.&lt;/p&gt;
&lt;h2&gt;GNU ARM Eclipse plug-ins&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;руководстве&lt;/a&gt;.
В меню Eclipse выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt;. Добавляем сайт&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: GNU ARM Eclipse Plug-ins&lt;/li&gt;
&lt;li&gt;URL: http://gnuarmeclipse.sourceforge.net/updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;И устанавливаем всё.&lt;/p&gt;
&lt;p&gt;Если вылетела ошибка &lt;strong&gt;Handshake_failure&lt;/strong&gt;, читаем статью &lt;a href="http://gnuarmeclipse.github.io/blog/2017/01/29/plugins-install-issue"&gt;GNU ARM Eclipse plug-ins: Received fatal alert: handshake_failure&lt;/a&gt;.
Вкратце: повысили настройки безопасности у репозитория плагинов Eclipse, а в некоторых версиях JRE библиотеки содержат экспортные ограничения на функции шифрования. Вот их надо заменить на полные.&lt;/p&gt;
&lt;h2&gt;STM32CubeMX Eclipse plug in&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Через меню &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt; устанавливаем плагин из архива &lt;em&gt;STSW-STM32095.zip&lt;/em&gt;.
Перезапускаем Eclipse.&lt;/p&gt;
&lt;h2&gt;STM32CubeF1&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Открываем STM32CubeMX через меню &lt;em&gt;Window&lt;/em&gt; -&amp;gt; &lt;em&gt;Show View&lt;/em&gt; -&amp;gt; &lt;em&gt;Other...&lt;/em&gt;. Там в дереве, в ветке Other, будет STM32CubeMX.
В меню STM32CubeMX выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Libraries&lt;/em&gt;, открывается окно установки пакетов под серии микроконтролллеров.&lt;/p&gt;
&lt;p&gt;Далее можно скачать пакет из сети, выбрав галочку и нажав &lt;em&gt;Install Now&lt;/em&gt;.
Либо установить из скачанного вручную архива, нажав кнопку &lt;em&gt;From Local...&lt;/em&gt; и выбрав скачанный ранее архив &lt;em&gt;STM32CubeF1.ZIP&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;J-Link&lt;/h2&gt;
&lt;p&gt;Всё как обычно.&lt;/p&gt;
&lt;h1&gt;Настройка&lt;/h1&gt;
&lt;h2&gt;Создание проекта в Eclipse&lt;/h2&gt;
&lt;p&gt;В мастере создания нового проекта выбираем &lt;em&gt;C/C++&lt;/em&gt; -&amp;gt; &lt;em&gt;C Project&lt;/em&gt;.
Далее указываем имя проекта и тип &lt;em&gt;Hello World ARM C++ Project&lt;/em&gt;, Toolchain &lt;em&gt;Cross ARM GCC&lt;/em&gt;.
Далее меняем каталог исходников Source с &lt;em&gt;src&lt;/em&gt; на &lt;em&gt;Src&lt;/em&gt;. В Linker semi-hosting options стираем всё и пишем &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;--specs=nosys.specs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Пробуем собрать проект.&lt;/p&gt;
&lt;h2&gt;Создание проекта в STM32CubeMX&lt;/h2&gt;
&lt;h3&gt;Генерация кода&lt;/h3&gt;
&lt;p&gt;Запускаем STM32CubeMX, создаём новый проект.
В списке микроконтроллеров выбираем нужный (здесь STM32F103RET6 для примера).
Настраиваем как нужно.
Запускаем генерацию кода из меню. Указываем имя проекта как было в Eclipse выше. Указываем Project Location на каталог workspace, где лежит тот проект. Меняем Toolchain/IDE на SW4STM32. Снимаем галочку Generate Under Root.
Запускаем.
Исходные коды проекта будут созданысгенерированы поверх уже существующего проекта.
Закрываем STM32CubeMX.&lt;/p&gt;
&lt;p&gt;Обновляем дерево проекта в Eclipse. Появляются новые каталоги, &lt;em&gt;Driver&lt;/em&gt; и &lt;em&gt;Inc&lt;/em&gt;. Сгенерированный Src совпал с уже сушествующим.
Новые каталоги исключены из сборки, поэтому включаем их через свойства в контекстном меню.
При необходимости, меняем в свойствах проект кодировку исходников на UTF-8.&lt;/p&gt;
&lt;p&gt;Создаём в каталоге &lt;em&gt;Src&lt;/em&gt; файл &lt;em&gt;startup.asm&lt;/em&gt;. Прописывываем в нём путь к стартовому файлу на ассемблере:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc/startup_stm32f103xe.s&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Это позволит оставить файлы &lt;em&gt;&lt;em&gt;.s_ на месте (они не попадают под сборку ассемблером), но в то же время включить нужный в сборку через файл _&lt;/em&gt;.asm&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Перенос настроек&lt;/h3&gt;
&lt;p&gt;Далее, надо перенести настройки проекта из сгенерированного в существующий.&lt;/p&gt;
&lt;p&gt;Открываем проект в Eclipse. Заходим в свойства проекта - C/C++ General - Path and Symbols. Добавляем там легко опознаваемые строки-маркеры в разделы Includes и Symbols.&lt;/p&gt;
&lt;p&gt;Далее открываем XML файл сгенерированного проекта в &lt;em&gt;./SW4STM32/&lt;project name&gt;/.cproject&lt;/em&gt;.
Делаем его текст более читаемым через любое средство форматирования XML, позволяющее разнести атрибуты по строкам. Например, xmlbeautifier.&lt;/p&gt;
&lt;h4&gt;Define&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле макросы, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols.1801753735&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Defined symbols (-D)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;definedSymbols&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__weak=__attribute__((weak))&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ищем во втором файле ноды XML с соответствующими маркерами и заменяем их.
Список примерно следующий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
__packed=&amp;quot;__attribute__((__packed__))&amp;quot;
USE_HAL_DRIVER
STM32F103RE
ARM_MATH_CM3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Последнего в XML файле нет, но без него библиотеки не соберутся.&lt;br&gt;
Кавычек у __weak и __packed тоже нет. Их надо добавить в виде &lt;code&gt;"&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Include&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле пути для Include, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths.976375416&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Include paths (-I)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;includePath&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;..\..\..\Inc&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем рядом файл проекта Eclipse CDT. Ищем ранее добавленные маркеры. Копируем соответствующие ноды XML из первого файла во второй. Попутно заменяя относительные пути:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;../../../Inc
../../../Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;${ProjDirPath}/Inc
${ProjDirPath}/Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;ARM family&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Target Processor&lt;/em&gt; -&amp;gt; &lt;em&gt;ARM family&lt;/em&gt;, выбираем &lt;em&gt;cortex-m3&lt;/em&gt;, соответственно микроконтроллеру.&lt;/p&gt;
&lt;h4&gt;Linker script&lt;/h4&gt;
&lt;p&gt;Копируем скрипт линкера из &lt;em&gt;./SW4STM32/&lt;project name&gt;/STM32F103RETx_FLASH.ld&lt;/em&gt; в &lt;em&gt;Scripts/STM32F103RETx_FLASH.ld&lt;/em&gt;.&lt;br&gt;
Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Linker&lt;/em&gt; -&amp;gt; &lt;em&gt;General&lt;/em&gt;. Добавляем в список &lt;em&gt;Scripts files (-T)&lt;/em&gt; путь к файлу скрипта.&lt;/p&gt;
&lt;h1&gt;Сборка.&lt;/h1&gt;
&lt;p&gt;Собираем проект.
Для ускорения сборки можно включить параллельную работу в свойствах проекта &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Behavior&lt;/em&gt; -&amp;gt; &lt;em&gt;Enable parallel build&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Отладка&lt;/h1&gt;
&lt;h2&gt;Проверка связи с отладчиком и микроконтроллером через J-Flash.&lt;/h2&gt;
&lt;p&gt;Запускаем J-Flash. Создаём новый проект. В свойствах проекта выбираем свой отладчик, &lt;em&gt;Target Interface&lt;/em&gt;, &lt;em&gt;CPU&lt;/em&gt; -&amp;gt; &lt;em&gt;Device&lt;/em&gt;. Выполняем подключение &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Connect&lt;/em&gt;. Если в логах появилась запись &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- Connected successfully
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;, то всё OK. Если нет, разбираемся с драйверами и подключением.
Для дополнительной проверки можно считать память программ микроконтроллера через меню &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Read back&lt;/em&gt; -&amp;gt; &lt;em&gt;Entire chip&lt;/em&gt;. Должно отобразиться содержимое памяти. Если нет - опять же разбираемся с поключением.&lt;/p&gt;
&lt;h2&gt;Настройка Eclipse&lt;/h2&gt;
&lt;p&gt;Открываем меню &lt;em&gt;Debug&lt;/em&gt; -&amp;gt; &lt;em&gt;Debug Configurations...&lt;/em&gt;.
Создаём новое подключение под &lt;em&gt;GDB Segger J-Link Debugging&lt;/em&gt;.
На вкладке &lt;em&gt;Debugger&lt;/em&gt; прописываем &lt;em&gt;Device name&lt;/em&gt; (ссылка на список поддерживаемых устройств там есть справа), например &lt;em&gt;STM32F103RE&lt;/em&gt;. Выбираем подключение &lt;em&gt;Connection&lt;/em&gt; и интерфейс &lt;em&gt;Interface&lt;/em&gt;, если требуется. 
На вкладке &lt;em&gt;Common&lt;/em&gt; ставим галочку на &lt;em&gt;Debug&lt;/em&gt; в списке &lt;em&gt;Display in favorites menu&lt;/em&gt; для упрощения перехода в режим отладки.
Далее окно настроек можно закрыть и запустить отладку через меню &lt;em&gt;Debug&lt;/em&gt;.
Бинарник должен прошиться в память программ и начаться отладка, с остановкой в начале функции &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Обновление проекта&lt;/h1&gt;
&lt;p&gt;Данная структура проекта позволяет обновить проект черех генератор кода STM32CubeMX без особых усилий, при соблюдении рекомендаций к написанию пользовательского кода в предназначенных для того участках.
Запускаем STM32CubeMX. Загружаем проект STM32CubeMX (файл *.ioc, сохранённый в каталоге проекта при генерации кода).
Меняем необходимые настройки, отключаем или подключаем модули.
Потом запускаем генерацию кода и файла описания.
Файлы перезаписываются поверх существующего проекта, сохраняя упомянутые выше участки пользовательского кода.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;На этом пока всё.&lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Программное подавление дребезга контактов</title><link href="https://blog.riuson.com/ru/posts/2016/09/16/keyboard-debounce-in-software" rel="alternate"></link><published>2016-09-16T00:00:00+05:00</published><updated>2016-09-16T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-16:/ru/posts/2016/09/16/keyboard-debounce-in-software</id><summary type="html">&lt;p&gt;Программное подавление дребезга контактов клавиатуры на микроконтроллере, с использование прерываний. Алгоритм и демонстрация.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Обычно я использовал следующий алгоритм антидребезга:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Разрешаем EXTI &lt;abbr title="Interrupt Service Routine"&gt;ISR&lt;/abbr&gt; по входам с клавиш, по обоим фронтам.&lt;/li&gt;
&lt;li&gt;Происходит ожидание изменения уровня сигнала на входах.&lt;/li&gt;
&lt;li&gt;Прерывание по EXTI, вызов EXTI ISR.&lt;br&gt;
В EXTI ISR останавливаем и запускаем заново таймер. Например, на 20 мс.&lt;/li&gt;
&lt;li&gt;Если ко времени вызова ISR таймера произойдёт новый вызов EXTI ISR, то таймер будет перезапущен и начнёт считать заново.&lt;/li&gt;
&lt;li&gt;Таймер досчитал, вызывается ISR таймера.
Таймер останавливаем.&lt;br&gt;
Здесь состояние клавиатуры можно считать стабильным. Поэтому считываем её состояние и передаём на обработку, куда следует.&lt;/li&gt;
&lt;li&gt;Переходим к пункту 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Этот же метод вполне пригоден для определения таймаута по приёму UART на микроконтроллерах, у которых отсутствует отдельное прерывание по таймауту.&lt;/p&gt;
&lt;p&gt;На CyberForum'е заметили, что при плохом контакте прерывания от клавиатуры могут идти слишком часто и микроконтроллер будет всё время висеть в прерываниях.
Отсюда возникла небольшая доработка.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Разрешаем EXTI ISR по входам с клавиш, по обоим фронтам.&lt;/li&gt;
&lt;li&gt;Нажимается ржавая кнопка.&lt;/li&gt;
&lt;li&gt;По первому вызову EXTI ISR:&lt;/li&gt;
&lt;li&gt;Запускается таймер;&lt;/li&gt;
&lt;li&gt;Отключается только вызов ISR по EXTI в NVIC, флаги прерываний продолжают сохраняться в регистре PR;&lt;/li&gt;
&lt;li&gt;В ISR таймера:&lt;/li&gt;
&lt;li&gt;Останавливаем таймер;&lt;/li&gt;
&lt;li&gt;проверяем наличие флага прерывания от EXTI:&lt;ul&gt;
&lt;li&gt;Если флаг установлен, перезапускаем таймер;&lt;/li&gt;
&lt;li&gt;Если флаг не установлен, то считываем состояние клавиатуры и передаём на обработку.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Переходим к пункту 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://youtu.be/fA2tO8wWSKo"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Демонстрация подавления дребезга контактов&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Наличие матричной клавиатуры ничего не меняет. Просто на EXTI надо завести все линии строк либо столбцов, чтобы изменение уровня сигнала из-за любой кнопки вызывало прерывание EXTI.
В момент же считывания состояния матричной клавиатуры прерывания мешать не будут, так как таймер полностью остановлен, а EXTI ISR отключены.&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Git for Windows and P4merge</title><link href="https://blog.riuson.com/ru/posts/2016/04/20/git-windows-p4merge" rel="alternate"></link><published>2016-04-20T00:00:00+05:00</published><updated>2016-04-20T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-04-20:/ru/posts/2016/04/20/git-windows-p4merge</id><summary type="html">&lt;p&gt;Настройка использования p4merge в Git for Windows в качестве mergetool …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка использования p4merge в Git for Windows в качестве mergetool.
Применять такую утилиту приходится крайне редко, т.к. Git прекрасно проводит слияние веток, если они заранее были правильно организованы.&lt;/p&gt;
&lt;p&gt;Идёт на сайт &lt;a href="https://www.perforce.com/downloads/helix#product-10"&gt;Perforce&lt;/a&gt;.
Качаем &lt;strong&gt;Helix P4Merge: Visual Merge Tool&lt;/strong&gt; и устанавливаем.&lt;/p&gt;
&lt;p&gt;Выполняем команды&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git config --global merge.tool p4merge
$ git config --global mergetool.p4merge.path &lt;span class="s2"&gt;&amp;quot;C:/Program Files/Perforce/p4merge.exe&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После этого в файле конфигурации Git'а добавятся строки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[mergetool &amp;quot;p4merge&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C:/Program Files/Perforce/p4merge.exe&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После выполнения merge может возникнуть конфликт&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@desktop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MINGW32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;develop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--no-ff --no-commit feature-branch&lt;/span&gt;

&lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;merging&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Removing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;merging&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitignore&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;CONFLICT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflict&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitignore&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Automatic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflicts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запускаем mergetool&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;user@desktop MINGW32 /c/projects/project (develop|MERGING)&lt;/span&gt;
&lt;span class="err"&gt;$ git mergetool&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Git показывает список файлов с конфликтами и начинает по очереди применять к ним настроенный merge tool.
  * &lt;span style="color:blue"&gt;REMOTE ▼&lt;/span&gt; - удалённая версия (та, что вливается сюда извне);
  * &lt;span style="color:green"&gt;LOCAL ●&lt;/span&gt; - локальная, рабочая копия;
  * &lt;span style="color:orange"&gt;BASE ■&lt;/span&gt; - найденный общий предок этого файла для локальной и удалённой веток;
  * Внизу отображается результат слияния. Цветными галочками справа можно выбирать нужную версию принимаемых изменений. Также, можно исправить результат вручную.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MergeTool" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/04/20/git-windows-p4merge-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;После исправления конфликтов следует сохранить всё и закрыть.&lt;/p&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Сага о X, Y и Z...</title><link href="https://blog.riuson.com/ru/posts/2016/02/21/saga-about-x-y-and-z" rel="alternate"></link><published>2016-02-21T00:00:00+05:00</published><updated>2016-02-21T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-02-21:/ru/posts/2016/02/21/saga-about-x-y-and-z</id><summary type="html">&lt;p&gt;Как устроен этот мир (или к вопросу о том, как …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как устроен этот мир (или к вопросу о том, как же важно уметь сказать, что вам всё-таки нужно).&lt;/p&gt;
&lt;p&gt;Однажды Новичок захотел сделать X. Но поскольку Новичок был новичком, X с ходу у него сделать не получилось. Ну, бывает, ничего в этом плохого нет: все мы были когда-то новичками. Чтобы решить проблему, Новичок решил воспользоваться форумом по программированию. Вы думаете он создал там тему вида: "Я хочу получить X. Пытаюсь сделать 111, получаю 222. Как сделать X?"? Нет! Новичок решил (ошибочно, т.к. Новичок пока не обладает достаточным знанием), что если он сумеет сделать Y, то с помощью Y он получит и X. Поэтому он написал: "Делаю 111, получаю 222. Как получить Y?" (ещё бывает, что Новичок задаёт только "Как сделать Y?").&lt;/p&gt;
&lt;p&gt;Чаще всего, Y бывает невозможным, некорректным, сложным или вообще страшно извращённым и нелогичным действием. У всех Понимающих людей вопрос "как сделать Y?" вызывает недоумение: зачем это нужно? Это же бессмысленно. Всеми силами (иногда с привлечением утюга!) пытаются выпытать у Новичка Понимающие, что же ему на самом деле нужно. Но не сдаётся Новичок: он же хочет узнать, как сделать Y. Каких только Слонов не рождали глубокие умы, пытаясь постичь неисповедимые пути Новичка! Иногда даже бывает так, что Понимающие знают ответ на вопрос "как сделать Y?", но специально его не говорят, потому что эти действия лишены смысла. Они ещё надеются наставить Новичка на путь истинный.&lt;/p&gt;
&lt;p&gt;Но вот, используя шаманский бубен, миелофон, шестое чувство, телепатор и прочие БС (Божественные Силы) кто-то из Понимающих вопрошает:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;- А, может быть, вы хотите сделать X?&lt;br&gt;
- Да, я хочу получить X. Как мне сделать Y?&lt;br&gt;
- Аааа! Ну тогда вам не нужно Y! Вам нужно Z! Если вы сделете Z так и сяк, то потом с помощью Z вот так и вот этак вы получите X.&lt;br&gt;
- Ой, правда. Спасибо!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Что ж, вот пример хорошей и доброй концовки, когда все остаются довольными.&lt;br&gt;
Но бывает и так, что кто-то из начинающих Понимающих (вчерашний Новичок), думая, что этим он помогает Новичку (или же сам Понимающий, но уже от безысходности, в надежде, что Новичок разумно распорядится даруемой в его руки Божественной Силой), даёт ответ на вопрос "как же сделать Y". Ура! - кричит Новичок и убегает доделывать Страшного Монстра, при встрече с которым потом даже самым смелым Понимающим целый месяц снятся кошмары. Тёмные Силы празднуют победу в этот день. Душа Новичка обречена гореть в геене огненной за грехи свои.&lt;/p&gt;
&lt;p&gt;А ещё бывает так, что Новичок думает, что ему отвечает другой новичок. И кажется ему, что ответ с Z неверен. И тогда он говорит:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"мне не нужен Z! Мне нужно сделать Y!".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;И если переубедить Новичка в том, что ему нужен Z, не удаётся, Новичок уходит на другой форум, где задаёт вопрос:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Мне нужен X! Как мне сделать Y? Использовать Z не предлагать!!!!!!"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Вот так-то.&lt;br&gt;
Что ж, хорошо, что на сей раз всё хорошо кончилось :) Вы спасли свою душу от огней ада. Но не волнуйтесь, вас ещё ожидает немало возможностей встать на путь Тёмных Сил.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;Найдено в &lt;a href="http://www.delphikingdom.ru/"&gt;Королевстве Delphi&lt;/a&gt;, в теме &lt;a href="http://www.delphikingdom.ru/asp/answer.asp?IDAnswer=60356"&gt;Ответ на вопрос № 60356&lt;/a&gt;, сообщение от &lt;a href="http://www.delphikingdom.ru/asp/users.asp?ID=3584"&gt;GunSmoker&lt;/a&gt;, 2008-03-18 15:13.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Англоязычное название &lt;strong&gt;X-Y Problem&lt;/strong&gt;:
  * &lt;a href="https://mywiki.wooledge.org/XyProblem"&gt;XyProblem&lt;/a&gt;
  * &lt;a href="http://www.perlmonks.org/index.pl?node_id=542341"&gt;XY Problem&lt;/a&gt;
  * &lt;a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem"&gt;What is the XY problem?&lt;/a&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Ubuntu и Asus E35M1-M, проблема с сетью</title><link href="https://blog.riuson.com/ru/posts/2016/02/02/ubuntu-and-asus-e35m1-m-network-problem" rel="alternate"></link><published>2016-02-02T00:00:00+05:00</published><updated>2016-02-02T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-02-02:/ru/posts/2016/02/02/ubuntu-and-asus-e35m1-m-network-problem</id><summary type="html">&lt;p&gt;Плата &lt;a href="https://www.asus.com/ru/Motherboards/E35M1M/"&gt;Asus E35M1-M&lt;/a&gt; формата Micro-ATX с распаянным процессором AMD APU …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Плата &lt;a href="https://www.asus.com/ru/Motherboards/E35M1M/"&gt;Asus E35M1-M&lt;/a&gt; формата Micro-ATX с распаянным процессором AMD APU E-350 Dual-Core.&lt;/p&gt;
&lt;p&gt;Проблема: ухудшение пинга со временем (с 1 мс до 10 &lt;strong&gt;секунд&lt;/strong&gt; и далее), падение скорости, потери пакетов, отваливание сети.&lt;/p&gt;
&lt;p&gt;Впервые столкнулся после покупки платы году так в 2012. Каким-то образом решил проблему и забыл.
Смутно припоминаю, что установил драйвера для сетевой карты из исходников.
После переустановки системы проблема всплыла снова.&lt;/p&gt;
&lt;h1&gt;r8168&lt;/h1&gt;
&lt;p&gt;На плате встроенная поддержка сети реализуется с помощью &lt;strong&gt;Realtek® 8111E , 1 x Gigabit LAN Controller(s)&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lspci -v

&lt;span class="m"&gt;03&lt;/span&gt;:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;06&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    Subsystem: ASUSTeK Computer Inc. P8P67 and other motherboards
    Flags: bus master, fast devsel, latency &lt;span class="m"&gt;0&lt;/span&gt;, IRQ &lt;span class="m"&gt;24&lt;/span&gt;
    I/O ports at e000 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0004000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4K&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0000000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;16K&lt;span class="o"&gt;]&lt;/span&gt;
    Capabilities: &amp;lt;access denied&amp;gt;
    Kernel driver in use: r8169
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Раньше надо было собирать драйвер для 8111/8168 из исходников.
Сейчас в репозитории есть пакет &lt;a href="http://packages.ubuntu.com/wily/r8168-dkms"&gt;r8168-dkms&lt;/a&gt;.
После его установки контроллер работает уже с иным драйвером:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lspci -v

&lt;span class="m"&gt;03&lt;/span&gt;:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;06&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    Subsystem: ASUSTeK Computer Inc. P8P67 and other motherboards
    Flags: bus master, fast devsel, latency &lt;span class="m"&gt;0&lt;/span&gt;, IRQ &lt;span class="m"&gt;24&lt;/span&gt;
    I/O ports at e000 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0004000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4K&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0000000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;16K&lt;span class="o"&gt;]&lt;/span&gt;
    Capabilities: &amp;lt;access denied&amp;gt;
    Kernel driver in use: r8168
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Откатить на прежний драйвер можно удалением этого пакета через --purge.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/141343"&gt;Bug #141343: r8169 driver does not work with Realtek "PCI-E" 8111B integrated network controller&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://unixblogger.wordpress.com/2011/10/18/the-pain-of-an-realtek-rtl8111rtl8168-ethernet-card/"&gt;The pain of an Realtek (RTL8111/RTL8168) ethernet card&lt;/a&gt;&lt;/br&gt;
&lt;a href="https://nelsonslog.wordpress.com/2012/01/22/realtek-ethernet-drivers-r8169-vs-r8168/"&gt;Realtek ethernet drivers: r8169 vs r8168&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Однако, говорят, что именно эта проблема с r8168 была закрыта. И действительно, установка этого драйвера в данном случае не помогла. Если в прошлый раз отваливалась локальная сеть, за этой сетевой картой, то теперь сеть провайдера за дискретной сетевой на базе 8139.&lt;/p&gt;
&lt;h1&gt;ASM1083&lt;/h1&gt;
&lt;p&gt;Простеньким скриптом было обнаружено время возникновения ошибки. Между двумя этими записями:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;========&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;T02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0500&lt;/span&gt; &lt;span class="o"&gt;========&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;998&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500253&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;211&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2370&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;411349&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;carrier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;393385246&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;393&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;127926222&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;========&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;T02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0500&lt;/span&gt; &lt;span class="o"&gt;========&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500265&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;211&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2370&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;411361&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;carrier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;393386290&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;393&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;127927258&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В kern.log обнаружилось соответствие:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771329] irq 18: nobody cared (try booting with the &amp;quot;irqpoll&amp;quot; option)&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771426] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           OE   4.2.0-25-generic #30-Ubuntu&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771430] Hardware name: System manufacturer System Product Name/E35M1-M, BIOS 1401 12/21/2011&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771435]  0000000000000000 e37fa07b054cf793 ffff88013ec03e28 ffffffff817e94c9&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771442]  0000000000000000 ffff880035cdf0bc ffff88013ec03e58 ffffffff810d6b65&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771447]  ffffffff81cbd600 ffff880035cdf000 0000000000000000 0000000000000012&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771452] Call Trace:&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771456]  &amp;lt;IRQ&amp;gt;  [&amp;lt;ffffffff817e94c9&amp;gt;] dump_stack+0x45/0x57&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771474]  [&amp;lt;ffffffff810d6b65&amp;gt;] __report_bad_irq+0x35/0xd0&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771479]  [&amp;lt;ffffffff810d6f0d&amp;gt;] note_interrupt+0x24d/0x290&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771484]  [&amp;lt;ffffffff810d432c&amp;gt;] handle_irq_event_percpu+0x11c/0x180&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771489]  [&amp;lt;ffffffff810d43d9&amp;gt;] handle_irq_event+0x49/0x70&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771494]  [&amp;lt;ffffffff810d742a&amp;gt;] handle_fasteoi_irq+0x9a/0x150&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771499]  [&amp;lt;ffffffff810172b5&amp;gt;] handle_irq+0x25/0x40&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771504]  [&amp;lt;ffffffff817f2eaf&amp;gt;] do_IRQ+0x4f/0xe0&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771508]  [&amp;lt;ffffffff817f0e2b&amp;gt;] common_interrupt+0x6b/0x6b&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771510]  &amp;lt;EOI&amp;gt;  [&amp;lt;ffffffff81060526&amp;gt;] ? native_safe_halt+0x6/0x10&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771522]  [&amp;lt;ffffffff81488261&amp;gt;] arch_safe_halt+0x9/0xd&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771526]  [&amp;lt;ffffffff814889b7&amp;gt;] acpi_safe_halt+0x22/0x2b&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771530]  [&amp;lt;ffffffff814889e0&amp;gt;] acpi_idle_do_entry+0x20/0x30&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771534]  [&amp;lt;ffffffff81488eb0&amp;gt;] acpi_idle_enter+0x1e8/0x21e&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771540]  [&amp;lt;ffffffff81687074&amp;gt;] cpuidle_enter_state+0xf4/0x270&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771544]  [&amp;lt;ffffffff81687227&amp;gt;] cpuidle_enter+0x17/0x20&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771548]  [&amp;lt;ffffffff810bd4f2&amp;gt;] call_cpuidle+0x32/0x60&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771552]  [&amp;lt;ffffffff81687203&amp;gt;] ? cpuidle_select+0x13/0x20&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771556]  [&amp;lt;ffffffff810bd788&amp;gt;] cpu_startup_entry+0x268/0x320&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771562]  [&amp;lt;ffffffff817dda2c&amp;gt;] rest_init+0x7c/0x80&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771568]  [&amp;lt;ffffffff81d50025&amp;gt;] start_kernel+0x48b/0x4ac&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771573]  [&amp;lt;ffffffff81d4f120&amp;gt;] ? early_idt_handler_array+0x120/0x120&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771577]  [&amp;lt;ffffffff81d4f339&amp;gt;] x86_64_start_reservations+0x2a/0x2c&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771581]  [&amp;lt;ffffffff81d4f485&amp;gt;] x86_64_start_kernel+0x14a/0x16d&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771584] handlers:&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771613] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771663] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771712] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771761] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771815] [&amp;lt;ffffffffc01361c0&amp;gt;] rtl8139_interrupt [8139too]&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771878] Disabling IRQ #18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Поиск по &lt;strong&gt;irq "nobody cared"&lt;/strong&gt; прояснил, что проблема, вероятно, кроется в чипе ASM1083, используемом на данной материнской плате и на других от Asus:
&lt;a href="https://bugzilla.kernel.org/show_bug.cgi?id=38632"&gt;Bug 38632 - IRQ Nobody Cared on Sandybridge Additional Ethernet Card&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.asmedia.com.tw/eng/e_show_products.php?item=114"&gt;ASMedia ASM1083&lt;/a&gt;&lt;br/&gt;
 Engaged in High Speed I/O solution development, Asmedia Technology is committed to enlarging product portfolio with introducing PCI Express Bridge Products. &lt;strong&gt;The ASM1083, x1 PCI Express to 32-bit PCI Bridge&lt;/strong&gt;, enables users to connect legacy parallel bus devices to the advanced serial PCI Express interface.  The ASM1083 is a PCI Express-to-PCI forward bridge, fully compliant with PCI-SIG PCI Express-to-PCI Bridge Specification1.0.
- Support PCI bus 33 MHz
- Support 3 PCI Masters
- SSC Support
- CLKRUN Support
- PME Support&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Из-за некой ошибки в этом чипе, при работе с устройствами за ним (на шине PCI, которую он обеспечивает), иногда происходит сбой и всё накрывается медным тазом.
Предлагаемые решения:
 - Не подключать ничего к шине PCI, т.е. не работать с устройствами через этот мост;
 - Настроить прерывания устройств на несовпадающие номера (иногда помогает);
 - Добавить &lt;strong&gt;irqpoll&lt;/strong&gt; в опции загрузки ядра (иногда помогает);
 - Не покупать платы с чипами от ASMedia.&lt;/p&gt;
&lt;p&gt;Драйвера для Windows, якобы, используют именно метод irqpoll. Это хоть и делает работу более стабильной, но отрицательно сказывается на производительности.&lt;/p&gt;</content><category term="misc"></category><category term="Ubuntu"></category></entry><entry><title>Установка и настройка Eclipse, STM32CubeMX под Windows</title><link href="https://blog.riuson.com/ru/posts/2016/01/25/setup-eclipse-stm32cubemx-on-windows" rel="alternate"></link><published>2016-01-25T00:00:00+05:00</published><updated>2016-01-25T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-01-25:/ru/posts/2016/01/25/setup-eclipse-stm32cubemx-on-windows</id><summary type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием Eclipse, STM32CubeMX, GNU ARM Embedded, GNU ARM Eclipse Plugins.
На примере микроконтроллера STM32F030F4P6.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Q68PBMGceqs"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Настройка Eclipse и STM32CubeMX под Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;На видео приведён весь процесс установки и настройки. Операционная система Windows 10, взята с сайта Microsoft: &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/windows/"&gt;Download virtual machines&lt;/a&gt;. Образы выложены там для тестирования софта под различными браузерами.&lt;/p&gt;
&lt;p class="text-warning"&gt;Описываемая последовательность не обязана работать на Вашем ПК, т.к. правильность настроек может зависеть от текущего окружения операционной системы. Если у Вас это не работает или найдёте ошибку, пишите в комментариях.&lt;/p&gt;
&lt;h1&gt;Загрузка&lt;/h1&gt;
&lt;p&gt;Список ПО, которое понадобится:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/download/"&gt;Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE for C/C++ Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/catalog/tools/FM147/CL1794/SC961/SS1743/PF259242?icmp=stm32cubemx_pron_prcube_feb2014&amp;amp;sc=stm32cube-pr"&gt;STM32CubeMX STM32Cube initialization code generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/en/catalog/tools/PF257931"&gt;STM32CubeMX Eclipse plug in for STM32 configuration and initialization C code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/en/catalog/tools/PF260612"&gt;STM32CubeF0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/gcc-arm-embedded"&gt;GCC ARM Embedded&lt;/a&gt; Windows Installer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/"&gt;The GNU ARM Eclipse plug-ins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;How to install the GNU ARM Eclipse plug-ins?&lt;/a&gt; (скачивается из самого Eclipse)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;How to install the Windows Build Tools?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.segger.com/jlink-software.html"&gt;Jlink - Software and documentation pack for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;h2&gt;Java Virtual Machine&lt;/h2&gt;
&lt;p&gt;Далее, далее, ... тут всё понятно.&lt;/p&gt;
&lt;h2&gt;Eclipse IDE for C/C++ Developers&lt;/h2&gt;
&lt;p&gt;Распаковываем архив с IDE куда-нибудь.&lt;/p&gt;
&lt;h2&gt;Windows Build Tools&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;руководстве&lt;/a&gt;. Ничего необычного.&lt;/p&gt;
&lt;h2&gt;GCC ARM Embedded&lt;/h2&gt;
&lt;p&gt;При завершения установки снимаем галочки с Launch &lt;em&gt;gccvar.bat&lt;/em&gt; и &lt;em&gt;Add path to enviroment variable&lt;/em&gt;. Чтобы можно было установить несколько компиляторов.&lt;/p&gt;
&lt;h2&gt;GNU ARM Eclipse plug-ins&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;руководстве&lt;/a&gt;.
В меню Eclipse выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt;. Добавляем сайт&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: GNU ARM Eclipse Plug-ins&lt;/li&gt;
&lt;li&gt;URL: http://gnuarmeclipse.sourceforge.net/updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;И устанавливаем всё.&lt;/p&gt;
&lt;h2&gt;STM32CubeMX Eclipse plug in&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Через меню &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt; устанавливаем плагин из архива &lt;em&gt;STSW-STM32095.zip&lt;/em&gt;.
Перезапускаем Eclipse.&lt;/p&gt;
&lt;h2&gt;STM32CubeF0&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Открываем STM32CubeMX через меню &lt;em&gt;Window&lt;/em&gt; -&amp;gt; &lt;em&gt;Show View&lt;/em&gt; -&amp;gt; &lt;em&gt;Other...&lt;/em&gt;. Там в дереве, в ветке Other, будет STM32CubeMX.
В меню STM32CubeMX выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Libraries&lt;/em&gt;, открывается окно установки пакетов под серии микроконтролллеров. Нажимаем кнопку &lt;em&gt;From Local...&lt;/em&gt; и выбираем скачанный ранее архив &lt;em&gt;STM32CubeF0.ZIP&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Jlink&lt;/h2&gt;
&lt;p&gt;Всё как обычно.&lt;/p&gt;
&lt;h1&gt;Настройка&lt;/h1&gt;
&lt;h2&gt;Создание проекта в Eclipse&lt;/h2&gt;
&lt;p&gt;В мастере создания нового проекта выбираем &lt;em&gt;C/C++&lt;/em&gt; -&amp;gt; &lt;em&gt;C Project&lt;/em&gt;.
Далее указываем имя проекта и тип &lt;em&gt;Hello World ARM C Project&lt;/em&gt;, Toolchain &lt;em&gt;Cross ARM GCC&lt;/em&gt;.
Далее меняем каталог исходников Source с &lt;em&gt;src&lt;/em&gt; на &lt;em&gt;Src&lt;/em&gt;. В Linker semi-hosting options стираем всё и пишем &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;--specs=nosys.specs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Пробуем собрать проект.&lt;/p&gt;
&lt;h2&gt;Создание проекта в STM32CubeMX&lt;/h2&gt;
&lt;h3&gt;Генерация кода&lt;/h3&gt;
&lt;p&gt;Запускаем STM32CubeMX, создаём новый проект.
В списке микроконтроллеров выбираем нужный (здесь STM32F030F4P6 для примера).
Настраиваем как нужно.
Запускаем генерацию кода из меню. Указываем имя проекта как было в Eclipse выше. Указываем Project Location на каталог workspace, где лежит тот проект. Меняем Toolchain/IDE на SW4STM32.
Запускаем.
Исходные коды проекта будут созданысгенерированы поверх уже существующего проекта.
Закрываем STM32CubeMX.&lt;/p&gt;
&lt;p&gt;Обновляем дерево проекта в Eclipse. Появляются новые каталоги, &lt;em&gt;Driver&lt;/em&gt; и &lt;em&gt;Inc&lt;/em&gt;. Сгенерированный Src совпал с уже сушествующим.
Новые каталоги исключены из сборки, поэтому включаем их через свойства в контекстном меню.
При необходимости, меняем в свойствах проект кодировку исходников на UTF-8.&lt;/p&gt;
&lt;p&gt;Создаём в каталоге &lt;em&gt;Src&lt;/em&gt; файл &lt;em&gt;startup.asm&lt;/em&gt;. Прописывываем в нём путь к стартовому файлу на ассемблере:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../Drivers/CMSIS/Device/ST/STM32F0xx/Source/Templates/gcc/startup_stm32f030x6.s&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Это позволит оставить файлы &lt;em&gt;&lt;em&gt;.s_ на месте (они не попадают под сборку ассемблером), но в то же время включить нужный в сборку через файл _&lt;/em&gt;.asm&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ищем файл &lt;em&gt;../Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_msp_template.c&lt;/em&gt; и исключаем его из сборки, через свойства файла.&lt;/p&gt;
&lt;h3&gt;Перенос настроек&lt;/h3&gt;
&lt;p&gt;Далее, надо перенести настройки проекта из сгенерированного в существующий.
Открываем XML файл сгенерированного проекта в &lt;em&gt;./SW4STM32/&lt;project name&gt; Configuration/.cproject&lt;/em&gt;.
Делаем его текст более читаемым через любое средство форматирования XML, позволяющее разнести атрибуты по строкам.&lt;/p&gt;
&lt;h4&gt;Include&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле пути для Include, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths.976375416&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Include paths (-I)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;includePath&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;..\..\..\Inc&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Compiler&lt;/em&gt; -&amp;gt; &lt;em&gt;Includes&lt;/em&gt;. Добавляем найденные каталоги из XML файла в список &lt;em&gt;Include paths (-I)&lt;/em&gt;.
Заменяем относительные пути:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;../../../Inc&lt;/span&gt;
&lt;span class="cp"&gt;../../../Drivers/STM32F0xx_HAL_Driver/Inc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ProjDirPath&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Inc
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ProjDirPath&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Define&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле макросы, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols.1801753735&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Defined symbols (-D)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;definedSymbols&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__weak=__attribute__((weak))&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Compiler&lt;/em&gt; -&amp;gt; &lt;em&gt;Preprocessor&lt;/em&gt;. Добавляем найденные макросы из XML файла в список &lt;em&gt;Defined symbols (-D)&lt;/em&gt;.
Список примерно следующий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;__packed=&amp;quot;__attribute__((__packed__))&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;USE_HAL_DRIVER&lt;/span&gt;
&lt;span class="err"&gt;STM32F030x6&lt;/span&gt;
&lt;span class="err"&gt;ARM_MATH_CM0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Последнего в XML файле нет, но без него библиотеки не соберутся.&lt;/p&gt;
&lt;h4&gt;ARM family&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Target Processor&lt;/em&gt; -&amp;gt; &lt;em&gt;ARM family&lt;/em&gt;, выбираем &lt;em&gt;cortex-m0&lt;/em&gt;, соответственно микроконтроллеру.&lt;/p&gt;
&lt;h4&gt;Linker script&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Linker&lt;/em&gt; -&amp;gt; &lt;em&gt;General&lt;/em&gt;. Добавляем в список &lt;em&gt;Scripts files (-T)&lt;/em&gt; путь к файлу скрипта, созданного при генерации проекта в STM32CubeMX. Например, &lt;em&gt;./SW4STM32/&lt;project name&gt; Configuration/STM32F030F4Px_FLASH.ld&lt;/em&gt;.
Ниже, в Miscellaneous, ставим галочку на &lt;em&gt;Use newlib-nano (--specs=nano.specs)&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Сборка.&lt;/h1&gt;
&lt;p&gt;Собираем проект.
Для ускорения сборки можно включить параллельную работу в свойствах проекта &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Behavior&lt;/em&gt; -&amp;gt; &lt;em&gt;Enable parallel build&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Отладка&lt;/h1&gt;
&lt;h2&gt;Проверка связи с отладчиком и микроконтроллером через J-Flash.&lt;/h2&gt;
&lt;p&gt;Запускаем J-Flash. Создаём новый проект. В свойствах проекта выбираем свой отладчик, &lt;em&gt;Target Interface&lt;/em&gt;, &lt;em&gt;CPU&lt;/em&gt; -&amp;gt; &lt;em&gt;Device&lt;/em&gt;. Выполняем подключение &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Connect&lt;/em&gt;. Если в логах появилась запись &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;- Connected successfully&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;, то всё OK. Если нет, разбираемся с драйверами и подключением.
Для дополнительной проверки можно считать память программ микроконтроллера через меню &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Read back&lt;/em&gt; -&amp;gt; &lt;em&gt;Entire chip&lt;/em&gt;. Должно отобразиться содержимое памяти. Если нет - опять же разбираемся с поключением.&lt;/p&gt;
&lt;h2&gt;Настройка Eclipse&lt;/h2&gt;
&lt;p&gt;Открываем меню &lt;em&gt;Debug&lt;/em&gt; -&amp;gt; &lt;em&gt;Debug Configurations...&lt;/em&gt;.
Создаём новое подключение под &lt;em&gt;GDB Segger J-Link Debugging&lt;/em&gt;.
На вкладке &lt;em&gt;Debugger&lt;/em&gt; прописываем &lt;em&gt;Device name&lt;/em&gt; (ссылка на список поддерживаемых устройств там есть справа), например &lt;em&gt;STM32F030F4&lt;/em&gt;. Выбираем подключение &lt;em&gt;Connection&lt;/em&gt; и интерфейс &lt;em&gt;Interface&lt;/em&gt;, если требуется. 
На вкладке &lt;em&gt;Common&lt;/em&gt; ставим галочку на &lt;em&gt;Debug&lt;/em&gt; в списке &lt;em&gt;Display in favorites menu&lt;/em&gt; для упрощения перехода в режим отладки.
Далее окно настроек можно закрыть и запустить отладку через меню &lt;em&gt;Debug&lt;/em&gt;.
Бинарник должен прошиться в память программ и начаться отладка, с остановкой в начале функции &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Обновление проекта&lt;/h1&gt;
&lt;p&gt;Данная структура проекта позволяет обновить проект черех генератор кода STM32CubeMX без особых усилий, при соблюдении рекомендаций к написанию пользовательского кода в предназначенных для того участках.
Запускаем STM32CubeMX. Загружаем проект STM32CubeMX (файл *.ioc, сохранённый в каталоге проекта при генерации кода).
Меняем необходимые настройки, отключаем или подключаем модули.
Потом запускаем генерацию кода и файла описания.
Файлы перезаписываются поверх существующего проекта, сохраняя упомянутые выше участки пользовательского кода.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;На этом всё.&lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Hard-coded пути в QtCore.dll</title><link href="https://blog.riuson.com/ru/posts/2016/01/09/qtcore-hard-coded-paths" rel="alternate"></link><published>2016-01-09T00:00:00+05:00</published><updated>2016-01-09T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-01-09:/ru/posts/2016/01/09/qtcore-hard-coded-paths</id><summary type="html">&lt;p&gt;Hard-coded путь qt_prfxpath в библиотеке QtCore под Windows.&lt;/p&gt;</summary><content type="html">&lt;p&gt;После обновления Qt 5.5.0 до Qt 5.5.1 оказалось, что приложение перестало работать.
Выдаваемые ошибки:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
This application failed to start because it could not find or load the Qt platform plugin "windows".
Available platform plugins are: minimal, offscreen, windows windows.
Reinstalling the application may fix the problem.
&lt;/blockquote&gt;

&lt;p&gt;и&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
Microsoft Visual C++ Runtime Library
Runtime Error!
This application has requested the Runtime to terminate it in an unusual way.
Please contact the application's support team for more information.
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="QtCore Failure 1" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="QtCore Failure 2" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Поиск недостающих зависимостей в dependency walker ничего не дал. Нужные пакеты MS VC++ Redistibutable установлены..&lt;/p&gt;
&lt;p&gt;Скачал прежнюю версию Qt, 5.5.0, но случайно установил её не в &lt;em&gt;D:\Qt&lt;/em&gt;, а в &lt;em&gt;C:\Qt&lt;/em&gt; (по умолчанию). Копирование библиотек из этой установки в каталог к приложению привёл его в рабочее состояние.&lt;/p&gt;
&lt;p&gt;По объёму и версии библиотеки оказались идентичные. В сравнении содержимого обнаружилось отличие:&lt;/p&gt;
&lt;p&gt;&lt;img alt="QtCore Compare" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Библиотека QtCore5.dll содержит в себе строку пути &lt;strong&gt;qt_prfxpath&lt;/strong&gt; к месту установки библиотеки Qt на компьютере разработчика.&lt;/p&gt;
&lt;p&gt;В багтрекере обнаружился следующий тикет: &lt;a href="https://bugreports.qt.io/browse/QTBUG-31760"&gt;QtQTBUG-31760 Local path information is baked into Qt5Core.dll causing very hard to reproduce crashes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В качестве решения предлагают задействовать &lt;a href="http://doc.qt.io/qt-5/qt-conf.html"&gt;qt.conf&lt;/a&gt; для переопределения путей.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Windows 7 - Перенос каталога пользователя на другой диск</title><link href="https://blog.riuson.com/ru/posts/2015/09/18/windows-7-move-user-dir-to-another-drive" rel="alternate"></link><published>2015-09-18T00:00:00+05:00</published><updated>2015-09-18T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-18:/ru/posts/2015/09/18/windows-7-move-user-dir-to-another-drive</id><summary type="html">&lt;p&gt;Как перенести каталог пользователя C:\Users\User на другой диск …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как перенести каталог пользователя C:\Users\User на другой диск, чтобы не забивать зря пространство.&lt;/p&gt;
&lt;p&gt;Установили Windows 7, получили одного пользователя (например, &lt;em&gt;Vasya&lt;/em&gt;) с правами администратора.&lt;/p&gt;
&lt;p&gt;Активируем учётную запись &lt;em&gt;Администратора&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;net user administrator /active:yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Выходим из учётной записи &lt;em&gt;Vasya&lt;/em&gt;, заходим под &lt;em&gt;Администратором&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Создаём на диске другом диске каталог для пользователя.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;mkdir D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Копируем прежний каталог пользователя в новое место&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;robocopy /copyall /mir /xj C:\Users\Vasya D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Удаляем прежний каталог пользователя&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;rmdir /S /Q C:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Создаём ссылку со старого местоположения на новое&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;mklink /J C:\Users\Vasya D:\Users\Vasya&lt;/span&gt;
&lt;span class="err"&gt;Junction created for C:\Users\Vasya &amp;lt;&amp;lt;===&amp;gt;&amp;gt; D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Готово.
Всё файлы, создаваемые операционной системой или сторонними программами в папках пользователя, будут находиться на диске D, и в то же время будут доступны по старому пути на диске C.&lt;/p&gt;</content><category term="misc"></category><category term="Windows7"></category></entry><entry><title>Git - корректировка дат в коммитах</title><link href="https://blog.riuson.com/ru/posts/2015/09/17/git-commit-dates-correction" rel="alternate"></link><published>2015-09-17T00:00:00+05:00</published><updated>2015-09-17T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-17:/ru/posts/2015/09/17/git-commit-dates-correction</id><summary type="html">&lt;p&gt;Как сменить дату коммита в Git&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Замена дат в предыдущих коммитах.&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://eddmann.com/posts/changing-the-timestamp-of-a-previous-git-commit/"&gt;Changing the timestamp of a previous Git commit&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git filter-branch --env-filter &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;if test \$GIT_COMMIT = &amp;#39;e6dbcffca68e4b51887ef660e2389052193ba4f4&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;then&lt;/span&gt;
&lt;span class="s2"&gt;    export GIT_AUTHOR_DATE=&amp;#39;Sat, 14 Dec 2013 12:40:00 +0000&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;    export GIT_COMMITTER_DATE=&amp;#39;Sat, 14 Dec 2013 12:40:00 +0000&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;fi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -fr &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --git-dir&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/refs/original/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Замена даты в новом коммите.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;GIT_COMMITTER_DATE=&amp;quot;2000-01-01 12:00:00 +0300&amp;quot; git commit --date &amp;quot;2000-01-01 12:00:00 +0300&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Обновление PATH пользователя из командной строки</title><link href="https://blog.riuson.com/ru/posts/2015/09/03/updating-user-path-variable-from-command-line" rel="alternate"></link><published>2015-09-03T00:00:00+05:00</published><updated>2015-09-03T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-03:/ru/posts/2015/09/03/updating-user-path-variable-from-command-line</id><summary type="html">&lt;p&gt;Обновление пользовательской переменной окружения PATH из командной строки.&lt;/p&gt;
&lt;h3&gt;Git Bash …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;Обновление пользовательской переменной окружения PATH из командной строки.&lt;/p&gt;
&lt;h3&gt;Git Bash:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;setlocal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ENABLEEXTENSIONS&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;HKEY_CURRENT_USER\Environment&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;FOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;usebackq skip=2 tokens=1,2*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;REG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QUERY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;^&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueName&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueType&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defined&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;@echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;@echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;NOT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path%&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path:Git=%&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;added&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Adding&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;setx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path%;c:\Tools\Git64\bin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;PowerShell&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Current path: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EnsurePathAdded&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.String&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Exists: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathNew&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;SetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathNew&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathUpdated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathUpdated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Added: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Failed to add path: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;EnsurePathAdded&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;c:\Work\Tools\Git64\bin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Опциональный запуск через bat:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;@echo off&lt;/span&gt;
&lt;span class="err"&gt;set dir=%cd%&lt;/span&gt;
&lt;span class="err"&gt;PowerShell.exe -ExecutionPolicy bypass %dir%\update-path.ps1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>STM32 HAL UART DMA приём пакетов переменной длины</title><link href="https://blog.riuson.com/ru/posts/2015/07/27/stm32-hal-uart-dma-rx-variable-length" rel="alternate"></link><published>2015-07-27T00:00:00+05:00</published><updated>2015-07-27T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-07-27:/ru/posts/2015/07/27/stm32-hal-uart-dma-rx-variable-length</id><summary type="html">&lt;p&gt;STM32 HAL UART Приём данных переменной длины с помощью DMA …&lt;/p&gt;</summary><content type="html">&lt;p&gt;STM32 HAL UART Приём данных переменной длины с помощью DMA.&lt;/p&gt;
&lt;p&gt;Добавляем определение обработчика для IDLE.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h b/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gu"&gt;@@ -693,6 +693,7 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart);&lt;/span&gt;
 void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
&lt;span class="gi"&gt;+void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart);&lt;/span&gt;
 void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Добавляем обработку прерывания IDLE в обработчик прерываний UART.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c b/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1238,6 +1238,15 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)&lt;/span&gt;
     UART_EndTransmit_IT(huart);
   }  

&lt;span class="gi"&gt;+  tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  /* UART in mode Transmitter end --------------------------------------------*/&lt;/span&gt;
&lt;span class="gi"&gt;+  if((tmp_flag != RESET) &amp;amp;&amp;amp; (tmp_it_source != RESET))&lt;/span&gt;
&lt;span class="gi"&gt;+  {&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_CLEAR_IDLEFLAG(huart);&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_RxIdleCallback(huart);&lt;/span&gt;
&lt;span class="gi"&gt;+  }&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
   if(huart-&amp;gt;ErrorCode != HAL_UART_ERROR_NONE)
   {
     /* Set the UART state ready to be able to start again the process */
&lt;span class="gu"&gt;@@ -1248,6 +1257,19 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)&lt;/span&gt;
 }

 /**
&lt;span class="gi"&gt;+  * @brief  Rx Idle callbacks.&lt;/span&gt;
&lt;span class="gi"&gt;+  * @param  huart: Pointer to a UART_HandleTypeDef structure that contains&lt;/span&gt;
&lt;span class="gi"&gt;+  *                the configuration information for the specified UART module.&lt;/span&gt;
&lt;span class="gi"&gt;+  * @retval None&lt;/span&gt;
&lt;span class="gi"&gt;+  */&lt;/span&gt;
&lt;span class="gi"&gt;+__weak void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+ /* NOTE: This function should not be modified, when the callback is needed,&lt;/span&gt;
&lt;span class="gi"&gt;+          the HAL_UART_RxIdleCallback can be implemented in the user file&lt;/span&gt;
&lt;span class="gi"&gt;+  */&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+/**&lt;/span&gt;
   * @brief  Tx Transfer completed callbacks.
   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
   *                the configuration information for the specified UART module.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Доработка задачи приёма.&lt;br&gt;
Настраивается приём через DMA для пакета размером в весь доступный буфер.&lt;br&gt;
Затем идёт ожидание семафора. Семафор устанавливается в обработчике IDLE.&lt;br&gt;
После, вычисляется количество принятых данных, как разница между ожидаемым количеством (размером буфера) и оставшимся (ещё не принятым) CNDTR.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Src/freertos.c b/Src/freertos.c&lt;/span&gt;
&lt;span class="gh"&gt;index a7db5b3..5ffd4df 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Src/freertos.c&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Src/freertos.c&lt;/span&gt;
&lt;span class="gu"&gt;@@ -38,13 +38,15 @@&lt;/span&gt;

 /* USER CODE BEGIN Includes */     
 #include &amp;quot;stm32f1xx_hal.h&amp;quot;
&lt;span class="gi"&gt;+#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
 /* USER CODE END Includes */

 /* Variables -----------------------------------------------------------------*/
 osThreadId taskTestHandle;
 osThreadId taskSerialCommHandle;
 osThreadId taskDisplayHandle;
&lt;span class="gd"&gt;-osSemaphoreId semSerialCommReceivedHandle;&lt;/span&gt;
&lt;span class="gi"&gt;+osSemaphoreId semSerialCommRxIdleHandle;&lt;/span&gt;
&lt;span class="gi"&gt;+osSemaphoreId semSerialCommTxCompletedHandle;&lt;/span&gt;

 /* USER CODE BEGIN Variables */
 extern UART_HandleTypeDef huart1;
&lt;span class="gu"&gt;@@ -75,9 +77,13 @@ void MX_FREERTOS_Init(void) {&lt;/span&gt;
   /* USER CODE END RTOS_MUTEX */

   /* Create the semaphores(s) */
&lt;span class="gd"&gt;-  /* definition and creation of semSerialCommReceived */&lt;/span&gt;
&lt;span class="gd"&gt;-  osSemaphoreDef(semSerialCommReceived);&lt;/span&gt;
&lt;span class="gd"&gt;-  semSerialCommReceivedHandle = osSemaphoreCreate(osSemaphore(semSerialCommReceived), 1);&lt;/span&gt;
&lt;span class="gi"&gt;+  /* definition and creation of semSerialCommRxIdle */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreDef(semSerialCommRxIdle);&lt;/span&gt;
&lt;span class="gi"&gt;+  semSerialCommRxIdleHandle = osSemaphoreCreate(osSemaphore(semSerialCommRxIdle), 1);&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+  /* definition and creation of semSerialCommTxCompleted */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreDef(semSerialCommTxCompleted);&lt;/span&gt;
&lt;span class="gi"&gt;+  semSerialCommTxCompletedHandle = osSemaphoreCreate(osSemaphore(semSerialCommTxCompleted), 1);&lt;/span&gt;

   /* USER CODE BEGIN RTOS_SEMAPHORES */
   /* add semaphores, ... */
&lt;span class="gu"&gt;@@ -126,10 +132,29 @@ void TaskTestStart(void const * argument)&lt;/span&gt;
 void TaskSerialCommStart(void const * argument)
 {
   /* USER CODE BEGIN TaskSerialCommStart */
&lt;span class="gi"&gt;+  int i, retval, rcvdCount;&lt;/span&gt;
&lt;span class="gi"&gt;+  /* Set semaphores to default state */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreWait(semSerialCommRxIdleHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreWait(semSerialCommTxCompletedHandle, osWaitForever);&lt;/span&gt;
   /* Infinite loop */
   for(;;)
   {
&lt;span class="gd"&gt;-    osDelay(1000);&lt;/span&gt;
&lt;span class="gi"&gt;+    uint8_t buffer[32];&lt;/span&gt;
&lt;span class="gi"&gt;+    memset(buffer, 0, sizeof(buffer));&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_CLEAR_IDLEFLAG(&amp;amp;huart1);&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_ENABLE_IT(&amp;amp;huart1, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+    if (HAL_UART_Receive_DMA(&amp;amp;huart1, buffer, sizeof(buffer)) != HAL_OK) {&lt;/span&gt;
&lt;span class="gi"&gt;+      // error&lt;/span&gt;
&lt;span class="gi"&gt;+    }&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    retval = osSemaphoreWait(semSerialCommRxIdleHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+    rcvdCount = sizeof(buffer) - huart1.hdmarx-&amp;gt;Instance-&amp;gt;CNDTR;&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_DMAStop(&amp;amp;huart1);&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_Transmit_DMA(&amp;amp;huart1, buffer, rcvdCount);&lt;/span&gt;
&lt;span class="gi"&gt;+    retval = osSemaphoreWait(semSerialCommTxCompletedHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_DMAStop(&amp;amp;huart1);&lt;/span&gt;
   }
   /* USER CODE END TaskSerialCommStart */
 }
&lt;span class="gu"&gt;@@ -147,6 +172,21 @@ void TaslDisplayStart(void const * argument)&lt;/span&gt;
 }

 /* USER CODE BEGIN Application */
&lt;span class="gi"&gt;+void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommTxCompletedHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommRxIdleHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  __HAL_UART_DISABLE_IT(huart, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommRxIdleHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
 /* USER CODE END Application */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Samsung Galaxy S3 &amp; Beeline</title><link href="https://blog.riuson.com/ru/posts/2015/05/01/samsung-galaxy-s3-beeline" rel="alternate"></link><published>2015-05-01T00:00:00+05:00</published><updated>2015-05-01T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-05-01:/ru/posts/2015/05/01/samsung-galaxy-s3-beeline</id><summary type="html">&lt;p&gt;Восстановление мобильного интернета Beeline на Samsung Galaxy S III.&lt;/p&gt;
&lt;p&gt;В …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Восстановление мобильного интернета Beeline на Samsung Galaxy S III.&lt;/p&gt;
&lt;p&gt;В последней прошивке для Samsung Galaxy S III перестал работать интернет от оператора Beeline.&lt;/p&gt;
&lt;p&gt;Причина в настройках точки доступа, установленных по умолчанию. Хоть там ничего особенного и не видно, всё вроде бы правильно. Кстати, секунд 30 после хард-ресета, в ходе настройки Android, интернет всё ещё работает.&lt;/p&gt;
&lt;p&gt;Для исправления создаём новую точку доступа со следующими известными настройками:&lt;/p&gt;
&lt;p&gt;| Параметр  | Значение |
| ------------- | ------------- |
| Имя  | internet  |
| Точка доступа  | internet.beeline.ru  |
| Прокси  | Не установлено  |
| Порт  | Не установлено  |
| Имя пользователя  | beeline  |
| Пароль  | beeline  |
| Сервер  | Не установлено  |
| MMSC  | Не установлено  |
| Прокси MMS  | Не установлено  |
| Порт MMS  | Не установлено  |
| MCC  | 250  |
| MNC  | 99  |
| Тип проверки подлинности  | PAP  |
| Тип точки доступа  | default  |
| Протокол APN  | IPv4  |
| Протокол роуминга точки доступа  | IPv4  |
| Включить или отключить сеть APN  | Точка доступа включена  |
| Канал  | Не указано  |
| Тип оператора мобильной виртуальной сети  | Нет  |
| Значение оператора мобильной виртуальной сети  | Не установлено  |&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-2" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;В конце мая ошибку признали: &lt;a href="http://www.cnews.ru/top/2015/05/29/samsung_izza_oshibki_v_svoem_po_porekomendoval_rossiyskim_polzovatelyam_smenit_sotovogo_operatora_596085"&gt;Samsung из-за ошибки в своем ПО порекомендовал российским пользователям сменить сотового оператора&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Дело было в использовании IPv6 в APN, вместо IPv4:&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-3" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-3.png" /&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Установка Windows 7 на GPT и UEFI BIOS</title><link href="https://blog.riuson.com/ru/posts/2015/01/10/setup-windows-7-on-gpt-with-uefi" rel="alternate"></link><published>2015-01-10T00:00:00+05:00</published><updated>2015-01-10T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-01-10:/ru/posts/2015/01/10/setup-windows-7-on-gpt-with-uefi</id><summary type="html">&lt;p&gt;Как сделать из обычного диска Windows 7 установочный диск для …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как сделать из обычного диска Windows 7 установочный диск для UEFI/GPT.&lt;/p&gt;
&lt;p&gt;Требуется USB Flash Drive на 4 ГБ или больше.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Качаем образ оригинальной Windows 7 x64 Ultimate, можно и с MSDN, если есть логин;&lt;/li&gt;
&lt;li&gt;Форматируем флэшку в один раздел с FAT32;&lt;/li&gt;
&lt;li&gt;Распаковываем образ винды на флэшку;&lt;/li&gt;
&lt;li&gt;Удаляем с флэшки 1 файл - &lt;strong&gt;EI.CFG&lt;/strong&gt;, лежит по пути &lt;strong&gt;FLASH:\SOURCES\EI.CFG&lt;/strong&gt;, это поволит выбрать версию устанавливаемой винды, которая вам нужна;&lt;/li&gt;
&lt;li&gt;Открываем на диске папку &lt;strong&gt;FLASH:\EFI&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Создаём внутри неё папку &lt;strong&gt;BOOT&lt;/strong&gt; (&lt;strong&gt;FLASH:\EFI\BOOT&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Копируем всё содержимое из &lt;strong&gt;FLASH:\EFI\MICROSOFT\BOOT&lt;/strong&gt; в &lt;strong&gt;FLASH:\EFI\BOOT&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Архиватором 7-zip открываем файл &lt;strong&gt;FLASH:\SOURCES\BOOT.WIM&lt;/strong&gt; или &lt;strong&gt;FLASH:\SOURCES\INSTALL.WIM&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;В архиве переходим в папку &lt;strong&gt;\1\Windows\Boot\EFI&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;В этот папке архива находим файл &lt;strong&gt;BOOTMGFW.EFI&lt;/strong&gt; и копируем его на флэшку в папку &lt;strong&gt;FLASH:\EFI\BOOT\ &lt;/strong&gt; ;&lt;/li&gt;
&lt;li&gt;Переименовываем &lt;strong&gt;BOOTMGFW.EFI&lt;/strong&gt; в &lt;strong&gt;BOOTX64.EFI&lt;/strong&gt; (будет &lt;strong&gt;FLASH:\EFI\BOOT\BOOTX64.EFI&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Загружаем комп в биос UEFI;&lt;/li&gt;
&lt;li&gt;В загрузочном меню ищем что-то типа UEFI (FAT) Flash Drive. Там должна быть обычная флэшка, и флэшка в режиме UEFI загрузчика. Вот вторую и надо. См. рисунок ниже;&lt;/li&gt;
&lt;li&gt;Запускаем её и устанавливаем Windows на GPT в режиме UEFI.&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category><category term="Windows7"></category><category term="GPT"></category><category term="UEFI"></category></entry><entry><title>Настройки управления самолётом в Battlefield 3</title><link href="https://blog.riuson.com/ru/posts/2014/09/03/setup-jet-control-in-battlefield-3" rel="alternate"></link><published>2014-09-03T00:00:00+06:00</published><updated>2014-09-03T00:00:00+06:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-09-03:/ru/posts/2014/09/03/setup-jet-control-in-battlefield-3</id><summary type="html">&lt;ul&gt;
&lt;li&gt;Поворот вверх - пробелом.&lt;/li&gt;
&lt;li&gt;Рыскание влево/вправо - мышью.&lt;/li&gt;
&lt;li&gt;Поворот налево/направо …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;Поворот вверх - пробелом.&lt;/li&gt;
&lt;li&gt;Рыскание влево/вправо - мышью.&lt;/li&gt;
&lt;li&gt;Поворот налево/направо - A/D.&lt;/li&gt;
&lt;li&gt;Выход из кабины - F1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Для минимального радиуса разворота следует поддерживать скорость в пределах 305-315. Если крутиться в горизонтальной плоскости, достаточно иногда притормаживать кнопкой S.&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/09/03/setup-jet-control-in-battlefield-3-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/09/03/setup-jet-control-in-battlefield-3-2.png" /&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Games"></category></entry><entry><title>Paradox &amp; Windows 7 x64</title><link href="https://blog.riuson.com/ru/posts/2014/07/28/paradox-windows-7-x64" rel="alternate"></link><published>2014-07-28T00:00:00+06:00</published><updated>2014-07-28T00:00:00+06:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-28:/ru/posts/2014/07/28/paradox-windows-7-x64</id><summary type="html">&lt;p&gt;Костыли для установки этого анахронизма на Windows 7 x64.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка BDE на Windows 7 x64&lt;/p&gt;
&lt;p&gt;Идём на сайт Inno Setup.
http://www.jrsoftware.org/iskb.php?bde&lt;/p&gt;
&lt;p&gt;Скачиваем файлы minireg.exe и bdeinst.cab.
Распаковываем bdeinst.dll из bdeinst.cab (7zip, например), устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ minireg.exe bdeinst.dll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="bde-install" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/28/paradox-windows-7-x64-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Запускаем &lt;code&gt;C:\Program Files (x86)\Common Files\Borland Shared\BDE\BDEADMIN.EXE&lt;/code&gt; из под админа.
На вкладке Configuration в дереве находим &lt;strong&gt;Configuration&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Drivers&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Native&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Paradox&lt;/strong&gt;.
Путь &lt;strong&gt;NET DIR&lt;/strong&gt; меняем на любой каталог, к которому есть полный доступ у пользователя, который будет запускать программу с БД.&lt;/p&gt;
&lt;p&gt;&lt;img alt="bde-admin" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/28/paradox-windows-7-x64-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Если используемая программа не может сама создать алиас к БД, на вкладке Databases добавляем алиас вручную.&lt;/p&gt;</content><category term="misc"></category><category term="Windows 7"></category></entry></feed>