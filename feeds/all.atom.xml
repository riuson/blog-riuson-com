<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>riuson.com</title><link href="https://blog.riuson.com/" rel="alternate"></link><link href="https://blog.riuson.com/feeds/all.atom.xml" rel="self"></link><id>https://blog.riuson.com/</id><updated>2017-09-07T00:00:00+05:00</updated><entry><title>Atlassian SourceTree, Git и нестандартный порт</title><link href="https://blog.riuson.com/ru/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port" rel="alternate"></link><published>2017-09-07T00:00:00+05:00</published><updated>2017-09-07T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-09-07:/ru/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port</id><summary type="html">&lt;p&gt;Как указать порт к Git репозиторию в Atlassian SourceTree.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Обычный url репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git@github.com:riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Url репозитория с указанием порта:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh://git@github.com:22/riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Git Port" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port-1.png" /&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Atlassian SourceTree, Git and non-standard port</title><link href="https://blog.riuson.com/en/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port" rel="alternate"></link><published>2017-09-07T00:00:00+05:00</published><updated>2017-09-07T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-09-07:/en/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port</id><summary type="html">&lt;p&gt;How to specify port for git repository in Atlassian SourceTree.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Usual repository url:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git@github.com:riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Repository url with port:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh://git@github.com:22/riuson/lcd-image-converter.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Git Port" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/09/07/atlassian-sourcetree-git-and-non-standard-port-1.png" /&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows + KDiff3</title><link href="https://blog.riuson.com/ru/posts/2017/08/17/git-windows-kdiff3" rel="alternate"></link><published>2017-08-17T00:00:00+05:00</published><updated>2017-08-17T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-17:/ru/posts/2017/08/17/git-windows-kdiff3</id><summary type="html">&lt;p&gt;Настройка KDiff3 в качестве mergetool и difftool в Git for Windows.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка KDiff3 в качестве mergetool и difftool в Git for Windows.&lt;/p&gt;
&lt;p&gt;Устанавливаем &lt;a href="https://sourceforge.net/projects/kdiff3"&gt;KDiff3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;В Git Bash прописываем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add merge.tool kdiff3&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add mergetool.kdiff3.path &amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add mergetool.kdiff3.trustExitCode false&lt;/span&gt;

&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add diff.guitool kdiff3&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add difftool.kdiff3.path &amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="c1"&gt;--global --add difftool.kdiff3.trustExitCode false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows + KDiff3</title><link href="https://blog.riuson.com/en/posts/2017/08/17/git-windows-kdiff3" rel="alternate"></link><published>2017-08-17T00:00:00+05:00</published><updated>2017-08-17T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-17:/en/posts/2017/08/17/git-windows-kdiff3</id><summary type="html">&lt;p&gt;How to setup KDiff3 as mergetool and difftool in Git for Windows.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Setup KDiff3 as mergetool and difftool in Git for Windows.&lt;/p&gt;
&lt;p&gt;Download and install &lt;a href="https://sourceforge.net/projects/kdiff3"&gt;KDiff3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Execute following commands at Git Bash:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global --add merge.tool kdiff3
git config --global --add mergetool.kdiff3.path &lt;span class="s2"&gt;&amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
git config --global --add mergetool.kdiff3.trustExitCode &lt;span class="nb"&gt;false&lt;/span&gt;

git config --global --add diff.guitool kdiff3
git config --global --add difftool.kdiff3.path &lt;span class="s2"&gt;&amp;quot;C:/Program Files/KDiff3/kdiff3.exe&amp;quot;&lt;/span&gt;
git config --global --add difftool.kdiff3.trustExitCode &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows - указание домашнего каталога</title><link href="https://blog.riuson.com/ru/posts/2017/08/03/git-for-windows-custom-home-directory" rel="alternate"></link><published>2017-08-03T00:00:00+05:00</published><updated>2017-08-03T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-03:/ru/posts/2017/08/03/git-for-windows-custom-home-directory</id><summary type="html">&lt;p&gt;Что делать, если требуется изменить расположение домашнего каталога &lt;em&gt;~/home&lt;/em&gt;, например для хранения ключей SSH в определённом месте.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Если требуется изменить расположение домашнего каталога &lt;em&gt;~/home&lt;/em&gt;, например для хранения ключей SSH в определённом месте.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Скачать &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Установить.&lt;/li&gt;
&lt;li&gt;Перейти в каталог установки. Например '*d:\Software\Installed\Git*'&lt;/li&gt;
&lt;li&gt;Открыть файл '&lt;em&gt;./etc/profile&lt;/em&gt;' .&lt;/li&gt;
&lt;li&gt;Добавить первой строкой:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;# HOME=&amp;quot;path-to-home-dir&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;HOME=&amp;quot;d:/Software/Installed/Git/home/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Git for Windows - custom home directory</title><link href="https://blog.riuson.com/en/posts/2017/08/03/git-for-windows-custom-home-directory" rel="alternate"></link><published>2017-08-03T00:00:00+05:00</published><updated>2017-08-03T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-08-03:/en/posts/2017/08/03/git-for-windows-custom-home-directory</id><summary type="html">&lt;p&gt;How to change home directory &lt;em&gt;~/home&lt;/em&gt;, for example to store SSH keys in other location.&lt;/p&gt;</summary><content type="html">&lt;p&gt;If it is required to change home directory &lt;em&gt;~/home&lt;/em&gt;, for example to store SSH keys in other location.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download &lt;a href="https://git-scm.com/downloads"&gt;Git for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install it.&lt;/li&gt;
&lt;li&gt;Navigate to installation directory. For example '*d:\Software\Installed\Git*'&lt;/li&gt;
&lt;li&gt;Open file '&lt;em&gt;./etc/profile&lt;/em&gt;' .&lt;/li&gt;
&lt;li&gt;Add first line like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# HOME=&amp;quot;path-to-home-dir&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d:/Software/Installed/Git/home/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Как собрать необходимые DLL для приложения на Qt</title><link href="https://blog.riuson.com/ru/posts/2017/07/23/qt-deploy-on-windows" rel="alternate"></link><published>2017-07-23T00:00:00+05:00</published><updated>2017-07-23T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-23:/ru/posts/2017/07/23/qt-deploy-on-windows</id><summary type="html">&lt;p&gt;Как собрать DLL, необходимые для работы Qt приложения с динамической линковкой.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Как собрать динамические библиотеки, требуемые для приложения на Qt.&lt;/h2&gt;
&lt;p&gt;Исходная статья: &lt;a href="http://doc.qt.io/qt-5/windows-deployment.html"&gt;Qt for Windows - Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Создать простой батник *.bat со следующими командами:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Добавить&lt;/span&gt; &lt;span class="err"&gt;путь&lt;/span&gt; &lt;span class="err"&gt;к&lt;/span&gt; &lt;span class="err"&gt;набору&lt;/span&gt; &lt;span class="n"&gt;MinGW&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;переменную&lt;/span&gt; &lt;span class="err"&gt;окружения&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Tools&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mingw530_32&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Установить&lt;/span&gt; &lt;span class="err"&gt;путь&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;куда&lt;/span&gt; &lt;span class="err"&gt;будет&lt;/span&gt; &lt;span class="err"&gt;помещено&lt;/span&gt; &lt;span class="err"&gt;приложение&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;требуемые&lt;/span&gt; &lt;span class="err"&gt;им&lt;/span&gt; &lt;span class="err"&gt;библиотеки&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Путь&lt;/span&gt; &lt;span class="err"&gt;к&lt;/span&gt; &lt;span class="err"&gt;каталогу&lt;/span&gt; &lt;span class="err"&gt;со&lt;/span&gt; &lt;span class="err"&gt;скомпилированным&lt;/span&gt; &lt;span class="err"&gt;исполняемым&lt;/span&gt; &lt;span class="err"&gt;файлом&lt;/span&gt; &lt;span class="err"&gt;приложения&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Desktop_Qt_5_9_0_MinGW_32bit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Release&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;output&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;исполняемый&lt;/span&gt; &lt;span class="err"&gt;файл&lt;/span&gt;
&lt;span class="n"&gt;xcopy&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;source&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;остальные&lt;/span&gt; &lt;span class="err"&gt;необходимые&lt;/span&gt; &lt;span class="err"&gt;ресурсы&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;xcopy&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;readme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;Копируем&lt;/span&gt; &lt;span class="err"&gt;библиотеки&lt;/span&gt; &lt;span class="err"&gt;с&lt;/span&gt; &lt;span class="err"&gt;помощью&lt;/span&gt; &lt;span class="n"&gt;windeployqt&lt;/span&gt;
&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mingw53_32&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;windeployqt&lt;/span&gt; &lt;span class="c1"&gt;--release --force --compiler-runtime %destination%my-project.exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запустить батник.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Qt Deploy on Windows</title><link href="https://blog.riuson.com/en/posts/2017/07/23/qt-deploy-on-windows" rel="alternate"></link><published>2017-07-23T00:00:00+05:00</published><updated>2017-07-23T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-23:/en/posts/2017/07/23/qt-deploy-on-windows</id><summary type="html">&lt;p&gt;How to collect DLLs, what are required to run Qt application with dinamic linking.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;How to deploy dynamically linked application with DLLs.&lt;/h2&gt;
&lt;p&gt;Source article: &lt;a href="http://doc.qt.io/qt-5/windows-deployment.html"&gt;Qt for Windows - Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create simple Windows Batch file *.bat with commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;; Add path to MinGW tools to &lt;span class="nv"&gt;%PATH%&lt;/span&gt; environment variable.
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;%PATH%&lt;/span&gt;;c:\Qt\Tools\mingw530_32\bin\

; &lt;span class="k"&gt;Set&lt;/span&gt; &lt;span class="nv"&gt;output path for application and DLLs&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;d:\projects\my-project\output\

; &lt;span class="k"&gt;Path&lt;/span&gt; to directory with executable file of application
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;d:\projects\my-project\build-my-project-Desktop_Qt_5_9_0_MinGW_32bit-Release\release\windows\output\

; &lt;span class="k"&gt;Copy&lt;/span&gt; executable file
xcopy &lt;span class="nv"&gt;%source%&lt;/span&gt;my-project.exe &lt;span class="nv"&gt;%destination%&lt;/span&gt; /y

; &lt;span class="k"&gt;Copy&lt;/span&gt; other necessary resources ...
xcopy .\sources\resources\readme.md &lt;span class="nv"&gt;%destination%&lt;/span&gt; /y

; Run windeployqt
c&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\Qt\5.9\mingw53_32\bin\windeployqt&lt;/span&gt;&lt;span class="c1"&gt; --release --force --compiler-runtime %destination%my-project.exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run batch file.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Статическая сборка Qt на Windows с MinGW</title><link href="https://blog.riuson.com/ru/posts/2017/07/19/qt-static-build-on-windows-with-mingw" rel="alternate"></link><published>2017-07-19T00:00:00+05:00</published><updated>2017-07-19T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-19:/ru/posts/2017/07/19/qt-static-build-on-windows-with-mingw</id><summary type="html">&lt;p&gt;Сборка статического комплекта Qt для получения приложения без зависимостей от других библиотек Qt.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Оригинал: &lt;a href="https://wiki.qt.io/Building_a_static_Qt_for_Windows_using_MinGW"&gt;Building a static Qt for Windows using MinGW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Загрузить и установить Qt. Не забыть выбрать набор MinGW:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Установка" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Запомнить каталог, куда установился MinGW. Например, *&lt;em&gt;D:\Qt\Tools\mingw530_32\bin*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Загрузить скрипт для PowerShell &lt;a href="https://sourceforge.net/p/qtlmovie/code/ci/v1.2.16/tree/build/windows-build-qt-static.ps1?format=raw"&gt;windows-build-qt-static.ps1&lt;/a&gt;.
Сохранить, например в *&lt;em&gt;D:\Qt*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Выбрать версию Qt в &lt;a href="http://download.qt.io/official_releases/qt/"&gt;Qt Downloads&lt;/a&gt; и запомнить ссылку на неё &lt;strong&gt;{Версия}/{Версия}/single/qt-everywhere-opensource-src-{Версия}.zip&lt;/strong&gt;. Например, http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&lt;/p&gt;
&lt;p&gt;Создать файл &lt;strong&gt;windows-build-run.bat&lt;/strong&gt; со следующим содержимым:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;PowerShell -NoProfile -ExecutionPolicy Bypass -Command &amp;quot;&amp;amp; &amp;#39;D:\Qt\windows-build-qt-static.ps1&amp;#39; -QtSrcUrl &amp;#39;http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&amp;#39; -QtStaticDir &amp;#39;D:\Qt\Static591&amp;#39; -MingwDir &amp;#39;D:\Qt\Tools\mingw530_32&amp;#39; -QtVersion &amp;#39;5.9.1-Static&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;где
  * -QtSrcUrl - ссылка на архив с исходниками;
  * -QtStaticDir - каталог для установки новой статической сборки Qt;
  * -MingwDir - путь к набору MinGW.&lt;/p&gt;
&lt;div class="alert alert-warning" role="alert"&gt;
Строка QtVersion не должна содержать пробелов!&lt;br&gt;
Иначе при сборке будет получена ошибка типа
&lt;code&gt;&lt;br&gt;
ERROR: Invalid command line parameter 'Static'.&lt;br&gt;
mingw32-make: *** No targets specified and no makefile found.  Stop.&lt;br&gt;
mingw32-make: *** No rule to make target 'install'.
&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;Запустить &lt;strong&gt;cmd.exe&lt;/strong&gt;, перейти в каталог со скриптами, &lt;strong&gt;D:\Qt&lt;/strong&gt;, запустить &lt;strong&gt;windows-build-run.bat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Если выдаётся ошибка на тему &lt;strong&gt;SQLite&lt;/strong&gt;, надо открыть файл &lt;strong&gt;windows-build-qt-static.ps1&lt;/strong&gt; в редакторе и заменить &lt;strong&gt;-qt-sql-sqlite&lt;/strong&gt; на &lt;strong&gt;-sql-sqlite&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ждём несколько часов.............&lt;/p&gt;
&lt;p&gt;Добавляем собранный Qt в Qt Creator: &lt;strong&gt;Инструменты&lt;/strong&gt; → &lt;strong&gt;Параметры&lt;/strong&gt; → &lt;strong&gt;Сборка и запуск&lt;/strong&gt; → &lt;strong&gt;Профили Qt&lt;/strong&gt; → &lt;strong&gt;Добавить...&lt;/strong&gt;. Указать путь к файлу &lt;strong&gt;qmake.exe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Версии Qt" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Добавляем новый комплект: &lt;strong&gt;Инструменты&lt;/strong&gt; → &lt;strong&gt;Параметры&lt;/strong&gt; → &lt;strong&gt;Сборка и запуск&lt;/strong&gt; → &lt;strong&gt;Комплекты&lt;/strong&gt; → &lt;strong&gt;Добавить...&lt;/strong&gt;. Выбрать компилятор C/C++ = MinGW 5.3.0, отладчик = GNU gdb из MinGW 5.3.0 и свежесобранный профиль Qt.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Комплекты" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Выбрать комплект для проект:&lt;/p&gt;
&lt;p&gt;&lt;img alt="выбор комплекта" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;После сборки получится изрядно потолстевший исполняемый файл.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Qt Static Build on Windows with MinGW</title><link href="https://blog.riuson.com/en/posts/2017/07/19/qt-static-build-on-windows-with-mingw" rel="alternate"></link><published>2017-07-19T00:00:00+05:00</published><updated>2017-07-19T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-07-19:/en/posts/2017/07/19/qt-static-build-on-windows-with-mingw</id><summary type="html">&lt;p&gt;How to build Qt Static on Windows with MinGW to get Qt application without depencies from Qt dynamic link libraries.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Source: &lt;a href="https://wiki.qt.io/Building_a_static_Qt_for_Windows_using_MinGW"&gt;Building a static Qt for Windows using MinGW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download Qt and install it. Also select toolchain MinGW:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Install" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Remember directory, where MinGW was installed. For example *&lt;em&gt;D:\Qt\Tools\mingw530_32\bin*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Download script &lt;a href="https://sourceforge.net/p/qtlmovie/code/ci/v1.2.16/tree/build/windows-build-qt-static.ps1?format=raw"&gt;windows-build-qt-static.ps1&lt;/a&gt;.
Save it to directory *&lt;em&gt;D:\Qt*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Select Qt version from &lt;a href="http://download.qt.io/official_releases/qt/"&gt;Qt Downloads&lt;/a&gt; and remember url for &lt;strong&gt;{VERSION}/{VERSION}/single/qt-everywhere-opensource-src-{VERSION}.zip&lt;/strong&gt;. For example http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&lt;/p&gt;
&lt;p&gt;Create file &lt;strong&gt;windows-build-run.bat&lt;/strong&gt; with content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PowerShell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class="s2"&gt;&amp;quot;&amp;amp; &amp;#39;D:\Qt\windows-build-qt-static.ps1&amp;#39; -QtSrcUrl &amp;#39;http://download.qt.io/official_releases/qt/5.9/5.9.1/single/qt-everywhere-opensource-src-5.9.1.zip&amp;#39; -QtStaticDir &amp;#39;D:\Qt\Static591&amp;#39; -MingwDir &amp;#39;D:\Qt\Tools\mingw530_32&amp;#39; -QtVersion &amp;#39;5.9.1-Static&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where
  * -QtSrcUrl - Url to source codes archive;
  * -QtStaticDir - Directory where the static version are installed.
  * -MingwDir - Path to MinGW toolchain.&lt;/p&gt;
&lt;div class="alert alert-warning" role="alert"&gt;
QtVersion string must contains no spaces!&lt;br&gt;
Or you can meet error like
&lt;code&gt;&lt;br&gt;
ERROR: Invalid command line parameter 'Static'.&lt;br&gt;
mingw32-make: *** No targets specified and no makefile found.  Stop.&lt;br&gt;
mingw32-make: *** No rule to make target 'install'.
&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;Run &lt;strong&gt;cmd.exe&lt;/strong&gt;, change directory to &lt;strong&gt;D:\Qt&lt;/strong&gt;, start file &lt;strong&gt;windows-build-run.bat&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you see error about &lt;strong&gt;SQLite&lt;/strong&gt;, open file &lt;strong&gt;windows-build-qt-static.ps1&lt;/strong&gt; in editor and replace &lt;strong&gt;-qt-sql-sqlite&lt;/strong&gt; with &lt;strong&gt;-sql-sqlite&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Wait some hours.............&lt;/p&gt;
&lt;p&gt;Add compiled Qt to Qt Creator: &lt;strong&gt;Tools&lt;/strong&gt; → &lt;strong&gt;Options&lt;/strong&gt; → &lt;strong&gt;Build &amp;amp; Run&lt;/strong&gt; → &lt;strong&gt;Qt Versions&lt;/strong&gt; → &lt;strong&gt;Add...&lt;/strong&gt;. Browse to &lt;strong&gt;qmake.exe&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Qt Versions" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Add new kit: &lt;strong&gt;Tools&lt;/strong&gt; → &lt;strong&gt;Options&lt;/strong&gt; → &lt;strong&gt;Build &amp;amp; Run&lt;/strong&gt; → &lt;strong&gt;Kit&lt;/strong&gt; → &lt;strong&gt;Add...&lt;/strong&gt;. Select compiler C/C++ = MinGW 5.3.0, debugger = GNU gdb from MinGW 5.3.0 and just compiled Qt Version.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kits" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Select kit for project:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kit's selection" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/07/19/qt-static-build-on-windows-with-mingw-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;After build we could see a large executable file.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Zyxel Keenetic + NameCheap DDNS</title><link href="https://blog.riuson.com/ru/posts/2017/06/10/zyxel-keenetic-namecheap-ddns" rel="alternate"></link><published>2017-06-10T00:00:00+05:00</published><updated>2017-06-10T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-06-10:/ru/posts/2017/06/10/zyxel-keenetic-namecheap-ddns</id><summary type="html">&lt;p&gt;Настройка DDNS от Namecheap на роутере Zyxel Keenetic.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Выбор провайдеров DDNS в роутере оказался на удивление малым:&lt;/p&gt;
&lt;p&gt;&lt;img alt="List of providers" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/06/10/zyxel-keenetic-namecheap-ddns-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;DDNS на Namecheap настраивается по их инструкции: &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/43/11/how-do-i-set-up-a-host-for-dynamic-dns"&gt;How do I set up a Host for Dynamic DNS?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Namecheap предоставляет следующие параметры, по &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9356/11/how-to-configure-a-ddwrt-router"&gt;инструкции для DD-WRT&lt;/a&gt;:
* &lt;strong&gt;DYNDNS Server&lt;/strong&gt;: dynamicdns.park-your-domain.com - the name of the server should not be changed
* &lt;strong&gt;Username&lt;/strong&gt;: yourdomain.com - replace it with your domain name
* &lt;strong&gt;Password&lt;/strong&gt;: Dynamic DNS password for your domain (Domain List &amp;gt;&amp;gt; click on the Manage button next to the domain &amp;gt;&amp;gt; the Advanced DNS tab &amp;gt;&amp;gt; Dynamic DNS)
* &lt;strong&gt;Hostname&lt;/strong&gt;: Your subdomain (@ for yourdomain.com, www for www.yourdomain.com, etc.)
* &lt;strong&gt;URL&lt;/strong&gt;: /update?domain=yourdomain.com&amp;amp;password=DynamicDNSPassword&amp;amp;host=&lt;/p&gt;
&lt;p&gt;Параметр URL, как оказалось, в Zyxel указывать негде.&lt;/p&gt;
&lt;p&gt;Однако, есть ещё инструкция для обновления через браузер: &lt;a href="https://www.namecheap.com/support/knowledgebase/article.aspx/29/11/how-do-i-use-a-browser-to-dynamically-update-the-hosts-ip"&gt;How do I use a browser to dynamically update the host's IP?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Обновить адрес можно, выполнив обычный запрос вида https://dynamicdns.park-your-domain.com/update?host=[host]&amp;amp;domain=[domain_name]&amp;amp;password=[ddns_password]&amp;amp;ip=[your_ip]&lt;br&gt;
Где
* Host = @
* Domain Name = yourdomain.tld
* Dynamic DNS Password = Domain List &amp;gt;&amp;gt; click Manage next to the domain &amp;gt;&amp;gt;Advanced DNS tab &amp;gt;&amp;gt; Dynamic DNS. If it is not enabled, enable it to check the password.
* IP Address = optional value. If you don't specify any IP, the IP from which you are accessing this URL will be set for the domain.&lt;/p&gt;
&lt;p&gt;При необходимости обновления субдомена, вместо @ надо указать его имя. Для test.yourdomain.tld это будет просто test.&lt;/p&gt;
&lt;p&gt;Далее надо подставить свои параметры в указанный выше URL и прописать его в настройках DDNS у Zyxel. Параметр your_ip не указывается. В этом случае, в качестве ip адреса будет взят тот внешний IP адрес, с которого поступит запрос. Т.е. внешний адрес роутера.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Settings" class="img-fluid" src="https://blog.riuson.com/images/posts/2017/06/10/zyxel-keenetic-namecheap-ddns-2.png" /&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Установка и настройка Eclipse, STM32CubeMX под Windows (v2).</title><link href="https://blog.riuson.com/ru/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2" rel="alternate"></link><published>2017-02-21T00:00:00+05:00</published><updated>2017-02-21T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-02-21:/ru/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2</id><summary type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием Eclipse, STM32CubeMX, GNU ARM Embedded, GNU ARM Eclipse Plugins.&lt;br&gt;
На примере микроконтроллера STM32F103RET6.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/i5VUF1wYTQU"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Настройка Eclipse и STM32CubeMX под Windows (v2)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В связи с некоторыми изменениями между рассмотренной ранее и текущей версией CubeMX, переделал инструкцию.{ .bg-info .text-white }&lt;/p&gt;
&lt;p&gt;Если у Вас это не работает или найдёте ошибку, пишите в комментариях.{ .bg-warning .text-dark }&lt;/p&gt;
&lt;p&gt;На видео приведён весь процесс установки и настройки. Операционная система Windows 10 Home.&lt;/p&gt;
&lt;h1&gt;Загрузка&lt;/h1&gt;
&lt;p&gt;Список ПО, которое понадобится:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE for C/C++ Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/download/"&gt;Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/gcc-arm-embedded"&gt;GCC ARM Embedded&lt;/a&gt; Windows Installer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/  install/"&gt;How to install the Windows Build Tools?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/"&gt;The GNU ARM Eclipse plug-ins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;How to install the GNU ARM Eclipse plug-ins?&lt;/a&gt;   (скачивается из самого Eclipse)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/en/development-tools/  stm32cubemx.html?icmp=stm32cubemx_pron_prcube_feb2014&amp;amp;sc=stm32cube-pr"&gt;STM32CubeMX STM32Cube initialization code generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://  www.st.com/content/st_com/en/products/development-tools/software-development-tools/  stm32-software-development-tools/stm32-configurators-and-code-generators/stsw-stm32095.html"&gt;STM32CubeMX Eclipse plug in for STM32 configuration and initialization C code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/content/st_com/en/products/embedded-software/  mcus-embedded-software/stm32-embedded-software/stm32cube-embedded-software/stm32cubef1.html"&gt;STM32CubeF1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.segger.com/jlink-software.html"&gt;Jlink - Software and documentation pack for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;h2&gt;Eclipse IDE for C/C++ Developers&lt;/h2&gt;
&lt;p&gt;Скачиваем установщик Eclipse и устанавливаем Eclipse IDE for C/C++ Developers.&lt;/p&gt;
&lt;h2&gt;Java Virtual Machine&lt;/h2&gt;
&lt;p&gt;Если установщик Eclipse не найдёт Java SE Runtime Environment подходящей версии, он предложит его скачать.
Скачиваем и устанавливаем.&lt;/p&gt;
&lt;h2&gt;Windows Build Tools&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;руководстве&lt;/a&gt;. Ничего необычного.&lt;/p&gt;
&lt;h2&gt;GCC ARM Embedded&lt;/h2&gt;
&lt;p&gt;При завершения установки снимаем галочки с Launch &lt;em&gt;gccvar.bat&lt;/em&gt; и &lt;em&gt;Add path to enviroment variable&lt;/em&gt;. Чтобы можно было установить несколько компиляторов.&lt;/p&gt;
&lt;h2&gt;GNU ARM Eclipse plug-ins&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;руководстве&lt;/a&gt;.
В меню Eclipse выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt;. Добавляем сайт&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: GNU ARM Eclipse Plug-ins&lt;/li&gt;
&lt;li&gt;URL: http://gnuarmeclipse.sourceforge.net/updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;И устанавливаем всё.&lt;/p&gt;
&lt;p&gt;Если вылетела ошибка &lt;strong&gt;Handshake_failure&lt;/strong&gt;, читаем статью &lt;a href="http://gnuarmeclipse.github.io/blog/2017/01/29/plugins-install-issue"&gt;GNU ARM Eclipse plug-ins: Received fatal alert: handshake_failure&lt;/a&gt;.
Вкратце: повысили настройки безопасности у репозитория плагинов Eclipse, а в некоторых версиях JRE библиотеки содержат экспортные ограничения на функции шифрования. Вот их надо заменить на полные.&lt;/p&gt;
&lt;h2&gt;STM32CubeMX Eclipse plug in&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Через меню &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt; устанавливаем плагин из архива &lt;em&gt;STSW-STM32095.zip&lt;/em&gt;.
Перезапускаем Eclipse.&lt;/p&gt;
&lt;h2&gt;STM32CubeF1&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Открываем STM32CubeMX через меню &lt;em&gt;Window&lt;/em&gt; -&amp;gt; &lt;em&gt;Show View&lt;/em&gt; -&amp;gt; &lt;em&gt;Other...&lt;/em&gt;. Там в дереве, в ветке Other, будет STM32CubeMX.
В меню STM32CubeMX выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Libraries&lt;/em&gt;, открывается окно установки пакетов под серии микроконтролллеров.&lt;/p&gt;
&lt;p&gt;Далее можно скачать пакет из сети, выбрав галочку и нажав &lt;em&gt;Install Now&lt;/em&gt;.
Либо установить из скачанного вручную архива, нажав кнопку &lt;em&gt;From Local...&lt;/em&gt; и выбрав скачанный ранее архив &lt;em&gt;STM32CubeF1.ZIP&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;J-Link&lt;/h2&gt;
&lt;p&gt;Всё как обычно.&lt;/p&gt;
&lt;h1&gt;Настройка&lt;/h1&gt;
&lt;h2&gt;Создание проекта в Eclipse&lt;/h2&gt;
&lt;p&gt;В мастере создания нового проекта выбираем &lt;em&gt;C/C++&lt;/em&gt; -&amp;gt; &lt;em&gt;C Project&lt;/em&gt;.
Далее указываем имя проекта и тип &lt;em&gt;Hello World ARM C++ Project&lt;/em&gt;, Toolchain &lt;em&gt;Cross ARM GCC&lt;/em&gt;.
Далее меняем каталог исходников Source с &lt;em&gt;src&lt;/em&gt; на &lt;em&gt;Src&lt;/em&gt;. В Linker semi-hosting options стираем всё и пишем &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;--specs=nosys.specs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Пробуем собрать проект.&lt;/p&gt;
&lt;h2&gt;Создание проекта в STM32CubeMX&lt;/h2&gt;
&lt;h3&gt;Генерация кода&lt;/h3&gt;
&lt;p&gt;Запускаем STM32CubeMX, создаём новый проект.
В списке микроконтроллеров выбираем нужный (здесь STM32F103RET6 для примера).
Настраиваем как нужно.
Запускаем генерацию кода из меню. Указываем имя проекта как было в Eclipse выше. Указываем Project Location на каталог workspace, где лежит тот проект. Меняем Toolchain/IDE на SW4STM32. Снимаем галочку Generate Under Root.
Запускаем.
Исходные коды проекта будут созданысгенерированы поверх уже существующего проекта.
Закрываем STM32CubeMX.&lt;/p&gt;
&lt;p&gt;Обновляем дерево проекта в Eclipse. Появляются новые каталоги, &lt;em&gt;Driver&lt;/em&gt; и &lt;em&gt;Inc&lt;/em&gt;. Сгенерированный Src совпал с уже сушествующим.
Новые каталоги исключены из сборки, поэтому включаем их через свойства в контекстном меню.
При необходимости, меняем в свойствах проект кодировку исходников на UTF-8.&lt;/p&gt;
&lt;p&gt;Создаём в каталоге &lt;em&gt;Src&lt;/em&gt; файл &lt;em&gt;startup.asm&lt;/em&gt;. Прописывываем в нём путь к стартовому файлу на ассемблере:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc/startup_stm32f103xe.s&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Это позволит оставить файлы &lt;em&gt;&lt;em&gt;.s_ на месте (они не попадают под сборку ассемблером), но в то же время включить нужный в сборку через файл _&lt;/em&gt;.asm&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Перенос настроек&lt;/h3&gt;
&lt;p&gt;Далее, надо перенести настройки проекта из сгенерированного в существующий.&lt;/p&gt;
&lt;p&gt;Открываем проект в Eclipse. Заходим в свойства проекта - C/C++ General - Path and Symbols. Добавляем там легко опознаваемые строки-маркеры в разделы Includes и Symbols.&lt;/p&gt;
&lt;p&gt;Далее открываем XML файл сгенерированного проекта в &lt;em&gt;./SW4STM32/&lt;project name&gt;/.cproject&lt;/em&gt;.
Делаем его текст более читаемым через любое средство форматирования XML, позволяющее разнести атрибуты по строкам. Например, xmlbeautifier.&lt;/p&gt;
&lt;h4&gt;Define&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле макросы, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols.1801753735&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Defined symbols (-D)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;definedSymbols&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__weak=__attribute__((weak))&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ищем во втором файле ноды XML с соответствующими маркерами и заменяем их.
Список примерно следующий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
__packed=&amp;quot;__attribute__((__packed__))&amp;quot;
USE_HAL_DRIVER
STM32F103RE
ARM_MATH_CM3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Последнего в XML файле нет, но без него библиотеки не соберутся.&lt;br&gt;
Кавычек у __weak и __packed тоже нет. Их надо добавить в виде &lt;code&gt;"&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Include&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле пути для Include, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths.976375416&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Include paths (-I)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;includePath&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;..\..\..\Inc&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем рядом файл проекта Eclipse CDT. Ищем ранее добавленные маркеры. Копируем соответствующие ноды XML из первого файла во второй. Попутно заменяя относительные пути:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;../../../Inc
../../../Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;${ProjDirPath}/Inc
${ProjDirPath}/Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;ARM family&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Target Processor&lt;/em&gt; -&amp;gt; &lt;em&gt;ARM family&lt;/em&gt;, выбираем &lt;em&gt;cortex-m3&lt;/em&gt;, соответственно микроконтроллеру.&lt;/p&gt;
&lt;h4&gt;Linker script&lt;/h4&gt;
&lt;p&gt;Копируем скрипт линкера из &lt;em&gt;./SW4STM32/&lt;project name&gt;/STM32F103RETx_FLASH.ld&lt;/em&gt; в &lt;em&gt;Scripts/STM32F103RETx_FLASH.ld&lt;/em&gt;.&lt;br&gt;
Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Linker&lt;/em&gt; -&amp;gt; &lt;em&gt;General&lt;/em&gt;. Добавляем в список &lt;em&gt;Scripts files (-T)&lt;/em&gt; путь к файлу скрипта.&lt;/p&gt;
&lt;h1&gt;Сборка.&lt;/h1&gt;
&lt;p&gt;Собираем проект.
Для ускорения сборки можно включить параллельную работу в свойствах проекта &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Behavior&lt;/em&gt; -&amp;gt; &lt;em&gt;Enable parallel build&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Отладка&lt;/h1&gt;
&lt;h2&gt;Проверка связи с отладчиком и микроконтроллером через J-Flash.&lt;/h2&gt;
&lt;p&gt;Запускаем J-Flash. Создаём новый проект. В свойствах проекта выбираем свой отладчик, &lt;em&gt;Target Interface&lt;/em&gt;, &lt;em&gt;CPU&lt;/em&gt; -&amp;gt; &lt;em&gt;Device&lt;/em&gt;. Выполняем подключение &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Connect&lt;/em&gt;. Если в логах появилась запись &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- Connected successfully
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;, то всё OK. Если нет, разбираемся с драйверами и подключением.
Для дополнительной проверки можно считать память программ микроконтроллера через меню &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Read back&lt;/em&gt; -&amp;gt; &lt;em&gt;Entire chip&lt;/em&gt;. Должно отобразиться содержимое памяти. Если нет - опять же разбираемся с поключением.&lt;/p&gt;
&lt;h2&gt;Настройка Eclipse&lt;/h2&gt;
&lt;p&gt;Открываем меню &lt;em&gt;Debug&lt;/em&gt; -&amp;gt; &lt;em&gt;Debug Configurations...&lt;/em&gt;.
Создаём новое подключение под &lt;em&gt;GDB Segger J-Link Debugging&lt;/em&gt;.
На вкладке &lt;em&gt;Debugger&lt;/em&gt; прописываем &lt;em&gt;Device name&lt;/em&gt; (ссылка на список поддерживаемых устройств там есть справа), например &lt;em&gt;STM32F103RE&lt;/em&gt;. Выбираем подключение &lt;em&gt;Connection&lt;/em&gt; и интерфейс &lt;em&gt;Interface&lt;/em&gt;, если требуется. 
На вкладке &lt;em&gt;Common&lt;/em&gt; ставим галочку на &lt;em&gt;Debug&lt;/em&gt; в списке &lt;em&gt;Display in favorites menu&lt;/em&gt; для упрощения перехода в режим отладки.
Далее окно настроек можно закрыть и запустить отладку через меню &lt;em&gt;Debug&lt;/em&gt;.
Бинарник должен прошиться в память программ и начаться отладка, с остановкой в начале функции &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Обновление проекта&lt;/h1&gt;
&lt;p&gt;Данная структура проекта позволяет обновить проект черех генератор кода STM32CubeMX без особых усилий, при соблюдении рекомендаций к написанию пользовательского кода в предназначенных для того участках.
Запускаем STM32CubeMX. Загружаем проект STM32CubeMX (файл *.ioc, сохранённый в каталоге проекта при генерации кода).
Меняем необходимые настройки, отключаем или подключаем модули.
Потом запускаем генерацию кода и файла описания.
Файлы перезаписываются поверх существующего проекта, сохраняя упомянутые выше участки пользовательского кода.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;На этом пока всё.&lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Installation and setup Eclipse, STM32CubeMX under Windows (v2).</title><link href="https://blog.riuson.com/en/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2" rel="alternate"></link><published>2017-02-21T00:00:00+05:00</published><updated>2017-02-21T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2017-02-21:/en/posts/2017/02/21/setup-eclipse-stm32cubemx-on-windows-v2</id><summary type="html">&lt;p&gt;Manual was updated due to changes from previous version of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Manual was updated due to changes from previous version of CubeMX.&lt;/p&gt;
&lt;p&gt;Installation and setup development environment for STM32, with Eclipse, STM32CubeMX, GNU ARM Embedded, GNU ARM Eclipse Plugins.&lt;br&gt;
MCU: STM32F103RET6.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/i5VUF1wYTQU"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Video: Setup Eclipse and STM32CubeMX on Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Manual was updated due to changes from previous version of CubeMX.{ .bg-info .text-white }&lt;/p&gt;
&lt;p&gt;If it is not working, please write in comments.{ .bg-warning .text-dark }&lt;/p&gt;
&lt;p&gt;All process has been recorded on video.
Operating system: Windows 10 Home.&lt;/p&gt;
&lt;h1&gt;Download&lt;/h1&gt;
&lt;p&gt;List of used software.:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE for C/C++ Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/download/"&gt;Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/gcc-arm-embedded"&gt;GCC ARM Embedded&lt;/a&gt; Windows Installer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;How to install the Windows Build Tools?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/"&gt;The GNU ARM Eclipse plug-ins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;How to install the GNU ARM Eclipse plug-ins?&lt;/a&gt; (download by Eclipse)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/en/development-tools/stm32cubemx.html?icmp=stm32cubemx_pron_prcube_feb2014&amp;amp;sc=stm32cube-pr"&gt;STM32CubeMX STM32Cube initialization code generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/m32-configurators-and-code-generators/stsw-stm32095.html"&gt;STM32CubeMX Eclipse plug in for STM32 configuration and initialization C code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/content/st_com/en/products/embedded-software/mcus-embedded-software/stm32-embedded-software/stm32cube-embedded-software/stm32cubef1.html"&gt;STM32CubeF1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.segger.com/jlink-software.html"&gt;Jlink - Software and documentation pack for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Install&lt;/h1&gt;
&lt;h2&gt;Eclipse IDE for C/C++ Developers&lt;/h2&gt;
&lt;p&gt;Download Eclipse installer and install &lt;em&gt;Eclipse IDE for C/C++ Developers&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Java Virtual Machine&lt;/h2&gt;
&lt;p&gt;If Eclipse installer can't find JRE, next dialog can be shown:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class="blockquote"&gt;The required 64-bit Java 1.7.0 virtual machine could not be found.&lt;br&gt;
Do you want to browse your system for it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can browse for it or open web-site by clicking &lt;em&gt;No&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Windows Build Tools&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;Installation manual&lt;/a&gt;. All as usual.&lt;/p&gt;
&lt;h2&gt;GCC ARM Embedded&lt;/h2&gt;
&lt;p&gt;Disable checkboxes &lt;em&gt;Launch gccvar.bat&lt;/em&gt; and &lt;em&gt;Add path to enviroment variable&lt;/em&gt; after installation. So you can install many compilers.&lt;/p&gt;
&lt;h2&gt;GNU ARM Eclipse plug-ins&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;Installation manual&lt;/a&gt;.
In Eclipse menu choose &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt;. Add website&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: GNU ARM Eclipse Plug-ins&lt;/li&gt;
&lt;li&gt;URL: http://gnuarmeclipse.sourceforge.net/updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Select and install all components.&lt;/p&gt;
&lt;p&gt;If you see an error about &lt;strong&gt;Handshake_failure&lt;/strong&gt;, please read the next topic: &lt;a href="http://gnuarmeclipse.github.io/blog/2017/01/29/plugins-install-issue"&gt;GNU ARM Eclipse plug-ins: Received fatal alert: handshake_failure&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;STM32CubeMX Eclipse plug in&lt;/h2&gt;
&lt;p&gt;Start Eclipse. Choose menu &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt; and install plugin from archive &lt;em&gt;STSW-STM32095.zip&lt;/em&gt;.
Restart Eclipse.&lt;/p&gt;
&lt;h2&gt;STM32CubeF1&lt;/h2&gt;
&lt;p&gt;Start Eclipse. Open STM32CubeMX from menu &lt;em&gt;Window&lt;/em&gt; -&amp;gt; &lt;em&gt;Show View&lt;/em&gt; -&amp;gt; &lt;em&gt;Other...&lt;/em&gt; -&amp;gt; &lt;em&gt;STM32CubeMX&lt;/em&gt;. 
Choose &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Libraries&lt;/em&gt; from STM32CubeMX menu to open Libraries Manager.&lt;/p&gt;
&lt;p&gt;Here you can install package for selected MCU series.
* Network: select checkbox and click &lt;em&gt;Install Now&lt;/em&gt;.
* Local: click &lt;em&gt;From Local...&lt;/em&gt; and open file &lt;em&gt;STM32CubeF1.zip&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;J-Link&lt;/h2&gt;
&lt;p&gt;All as usual.&lt;/p&gt;
&lt;h1&gt;Setup&lt;/h1&gt;
&lt;h2&gt;Create project in Eclipse&lt;/h2&gt;
&lt;p&gt;Choose menu &lt;em&gt;C/C++&lt;/em&gt; -&amp;gt; &lt;em&gt;C Project&lt;/em&gt;.
Write a project's name and select type &lt;em&gt;Hello World ARM C++ Project&lt;/em&gt;, Toolchain &lt;em&gt;Cross ARM GCC&lt;/em&gt;.
Replace source's directory from &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;Src&lt;/em&gt;. At &lt;em&gt;Linker semi-hosting options&lt;/em&gt; write only next string &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;--specs=nosys.specs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build project.&lt;/p&gt;
&lt;h2&gt;Create project in STM32CubeMX&lt;/h2&gt;
&lt;h3&gt;Code generation&lt;/h3&gt;
&lt;p&gt;Start STM32CubeMX and create new project.&lt;br&gt;
Select used MCU. For example STM32F103RET6.
Change project settings.&lt;br&gt;
Start code generation. Set project name equals to Eclipse project. Set &lt;em&gt;Project Location&lt;/em&gt; directory in workspace, where existing Eclipse project was placed. Set Toolchain/IDE to SW4STM32. Uncheck _ Generate Under Root_.&lt;br&gt;
Start by clicking &lt;em&gt;Ok&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Source codes will be saved over early created project.&lt;br&gt;
Close STM32CubeMX.&lt;/p&gt;
&lt;p&gt;Refresh project tree in Eclipse. You can see newly added directories, &lt;em&gt;Driver&lt;/em&gt; and &lt;em&gt;Inc&lt;/em&gt;. &lt;em&gt;Src&lt;/em&gt; directory combined with existing.&lt;br&gt;
Newly added directories disabled by default, so enable it thru properties dialog.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Create file &lt;em&gt;startup.asm&lt;/em&gt; in &lt;em&gt;Src&lt;/em&gt; directory. Add path to generated assembler startup file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc/startup_stm32f103xe.s&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Migrate settings&lt;/h3&gt;
&lt;p&gt;How to migrate settings from CubeMX project to Eclipse?&lt;/p&gt;
&lt;p&gt;Open Eclipse project. Open project's &lt;em&gt;Properties&lt;/em&gt; - &lt;em&gt;C/C++ General&lt;/em&gt; - &lt;em&gt;Path and Symbols&lt;/em&gt;. Add some string markers to Includes и Symbols.&lt;/p&gt;
&lt;p&gt;Then close project. Open XML file of both projects, &lt;em&gt;.cproject&lt;/em&gt; and &lt;em&gt;./SW4STM32/&amp;lt; project name &amp;gt;/.cproject&lt;/em&gt;.&lt;br&gt;
Format XML with any tool for easy reading. For example, xmlbeautifier.&lt;/p&gt;
&lt;h4&gt;Symbols&lt;/h4&gt;
&lt;p&gt;Locate nodes with symbols in XML file (SW4STM32), like next:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols.1801753735&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Defined symbols (-D)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;definedSymbols&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__weak=__attribute__((weak))&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Locate nodes with markers in other XML file (Eclipse) and replace it.
List of symbols looks like next:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
__packed=&amp;quot;__attribute__((__packed__))&amp;quot;
USE_HAL_DRIVER
STM32F103RE
ARM_MATH_CM3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Last line missing in XML file, but it is required for build.&lt;br&gt;
Quote at __weak and __packed are required. In XML file quotes need to be escaped as &lt;code&gt;"&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Includes&lt;/h4&gt;
&lt;p&gt;Locate nodes with Include paths in XML file (SW4STM32) like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths.976375416&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Include paths (-I)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;includePath&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;..\..\..\Inc&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change prefix from relative path&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;../../../Inc
../../../Drivers/STM32F1xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to variable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;${ProjDirPath}/Inc
${ProjDirPath}/Drivers/STM32F1xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copy nodes to other XML file (Eclipse).&lt;/p&gt;
&lt;h4&gt;ARM family&lt;/h4&gt;
&lt;p&gt;Open project's Properties in Eclipse, navigate to &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Target Processor&lt;/em&gt; -&amp;gt; &lt;em&gt;ARM family&lt;/em&gt;, select &lt;em&gt;cortex-m3&lt;/em&gt;.&lt;/p&gt;
&lt;h4&gt;Charset&lt;/h4&gt;
&lt;p&gt;Also you can change charset of project's resources to UTF-8.&lt;/p&gt;
&lt;h4&gt;Linker script&lt;/h4&gt;
&lt;p&gt;Copy linker script from &lt;em&gt;./SW4STM32/&amp;lt; project name &amp;gt;/STM32F103RETx_FLASH.ld&lt;/em&gt; to &lt;em&gt;Scripts/STM32F103RETx_FLASH.ld&lt;/em&gt;.&lt;br&gt;
Open project's Properties, navigate to &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Linker&lt;/em&gt; -&amp;gt; &lt;em&gt;General&lt;/em&gt;. Add file to &lt;em&gt;Scripts files (-T)&lt;/em&gt; list.&lt;/p&gt;
&lt;h1&gt;Build&lt;/h1&gt;
&lt;p&gt;Start build project.&lt;br&gt;
You can set &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Behavior&lt;/em&gt; -&amp;gt; &lt;em&gt;Enable parallel build&lt;/em&gt; to speed up build.&lt;/p&gt;
&lt;h1&gt;Debug&lt;/h1&gt;
&lt;h2&gt;Check connection with debugger and MCU thru J-Flash.&lt;/h2&gt;
&lt;p&gt;Start J-Flash. Create new project. Select debugger, &lt;em&gt;Target Interface&lt;/em&gt;, &lt;em&gt;CPU&lt;/em&gt; -&amp;gt; &lt;em&gt;Device&lt;/em&gt;. Click menu &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Connect&lt;/em&gt;. You should see message in log: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Connected successfully
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you don't see it, something going wrong.&lt;br&gt;
Then select &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Manual programming -&amp;gt; _Erase chip&lt;/em&gt;.
You should see message in log: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Erase operaion completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Setup debugger in Eclipse&lt;/h2&gt;
&lt;p&gt;Open menu &lt;em&gt;Debug&lt;/em&gt; -&amp;gt; &lt;em&gt;Debug Configurations...&lt;/em&gt;.&lt;br&gt;
Create new connection under &lt;em&gt;GDB Segger J-Link Debugging&lt;/em&gt;.&lt;br&gt;
Set &lt;em&gt;Device name&lt;/em&gt; on &lt;em&gt;Debugger&lt;/em&gt; page, for example &lt;em&gt;STM32F103RE&lt;/em&gt;.&lt;br&gt; Select &lt;em&gt;Connection&lt;/em&gt; and &lt;em&gt;Interface&lt;/em&gt;, if needed.&lt;br&gt;
To add debug configuration to favorites menu, set checlbox &lt;em&gt;Debug&lt;/em&gt; in list &lt;em&gt;Display in favorites menu&lt;/em&gt; on &lt;em&gt;Common&lt;/em&gt; page.&lt;br&gt;
Start debug from favorites in &lt;em&gt;Debug&lt;/em&gt; menu.&lt;/p&gt;
&lt;p&gt;Formware shoud be programmed to flash. Debug starts with breakpoint on method &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Updating project&lt;/h1&gt;
&lt;p&gt;This project's structure allows update project with STM32CubeMX without problems.&lt;br&gt;
Just start STM32CubeMX.&lt;br&gt;
Load STM32CubeMX project (generated *.ioc file in root directory of project).&lt;br&gt;
Change settings.&lt;br&gt;
Start code generation.&lt;br&gt;
Files will be regenerated over existing, but user's code keeps in special sections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; The End. &lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Графический OLED дисплей 0.96</title><link href="https://blog.riuson.com/ru/posts/2016/09/29/small-096-oled-display" rel="alternate"></link><published>2016-09-29T00:00:00+05:00</published><updated>2016-09-29T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-29:/ru/posts/2016/09/29/small-096-oled-display</id><summary type="html">&lt;p&gt;Пришла такая штука с AliExpress.
Диагональ 0.96". Разрешение 128x64 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Пришла такая штука с AliExpress.
Диагональ 0.96". Разрешение 128x64. Контроллер SSD1306.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Top" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bottom" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-3.png" /&gt;&lt;/p&gt;</content><category term="LCD Image Converter"></category></entry><entry><title>Graphic OLED display 0.96</title><link href="https://blog.riuson.com/en/posts/2016/09/29/small-096-oled-display" rel="alternate"></link><published>2016-09-29T00:00:00+05:00</published><updated>2016-09-29T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-29:/en/posts/2016/09/29/small-096-oled-display</id><summary type="html">&lt;p&gt;Small display from AliExpress.
0.96", 128x64 pixels. Controller SSD1306 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Small display from AliExpress.
0.96", 128x64 pixels. Controller SSD1306.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Top" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bottom" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/29/small-096-oled-display-3.png" /&gt;&lt;/p&gt;</content><category term="LCD Image Converter"></category></entry><entry><title>Создание изображения для платы STM32 Discovery и BSP</title><link href="https://blog.riuson.com/ru/posts/2016/09/18/generate-image-for-stm32-discovery-bsp" rel="alternate"></link><published>2016-09-18T00:00:00+05:00</published><updated>2016-09-18T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-18:/ru/posts/2016/09/18/generate-image-for-stm32-discovery-bsp</id><summary type="html">&lt;p&gt;Как создать изображение в формате исходника С для использования с платой STM32F429I-Disco и подобными с применением BSP (Board Support Package).&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Исходные данные&lt;/h2&gt;
&lt;p&gt;Возник такой вопрос: как создать изображение в формате "С" для использования с BSP (Board Support Package) на STM32F429I-Disco?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef __STLOGO_H&lt;/span&gt;
&lt;span class="cp"&gt;#define __STLOGO_H&lt;/span&gt;

&lt;span class="cp"&gt;#if defined ( __ICCARM__ ) &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; IAR Compiler */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
  &lt;span class="cp"&gt;#pragma data_alignment=4   &lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="n"&gt;__ALIGN_BEGIN&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;  &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;stlogo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9174&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;__ALIGN_END&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="mh"&gt;0x42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x4d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xd6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xa0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Формат данных&lt;/h2&gt;
&lt;p&gt;После изучения указанного участка файла, а также исходников функции &lt;code&gt;void BSP_LCD_DrawBitmap(uint32_t X, uint32_t Y, uint8_t *pBmp)&lt;/code&gt; из файла &lt;code&gt;stm32f429i_discovery_lcd.c&lt;/code&gt; стало понятно, что это структура заголовка &lt;a href="https://ru.wikipedia.org/wiki/BMP"&gt;формата BMP&lt;/a&gt;. Видимо, это нужно для простой загрузки изображений с карт памяти SD.&lt;/p&gt;
&lt;p&gt;Также, по исходникам этой функции можно предположить, что поддерживаются только лишь форматы A8R8G8B8, R5G6B5 и R8G8B8.&lt;/p&gt;
&lt;p&gt;Как же вывести изображение в этом формате?&lt;/p&gt;
&lt;p&gt;Есть готовая утилита Bitmap Converter for emWin (BmpCvt.exe) поставляемая в пакете STemwin. Можно попробовать в ней, но это простой путь.&lt;/p&gt;
&lt;p&gt;Как сделать с помощью LCD Image Converter?&lt;/p&gt;
&lt;p&gt;Можно просто решить (как некоторые и делают :), что это невозможно, потому что ни одна из встроенных настроек это не позволяет. Однако, задача состоит лишь в воспроизведении структуры заголовков BMP и заполнении их правильными данными.&lt;/p&gt;
&lt;p&gt;Из упомянутой выше статьи получается такая структура:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Тип файла, &amp;#39;BM&amp;#39;, little-endian.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Размер всего файла в байтах.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Смещение пиксельных данных изображения от начала структуры (файла).&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 14 байт&lt;/span&gt;

&lt;span class="c1"&gt;// Версия 3, BITMAPINFOHEADER.&lt;/span&gt;
&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Размер этой структуры, также указывающий её версию.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Ширина изображения, должна быть больше 0.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Высота изображения, должна быть больше 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Количество плоскостей, равно 1.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Количество бит на пиксел.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Тип сжатия. В файле от ST оно равно 3 (BI_BITFIELDS), хотя из-за biClrUsed == 0 оно не используется.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Размер данных изображения, в байтах.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Здесь равно 0.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Здесь равно 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Здесь равно 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Здесь равно 0.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 40 байт&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Шаблон&lt;/h2&gt;
&lt;p&gt;Цвета будем хранить в формате R5G6B5, т.е. в 16 битах. Для этого удобнее в качестве единицы хранения взять не &lt;code&gt;uint8_t&lt;/code&gt;, а &lt;code&gt;uin16_t&lt;/code&gt;, что скажется на данных в заголовке.&lt;/p&gt;
&lt;p&gt;Шаблон для заполнения такой структуры, для компилятора GCC, будет выглядеть следующим образом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef $(doc_name_ws)_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define $(doc_name_ws)_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack(push, 1)&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_block_images_table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 14 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 40 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tag_Struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 0, size 14&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt; &lt;span class="n"&gt;fileHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 14, size 40&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt; &lt;span class="n"&gt;infoHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 54, size $(out_blocks_count) words&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_Struct&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_Struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x4d42u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_width&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_height&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;1u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_bpp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000003u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_block_images_table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack (pop)&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* $(doc_name_ws)_H_ */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Настройки&lt;/h2&gt;
&lt;p&gt;Основное окно программы.&lt;/p&gt;
&lt;p&gt;&lt;img alt="LCD Image Converter основное окно" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Настройки подготовки сканирования.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Настройки - Преобразование - Подготовка" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Матрица выборки цветов для R5G6B5.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Настройки - Преобразование - Матрица" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Настройки изображения.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Настройки - Преобразование - Изображение" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;Здесь надо указать шаблон вывода, приведённый выше.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Настройки - Преобразование - Шаблоны" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-5.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Результаты&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef butterfly_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define butterfly_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack(push, 1)&lt;/span&gt;



&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 14 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 40 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tag_Struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 0, size 14&lt;/span&gt;
  &lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt; &lt;span class="n"&gt;fileHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 14, size 40&lt;/span&gt;
  &lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt; &lt;span class="n"&gt;infoHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 54, size 76800 words&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_Struct&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="n"&gt;butterfly_Struct&lt;/span&gt; &lt;span class="n"&gt;butterfly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x4d42u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;1u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000003u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x19e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ba4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4ba5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2283&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a83&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3324&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3363&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2163&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5445&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5466&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x08a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2103&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x29a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2263&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2283&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2243&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1903&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64aa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5ca9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64a9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c87&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6486&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5ca8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54a8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5488&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54a8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54c8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c87&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2282&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5445&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2223&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4385&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c06&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5426&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5466&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64a6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6ce6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d07&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7526&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d06&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d07&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5488&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5469&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4407&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ba6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="mh"&gt;0x64c0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2243&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2223&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6487&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7daa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7daa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85eb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8deb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e2c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85cc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x960d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x960d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dcc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x858b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d4b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7509&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d09&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d09&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7509&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6ce8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6487&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5446&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3364&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5427&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4364&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x32a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2122&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3204&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4245&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4a65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4244&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x29c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4322&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7504&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7da5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8608&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9689&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85c7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6486&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7507&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8588&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8da8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9609&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9628&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9628&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9629&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6cc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x53e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4303&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3a43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3a23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x31e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1061&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5424&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d4a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x856d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dcd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0xa60f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8d8f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d2b&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack (pop)&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* butterfly_H_ */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Фото платы STM32F429I-Disco с полученным изображением
&lt;img alt="Фото платы STM32F429I-Disco с полученным изображением" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-6.png" /&gt;&lt;/p&gt;</content><category term="LCD Image Converter"></category><category term="STM32"></category></entry><entry><title>Creating image for STM32 Discovery BSP</title><link href="https://blog.riuson.com/en/posts/2016/09/18/generate-image-for-stm32-discovery-bsp" rel="alternate"></link><published>2016-09-18T00:00:00+05:00</published><updated>2016-09-18T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-18:/en/posts/2016/09/18/generate-image-for-stm32-discovery-bsp</id><summary type="html">&lt;p&gt;How to create an image in С format for using with STM32F429I-Disco and same boards with BSP (Board Support Package).&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Initial data&lt;/h2&gt;
&lt;p&gt;And once there was a question ... How do I create an image for the board STM32F429I-Disco in "C" format for use with the &lt;abbr title="Board Support Package"&gt;BSP&lt;/abbr&gt;?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef __STLOGO_H&lt;/span&gt;
&lt;span class="cp"&gt;#define __STLOGO_H&lt;/span&gt;

&lt;span class="cp"&gt;#if defined ( __ICCARM__ ) &lt;/span&gt;&lt;span class="cm"&gt;/*!&amp;lt; IAR Compiler */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
  &lt;span class="cp"&gt;#pragma data_alignment=4   &lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="n"&gt;__ALIGN_BEGIN&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;  &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;stlogo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9174&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;__ALIGN_END&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="mh"&gt;0x42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x4d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xd6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xa0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Data format&lt;/h2&gt;
&lt;p&gt;After examining the code section of the above, it became clear that this header structure &lt;a href="https://en.wikipedia.org/wiki/BMP_file_format"&gt;BMP format&lt;/a&gt;.
I think it was made for ease of use the image files from the SD memory card.&lt;/p&gt;
&lt;p&gt;Also, based on the code of function &lt;code&gt;void BSP_LCD_DrawBitmap(uint32_t X, uint32_t Y, uint8_t *pBmp)&lt;/code&gt; from file &lt;code&gt;stm32f429i_discovery_lcd.c&lt;/code&gt; it can be assumed that code supports only the following data formats: A8R8G8B8, R5G6B5 and R8G8B8.&lt;/p&gt;
&lt;p&gt;How can I display an image in this format?&lt;/p&gt;
&lt;p&gt;There is a ready tool Bitmap Converter for emWin (BmpCvt.exe), which comes in STemwin package. You can certainly try it, but it's a simple way.&lt;/p&gt;
&lt;p&gt;How to make the conversion using LCD Image Converter?&lt;/p&gt;
&lt;p&gt;The simplest - is to decide that the conversion is not possible, as there is no ready-made presets for this.
However, the problem is only in the reconstruction of the structure header BMP and filling them with the right data.&lt;/p&gt;
&lt;p&gt;From Wiki article mentioned above, we can obtain the following structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// File type, &amp;#39;BM&amp;#39;, little-endian.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Size of file, in bytes.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Offset of pixel&amp;#39;s data from file&amp;#39;s start.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 14 bytes&lt;/span&gt;

&lt;span class="c1"&gt;// Версия 3, BITMAPINFOHEADER.&lt;/span&gt;
&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Size of this structure and its version.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Width of image, must be freater than 0.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Height of image, must be freater than 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Number of planes, must be equals to 1.&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Count of bits per pixel.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Compression type. At ST&amp;#39;s file it equals to 3, but not used because biClrUsed == 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Size of image&amp;#39;s data, in bytes.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Equals to 0.&lt;/span&gt;
  &lt;span class="kt"&gt;int32_t&lt;/span&gt;   &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Equals to 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Equals to 0.&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Equals to 0.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 40 bytes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Template&lt;/h2&gt;
&lt;p&gt;Colors will be stored in R5G6B5 format, ie 16 bits.
For this purpose, it is more convenient to take as a storage unit &lt;code&gt;uin16_t&lt;/code&gt;, instead &lt;code&gt;uint8_t&lt;/code&gt;, which will affect the data in the header.&lt;/p&gt;
&lt;p&gt;Template for filling such a structure, for the GCC compiler, will be as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef $(doc_name_ws)_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define $(doc_name_ws)_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack(push, 1)&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_block_images_table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 14 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 40 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_tag_Struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 0, size 14&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt; &lt;span class="n"&gt;fileHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 14, size 40&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt; &lt;span class="n"&gt;infoHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 54, size $(out_blocks_count) words&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_Struct&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_Struct&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x4d42u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc_name_ws&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_width&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_height&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;1u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_bpp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000003u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_blocks_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_image_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_block_images_table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack (pop)&lt;/span&gt;



&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* $(doc_name_ws)_H_ */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Settings&lt;/h2&gt;
&lt;p&gt;Main window of application&lt;/p&gt;
&lt;p&gt;&lt;img alt="LCD Image Converter main window" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Prepare.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Options - Conversion - Prepare" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Color's matrix for R5G6B5.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Options - Conversion - Matrix" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Image.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Options - Conversion - Image" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;Template file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Options - Conversion - Templates" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-5.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef butterfly_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define butterfly_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack(push, 1)&lt;/span&gt;



&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tagBITMAPFILEHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;   &lt;span class="n"&gt;bfReserved2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;   &lt;span class="n"&gt;bfOffBits&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 14 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tagBITMAPINFOHEADER&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biPlanes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt;  &lt;span class="n"&gt;biBitCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biCompression&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biSizeImage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biXPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biYPelsPerMeter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrUsed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;uint32_t&lt;/span&gt;  &lt;span class="n"&gt;biClrImportant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// size is 40 bytes&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;butterfly_tag_Struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 0, size 14&lt;/span&gt;
  &lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt; &lt;span class="n"&gt;fileHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 14, size 40&lt;/span&gt;
  &lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt; &lt;span class="n"&gt;infoHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// offset 54, size 76800 words&lt;/span&gt;
  &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="n"&gt;butterfly_Struct&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="n"&gt;butterfly_Struct&lt;/span&gt; &lt;span class="n"&gt;butterfly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x4d42u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x0000u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPFILEHEADER&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;butterfly_BITMAPINFOHEADER&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;1u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000003u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;76800&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mh"&gt;0x00000000ul&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mh"&gt;0x19e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ba4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4ba5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2283&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a83&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3324&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4405&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3363&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2163&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5445&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5466&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x08a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2103&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x29a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2263&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2283&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2aa3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2243&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1903&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1943&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64aa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5caa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5ca9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64a9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c87&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43a4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ac2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x19a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1962&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6486&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5ca8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54a8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5488&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54a8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x54c8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c87&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2282&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x22a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5445&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2223&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4385&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c06&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5426&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5466&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x64a6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6ce6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d07&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7526&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d06&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d07&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5cc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5488&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5469&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5468&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5448&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4407&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ba6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="mh"&gt;0x64c0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1a22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2243&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2223&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2ae3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6487&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7daa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7daa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85eb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8deb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e2c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e0c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85cc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85ed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x960d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x962d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x960d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dcc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x858b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d4b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7509&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d09&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d09&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7509&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6ce8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6487&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5446&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3364&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3344&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x43e6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5c67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5427&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4364&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x32a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2a03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2983&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2963&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2122&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x18e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1902&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3204&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4245&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4a65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4244&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x29c3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10a2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4322&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7504&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d84&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7da5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7dc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7de7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8608&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9689&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8e68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85c7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4c03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2b02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4bc5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6486&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7507&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8588&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8da8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9609&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9628&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9628&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9688&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9648&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x9629&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6cc6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x53e4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4304&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x4303&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3b23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3ac3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3a43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x3a23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x31e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1982&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21e2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2262&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x2222&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x21a3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1922&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x10c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1061&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0861&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x0841&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1081&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x1942&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x5424&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dc8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x85c9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d4a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x856d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x754a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x756b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x758b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d8b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x7d6c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8dcd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0xa60f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x8d8f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x752c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;0x6d2b&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// struct packing, pragma for GCC !!!&lt;/span&gt;
&lt;span class="cp"&gt;#pragma pack (pop)&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* butterfly_H_ */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Photo of board STM32F429I-Disco with image" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/09/18/generate-image-for-stm32-discovery-bsp-6.png" /&gt;&lt;/p&gt;</content><category term="LCD Image Converter"></category><category term="STM32"></category></entry><entry><title>Программное подавление дребезга контактов</title><link href="https://blog.riuson.com/ru/posts/2016/09/16/keyboard-debounce-in-software" rel="alternate"></link><published>2016-09-16T00:00:00+05:00</published><updated>2016-09-16T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-09-16:/ru/posts/2016/09/16/keyboard-debounce-in-software</id><summary type="html">&lt;p&gt;Программное подавление дребезга контактов клавиатуры на микроконтроллере, с использование прерываний. Алгоритм и демонстрация.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Обычно я использовал следующий алгоритм антидребезга:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Разрешаем EXTI &lt;abbr title="Interrupt Service Routine"&gt;ISR&lt;/abbr&gt; по входам с клавиш, по обоим фронтам.&lt;/li&gt;
&lt;li&gt;Происходит ожидание изменения уровня сигнала на входах.&lt;/li&gt;
&lt;li&gt;Прерывание по EXTI, вызов EXTI ISR.&lt;br&gt;
В EXTI ISR останавливаем и запускаем заново таймер. Например, на 20 мс.&lt;/li&gt;
&lt;li&gt;Если ко времени вызова ISR таймера произойдёт новый вызов EXTI ISR, то таймер будет перезапущен и начнёт считать заново.&lt;/li&gt;
&lt;li&gt;Таймер досчитал, вызывается ISR таймера.
Таймер останавливаем.&lt;br&gt;
Здесь состояние клавиатуры можно считать стабильным. Поэтому считываем её состояние и передаём на обработку, куда следует.&lt;/li&gt;
&lt;li&gt;Переходим к пункту 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Этот же метод вполне пригоден для определения таймаута по приёму UART на микроконтроллерах, у которых отсутствует отдельное прерывание по таймауту.&lt;/p&gt;
&lt;p&gt;На CyberForum'е заметили, что при плохом контакте прерывания от клавиатуры могут идти слишком часто и микроконтроллер будет всё время висеть в прерываниях.
Отсюда возникла небольшая доработка.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Разрешаем EXTI ISR по входам с клавиш, по обоим фронтам.&lt;/li&gt;
&lt;li&gt;Нажимается ржавая кнопка.&lt;/li&gt;
&lt;li&gt;По первому вызову EXTI ISR:&lt;/li&gt;
&lt;li&gt;Запускается таймер;&lt;/li&gt;
&lt;li&gt;Отключается только вызов ISR по EXTI в NVIC, флаги прерываний продолжают сохраняться в регистре PR;&lt;/li&gt;
&lt;li&gt;В ISR таймера:&lt;/li&gt;
&lt;li&gt;Останавливаем таймер;&lt;/li&gt;
&lt;li&gt;проверяем наличие флага прерывания от EXTI:&lt;ul&gt;
&lt;li&gt;Если флаг установлен, перезапускаем таймер;&lt;/li&gt;
&lt;li&gt;Если флаг не установлен, то считываем состояние клавиатуры и передаём на обработку.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Переходим к пункту 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://youtu.be/fA2tO8wWSKo"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Демонстрация подавления дребезга контактов&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Наличие матричной клавиатуры ничего не меняет. Просто на EXTI надо завести все линии строк либо столбцов, чтобы изменение уровня сигнала из-за любой кнопки вызывало прерывание EXTI.
В момент же считывания состояния матричной клавиатуры прерывания мешать не будут, так как таймер полностью остановлен, а EXTI ISR отключены.&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Git for Windows and P4merge</title><link href="https://blog.riuson.com/ru/posts/2016/04/20/git-windows-p4merge" rel="alternate"></link><published>2016-04-20T00:00:00+05:00</published><updated>2016-04-20T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-04-20:/ru/posts/2016/04/20/git-windows-p4merge</id><summary type="html">&lt;p&gt;Настройка использования p4merge в Git for Windows в качестве mergetool …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка использования p4merge в Git for Windows в качестве mergetool.
Применять такую утилиту приходится крайне редко, т.к. Git прекрасно проводит слияние веток, если они заранее были правильно организованы.&lt;/p&gt;
&lt;p&gt;Идёт на сайт &lt;a href="https://www.perforce.com/downloads/helix#product-10"&gt;Perforce&lt;/a&gt;.
Качаем &lt;strong&gt;Helix P4Merge: Visual Merge Tool&lt;/strong&gt; и устанавливаем.&lt;/p&gt;
&lt;p&gt;Выполняем команды&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git config --global merge.tool p4merge
$ git config --global mergetool.p4merge.path &lt;span class="s2"&gt;&amp;quot;C:/Program Files/Perforce/p4merge.exe&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После этого в файле конфигурации Git'а добавятся строки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[mergetool &amp;quot;p4merge&amp;quot;]&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C:/Program Files/Perforce/p4merge.exe&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;После выполнения merge может возникнуть конфликт&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@desktop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MINGW32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;develop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--no-ff --no-commit feature-branch&lt;/span&gt;

&lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;merging&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Removing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;merging&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitignore&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;CONFLICT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflict&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitignore&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Automatic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;merge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;conflicts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;commit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запускаем mergetool&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;user@desktop MINGW32 /c/projects/project (develop|MERGING)&lt;/span&gt;
&lt;span class="err"&gt;$ git mergetool&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Git показывает список файлов с конфликтами и начинает по очереди применять к ним настроенный merge tool.
  * &lt;span style="color:blue"&gt;REMOTE ▼&lt;/span&gt; - удалённая версия (та, что вливается сюда извне);
  * &lt;span style="color:green"&gt;LOCAL ●&lt;/span&gt; - локальная, рабочая копия;
  * &lt;span style="color:orange"&gt;BASE ■&lt;/span&gt; - найденный общий предок этого файла для локальной и удалённой веток;
  * Внизу отображается результат слияния. Цветными галочками справа можно выбирать нужную версию принимаемых изменений. Также, можно исправить результат вручную.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MergeTool" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/04/20/git-windows-p4merge-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;После исправления конфликтов следует сохранить всё и закрыть.&lt;/p&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Сага о X, Y и Z...</title><link href="https://blog.riuson.com/ru/posts/2016/02/21/saga-about-x-y-and-z" rel="alternate"></link><published>2016-02-21T00:00:00+05:00</published><updated>2016-02-21T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-02-21:/ru/posts/2016/02/21/saga-about-x-y-and-z</id><summary type="html">&lt;p&gt;Как устроен этот мир (или к вопросу о том, как …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как устроен этот мир (или к вопросу о том, как же важно уметь сказать, что вам всё-таки нужно).&lt;/p&gt;
&lt;p&gt;Однажды Новичок захотел сделать X. Но поскольку Новичок был новичком, X с ходу у него сделать не получилось. Ну, бывает, ничего в этом плохого нет: все мы были когда-то новичками. Чтобы решить проблему, Новичок решил воспользоваться форумом по программированию. Вы думаете он создал там тему вида: "Я хочу получить X. Пытаюсь сделать 111, получаю 222. Как сделать X?"? Нет! Новичок решил (ошибочно, т.к. Новичок пока не обладает достаточным знанием), что если он сумеет сделать Y, то с помощью Y он получит и X. Поэтому он написал: "Делаю 111, получаю 222. Как получить Y?" (ещё бывает, что Новичок задаёт только "Как сделать Y?").&lt;/p&gt;
&lt;p&gt;Чаще всего, Y бывает невозможным, некорректным, сложным или вообще страшно извращённым и нелогичным действием. У всех Понимающих людей вопрос "как сделать Y?" вызывает недоумение: зачем это нужно? Это же бессмысленно. Всеми силами (иногда с привлечением утюга!) пытаются выпытать у Новичка Понимающие, что же ему на самом деле нужно. Но не сдаётся Новичок: он же хочет узнать, как сделать Y. Каких только Слонов не рождали глубокие умы, пытаясь постичь неисповедимые пути Новичка! Иногда даже бывает так, что Понимающие знают ответ на вопрос "как сделать Y?", но специально его не говорят, потому что эти действия лишены смысла. Они ещё надеются наставить Новичка на путь истинный.&lt;/p&gt;
&lt;p&gt;Но вот, используя шаманский бубен, миелофон, шестое чувство, телепатор и прочие БС (Божественные Силы) кто-то из Понимающих вопрошает:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;- А, может быть, вы хотите сделать X?&lt;br&gt;
- Да, я хочу получить X. Как мне сделать Y?&lt;br&gt;
- Аааа! Ну тогда вам не нужно Y! Вам нужно Z! Если вы сделете Z так и сяк, то потом с помощью Z вот так и вот этак вы получите X.&lt;br&gt;
- Ой, правда. Спасибо!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Что ж, вот пример хорошей и доброй концовки, когда все остаются довольными.&lt;br&gt;
Но бывает и так, что кто-то из начинающих Понимающих (вчерашний Новичок), думая, что этим он помогает Новичку (или же сам Понимающий, но уже от безысходности, в надежде, что Новичок разумно распорядится даруемой в его руки Божественной Силой), даёт ответ на вопрос "как же сделать Y". Ура! - кричит Новичок и убегает доделывать Страшного Монстра, при встрече с которым потом даже самым смелым Понимающим целый месяц снятся кошмары. Тёмные Силы празднуют победу в этот день. Душа Новичка обречена гореть в геене огненной за грехи свои.&lt;/p&gt;
&lt;p&gt;А ещё бывает так, что Новичок думает, что ему отвечает другой новичок. И кажется ему, что ответ с Z неверен. И тогда он говорит:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"мне не нужен Z! Мне нужно сделать Y!".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;И если переубедить Новичка в том, что ему нужен Z, не удаётся, Новичок уходит на другой форум, где задаёт вопрос:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Мне нужен X! Как мне сделать Y? Использовать Z не предлагать!!!!!!"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Вот так-то.&lt;br&gt;
Что ж, хорошо, что на сей раз всё хорошо кончилось :) Вы спасли свою душу от огней ада. Но не волнуйтесь, вас ещё ожидает немало возможностей встать на путь Тёмных Сил.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;Найдено в &lt;a href="http://www.delphikingdom.ru/"&gt;Королевстве Delphi&lt;/a&gt;, в теме &lt;a href="http://www.delphikingdom.ru/asp/answer.asp?IDAnswer=60356"&gt;Ответ на вопрос № 60356&lt;/a&gt;, сообщение от &lt;a href="http://www.delphikingdom.ru/asp/users.asp?ID=3584"&gt;GunSmoker&lt;/a&gt;, 2008-03-18 15:13.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Англоязычное название &lt;strong&gt;X-Y Problem&lt;/strong&gt;:
  * &lt;a href="https://mywiki.wooledge.org/XyProblem"&gt;XyProblem&lt;/a&gt;
  * &lt;a href="http://www.perlmonks.org/index.pl?node_id=542341"&gt;XY Problem&lt;/a&gt;
  * &lt;a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem"&gt;What is the XY problem?&lt;/a&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Ubuntu и Asus E35M1-M, проблема с сетью</title><link href="https://blog.riuson.com/ru/posts/2016/02/02/ubuntu-and-asus-e35m1-m-network-problem" rel="alternate"></link><published>2016-02-02T00:00:00+05:00</published><updated>2016-02-02T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-02-02:/ru/posts/2016/02/02/ubuntu-and-asus-e35m1-m-network-problem</id><summary type="html">&lt;p&gt;Плата &lt;a href="https://www.asus.com/ru/Motherboards/E35M1M/"&gt;Asus E35M1-M&lt;/a&gt; формата Micro-ATX с распаянным процессором AMD APU …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Плата &lt;a href="https://www.asus.com/ru/Motherboards/E35M1M/"&gt;Asus E35M1-M&lt;/a&gt; формата Micro-ATX с распаянным процессором AMD APU E-350 Dual-Core.&lt;/p&gt;
&lt;p&gt;Проблема: ухудшение пинга со временем (с 1 мс до 10 &lt;strong&gt;секунд&lt;/strong&gt; и далее), падение скорости, потери пакетов, отваливание сети.&lt;/p&gt;
&lt;p&gt;Впервые столкнулся после покупки платы году так в 2012. Каким-то образом решил проблему и забыл.
Смутно припоминаю, что установил драйвера для сетевой карты из исходников.
После переустановки системы проблема всплыла снова.&lt;/p&gt;
&lt;h1&gt;r8168&lt;/h1&gt;
&lt;p&gt;На плате встроенная поддержка сети реализуется с помощью &lt;strong&gt;Realtek® 8111E , 1 x Gigabit LAN Controller(s)&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lspci -v

&lt;span class="m"&gt;03&lt;/span&gt;:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;06&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    Subsystem: ASUSTeK Computer Inc. P8P67 and other motherboards
    Flags: bus master, fast devsel, latency &lt;span class="m"&gt;0&lt;/span&gt;, IRQ &lt;span class="m"&gt;24&lt;/span&gt;
    I/O ports at e000 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0004000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4K&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0000000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;16K&lt;span class="o"&gt;]&lt;/span&gt;
    Capabilities: &amp;lt;access denied&amp;gt;
    Kernel driver in use: r8169
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Раньше надо было собирать драйвер для 8111/8168 из исходников.
Сейчас в репозитории есть пакет &lt;a href="http://packages.ubuntu.com/wily/r8168-dkms"&gt;r8168-dkms&lt;/a&gt;.
После его установки контроллер работает уже с иным драйвером:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ lspci -v

&lt;span class="m"&gt;03&lt;/span&gt;:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller &lt;span class="o"&gt;(&lt;/span&gt;rev &lt;span class="m"&gt;06&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    Subsystem: ASUSTeK Computer Inc. P8P67 and other motherboards
    Flags: bus master, fast devsel, latency &lt;span class="m"&gt;0&lt;/span&gt;, IRQ &lt;span class="m"&gt;24&lt;/span&gt;
    I/O ports at e000 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0004000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4K&lt;span class="o"&gt;]&lt;/span&gt;
    Memory at d0000000 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;-bit, prefetchable&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;16K&lt;span class="o"&gt;]&lt;/span&gt;
    Capabilities: &amp;lt;access denied&amp;gt;
    Kernel driver in use: r8168
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Откатить на прежний драйвер можно удалением этого пакета через --purge.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/141343"&gt;Bug #141343: r8169 driver does not work with Realtek "PCI-E" 8111B integrated network controller&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://unixblogger.wordpress.com/2011/10/18/the-pain-of-an-realtek-rtl8111rtl8168-ethernet-card/"&gt;The pain of an Realtek (RTL8111/RTL8168) ethernet card&lt;/a&gt;&lt;/br&gt;
&lt;a href="https://nelsonslog.wordpress.com/2012/01/22/realtek-ethernet-drivers-r8169-vs-r8168/"&gt;Realtek ethernet drivers: r8169 vs r8168&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Однако, говорят, что именно эта проблема с r8168 была закрыта. И действительно, установка этого драйвера в данном случае не помогла. Если в прошлый раз отваливалась локальная сеть, за этой сетевой картой, то теперь сеть провайдера за дискретной сетевой на базе 8139.&lt;/p&gt;
&lt;h1&gt;ASM1083&lt;/h1&gt;
&lt;p&gt;Простеньким скриптом было обнаружено время возникновения ошибки. Между двумя этими записями:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;========&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;T02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0500&lt;/span&gt; &lt;span class="o"&gt;========&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;998&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500253&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;211&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2370&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;411349&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;carrier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;393385246&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;393&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;127926222&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;========&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;T02&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;0500&lt;/span&gt; &lt;span class="o"&gt;========&lt;/span&gt;
&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;icmp_seq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500265&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;211&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2370&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;411361&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;carrier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;393386290&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;393&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;127927258&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В kern.log обнаружилось соответствие:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771329] irq 18: nobody cared (try booting with the &amp;quot;irqpoll&amp;quot; option)&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771426] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           OE   4.2.0-25-generic #30-Ubuntu&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771430] Hardware name: System manufacturer System Product Name/E35M1-M, BIOS 1401 12/21/2011&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771435]  0000000000000000 e37fa07b054cf793 ffff88013ec03e28 ffffffff817e94c9&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771442]  0000000000000000 ffff880035cdf0bc ffff88013ec03e58 ffffffff810d6b65&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771447]  ffffffff81cbd600 ffff880035cdf000 0000000000000000 0000000000000012&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771452] Call Trace:&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771456]  &amp;lt;IRQ&amp;gt;  [&amp;lt;ffffffff817e94c9&amp;gt;] dump_stack+0x45/0x57&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771474]  [&amp;lt;ffffffff810d6b65&amp;gt;] __report_bad_irq+0x35/0xd0&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771479]  [&amp;lt;ffffffff810d6f0d&amp;gt;] note_interrupt+0x24d/0x290&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771484]  [&amp;lt;ffffffff810d432c&amp;gt;] handle_irq_event_percpu+0x11c/0x180&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771489]  [&amp;lt;ffffffff810d43d9&amp;gt;] handle_irq_event+0x49/0x70&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771494]  [&amp;lt;ffffffff810d742a&amp;gt;] handle_fasteoi_irq+0x9a/0x150&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771499]  [&amp;lt;ffffffff810172b5&amp;gt;] handle_irq+0x25/0x40&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771504]  [&amp;lt;ffffffff817f2eaf&amp;gt;] do_IRQ+0x4f/0xe0&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771508]  [&amp;lt;ffffffff817f0e2b&amp;gt;] common_interrupt+0x6b/0x6b&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771510]  &amp;lt;EOI&amp;gt;  [&amp;lt;ffffffff81060526&amp;gt;] ? native_safe_halt+0x6/0x10&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771522]  [&amp;lt;ffffffff81488261&amp;gt;] arch_safe_halt+0x9/0xd&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771526]  [&amp;lt;ffffffff814889b7&amp;gt;] acpi_safe_halt+0x22/0x2b&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771530]  [&amp;lt;ffffffff814889e0&amp;gt;] acpi_idle_do_entry+0x20/0x30&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771534]  [&amp;lt;ffffffff81488eb0&amp;gt;] acpi_idle_enter+0x1e8/0x21e&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771540]  [&amp;lt;ffffffff81687074&amp;gt;] cpuidle_enter_state+0xf4/0x270&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771544]  [&amp;lt;ffffffff81687227&amp;gt;] cpuidle_enter+0x17/0x20&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771548]  [&amp;lt;ffffffff810bd4f2&amp;gt;] call_cpuidle+0x32/0x60&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771552]  [&amp;lt;ffffffff81687203&amp;gt;] ? cpuidle_select+0x13/0x20&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771556]  [&amp;lt;ffffffff810bd788&amp;gt;] cpu_startup_entry+0x268/0x320&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771562]  [&amp;lt;ffffffff817dda2c&amp;gt;] rest_init+0x7c/0x80&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771568]  [&amp;lt;ffffffff81d50025&amp;gt;] start_kernel+0x48b/0x4ac&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771573]  [&amp;lt;ffffffff81d4f120&amp;gt;] ? early_idt_handler_array+0x120/0x120&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771577]  [&amp;lt;ffffffff81d4f339&amp;gt;] x86_64_start_reservations+0x2a/0x2c&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771581]  [&amp;lt;ffffffff81d4f485&amp;gt;] x86_64_start_kernel+0x14a/0x16d&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771584] handlers:&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771613] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771663] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771712] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771761] [&amp;lt;ffffffff815db9c0&amp;gt;] usb_hcd_irq&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771815] [&amp;lt;ffffffffc01361c0&amp;gt;] rtl8139_interrupt [8139too]&lt;/span&gt;
&lt;span class="err"&gt;Feb  1 02:06:55 ubuntu kernel: [82015.771878] Disabling IRQ #18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Поиск по &lt;strong&gt;irq "nobody cared"&lt;/strong&gt; прояснил, что проблема, вероятно, кроется в чипе ASM1083, используемом на данной материнской плате и на других от Asus:
&lt;a href="https://bugzilla.kernel.org/show_bug.cgi?id=38632"&gt;Bug 38632 - IRQ Nobody Cared on Sandybridge Additional Ethernet Card&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://www.asmedia.com.tw/eng/e_show_products.php?item=114"&gt;ASMedia ASM1083&lt;/a&gt;&lt;br/&gt;
 Engaged in High Speed I/O solution development, Asmedia Technology is committed to enlarging product portfolio with introducing PCI Express Bridge Products. &lt;strong&gt;The ASM1083, x1 PCI Express to 32-bit PCI Bridge&lt;/strong&gt;, enables users to connect legacy parallel bus devices to the advanced serial PCI Express interface.  The ASM1083 is a PCI Express-to-PCI forward bridge, fully compliant with PCI-SIG PCI Express-to-PCI Bridge Specification1.0.
- Support PCI bus 33 MHz
- Support 3 PCI Masters
- SSC Support
- CLKRUN Support
- PME Support&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Из-за некой ошибки в этом чипе, при работе с устройствами за ним (на шине PCI, которую он обеспечивает), иногда происходит сбой и всё накрывается медным тазом.
Предлагаемые решения:
 - Не подключать ничего к шине PCI, т.е. не работать с устройствами через этот мост;
 - Настроить прерывания устройств на несовпадающие номера (иногда помогает);
 - Добавить &lt;strong&gt;irqpoll&lt;/strong&gt; в опции загрузки ядра (иногда помогает);
 - Не покупать платы с чипами от ASMedia.&lt;/p&gt;
&lt;p&gt;Драйвера для Windows, якобы, используют именно метод irqpoll. Это хоть и делает работу более стабильной, но отрицательно сказывается на производительности.&lt;/p&gt;</content><category term="misc"></category><category term="Ubuntu"></category></entry><entry><title>Установка и настройка Eclipse, STM32CubeMX под Windows</title><link href="https://blog.riuson.com/ru/posts/2016/01/25/setup-eclipse-stm32cubemx-on-windows" rel="alternate"></link><published>2016-01-25T00:00:00+05:00</published><updated>2016-01-25T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-01-25:/ru/posts/2016/01/25/setup-eclipse-stm32cubemx-on-windows</id><summary type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Здесь описываю настройку среды разработки для микроконтроллеров STM32, с использованием Eclipse, STM32CubeMX, GNU ARM Embedded, GNU ARM Eclipse Plugins.
На примере микроконтроллера STM32F030F4P6.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Q68PBMGceqs"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt; Видео: Настройка Eclipse и STM32CubeMX под Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;На видео приведён весь процесс установки и настройки. Операционная система Windows 10, взята с сайта Microsoft: &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/windows/"&gt;Download virtual machines&lt;/a&gt;. Образы выложены там для тестирования софта под различными браузерами.&lt;/p&gt;
&lt;p class="text-warning"&gt;Описываемая последовательность не обязана работать на Вашем ПК, т.к. правильность настроек может зависеть от текущего окружения операционной системы. Если у Вас это не работает или найдёте ошибку, пишите в комментариях.&lt;/p&gt;
&lt;h1&gt;Загрузка&lt;/h1&gt;
&lt;p&gt;Список ПО, которое понадобится:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/download/"&gt;Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.eclipse.org/downloads/"&gt;Eclipse IDE for C/C++ Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/catalog/tools/FM147/CL1794/SC961/SS1743/PF259242?icmp=stm32cubemx_pron_prcube_feb2014&amp;amp;sc=stm32cube-pr"&gt;STM32CubeMX STM32Cube initialization code generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/en/catalog/tools/PF257931"&gt;STM32CubeMX Eclipse plug in for STM32 configuration and initialization C code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.st.com/web/en/catalog/tools/PF260612"&gt;STM32CubeF0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://launchpad.net/gcc-arm-embedded"&gt;GCC ARM Embedded&lt;/a&gt; Windows Installer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/"&gt;The GNU ARM Eclipse plug-ins&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;How to install the GNU ARM Eclipse plug-ins?&lt;/a&gt; (скачивается из самого Eclipse)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;How to install the Windows Build Tools?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.segger.com/jlink-software.html"&gt;Jlink - Software and documentation pack for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Установка&lt;/h1&gt;
&lt;h2&gt;Java Virtual Machine&lt;/h2&gt;
&lt;p&gt;Далее, далее, ... тут всё понятно.&lt;/p&gt;
&lt;h2&gt;Eclipse IDE for C/C++ Developers&lt;/h2&gt;
&lt;p&gt;Распаковываем архив с IDE куда-нибудь.&lt;/p&gt;
&lt;h2&gt;Windows Build Tools&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/windows-build-tools/install/"&gt;руководстве&lt;/a&gt;. Ничего необычного.&lt;/p&gt;
&lt;h2&gt;GCC ARM Embedded&lt;/h2&gt;
&lt;p&gt;При завершения установки снимаем галочки с Launch &lt;em&gt;gccvar.bat&lt;/em&gt; и &lt;em&gt;Add path to enviroment variable&lt;/em&gt;. Чтобы можно было установить несколько компиляторов.&lt;/p&gt;
&lt;h2&gt;GNU ARM Eclipse plug-ins&lt;/h2&gt;
&lt;p&gt;Установка описана в &lt;a href="http://gnuarmeclipse.github.io/plugins/install/"&gt;руководстве&lt;/a&gt;.
В меню Eclipse выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt;. Добавляем сайт&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: GNU ARM Eclipse Plug-ins&lt;/li&gt;
&lt;li&gt;URL: http://gnuarmeclipse.sourceforge.net/updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;И устанавливаем всё.&lt;/p&gt;
&lt;h2&gt;STM32CubeMX Eclipse plug in&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Через меню &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Software...&lt;/em&gt; устанавливаем плагин из архива &lt;em&gt;STSW-STM32095.zip&lt;/em&gt;.
Перезапускаем Eclipse.&lt;/p&gt;
&lt;h2&gt;STM32CubeF0&lt;/h2&gt;
&lt;p&gt;Запускаем Eclipse. Открываем STM32CubeMX через меню &lt;em&gt;Window&lt;/em&gt; -&amp;gt; &lt;em&gt;Show View&lt;/em&gt; -&amp;gt; &lt;em&gt;Other...&lt;/em&gt;. Там в дереве, в ветке Other, будет STM32CubeMX.
В меню STM32CubeMX выбираем &lt;em&gt;Help&lt;/em&gt; -&amp;gt; &lt;em&gt;Install New Libraries&lt;/em&gt;, открывается окно установки пакетов под серии микроконтролллеров. Нажимаем кнопку &lt;em&gt;From Local...&lt;/em&gt; и выбираем скачанный ранее архив &lt;em&gt;STM32CubeF0.ZIP&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Jlink&lt;/h2&gt;
&lt;p&gt;Всё как обычно.&lt;/p&gt;
&lt;h1&gt;Настройка&lt;/h1&gt;
&lt;h2&gt;Создание проекта в Eclipse&lt;/h2&gt;
&lt;p&gt;В мастере создания нового проекта выбираем &lt;em&gt;C/C++&lt;/em&gt; -&amp;gt; &lt;em&gt;C Project&lt;/em&gt;.
Далее указываем имя проекта и тип &lt;em&gt;Hello World ARM C Project&lt;/em&gt;, Toolchain &lt;em&gt;Cross ARM GCC&lt;/em&gt;.
Далее меняем каталог исходников Source с &lt;em&gt;src&lt;/em&gt; на &lt;em&gt;Src&lt;/em&gt;. В Linker semi-hosting options стираем всё и пишем &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;--specs=nosys.specs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Пробуем собрать проект.&lt;/p&gt;
&lt;h2&gt;Создание проекта в STM32CubeMX&lt;/h2&gt;
&lt;h3&gt;Генерация кода&lt;/h3&gt;
&lt;p&gt;Запускаем STM32CubeMX, создаём новый проект.
В списке микроконтроллеров выбираем нужный (здесь STM32F030F4P6 для примера).
Настраиваем как нужно.
Запускаем генерацию кода из меню. Указываем имя проекта как было в Eclipse выше. Указываем Project Location на каталог workspace, где лежит тот проект. Меняем Toolchain/IDE на SW4STM32.
Запускаем.
Исходные коды проекта будут созданысгенерированы поверх уже существующего проекта.
Закрываем STM32CubeMX.&lt;/p&gt;
&lt;p&gt;Обновляем дерево проекта в Eclipse. Появляются новые каталоги, &lt;em&gt;Driver&lt;/em&gt; и &lt;em&gt;Inc&lt;/em&gt;. Сгенерированный Src совпал с уже сушествующим.
Новые каталоги исключены из сборки, поэтому включаем их через свойства в контекстном меню.
При необходимости, меняем в свойствах проект кодировку исходников на UTF-8.&lt;/p&gt;
&lt;p&gt;Создаём в каталоге &lt;em&gt;Src&lt;/em&gt; файл &lt;em&gt;startup.asm&lt;/em&gt;. Прописывываем в нём путь к стартовому файлу на ассемблере:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;.include&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;../Drivers/CMSIS/Device/ST/STM32F0xx/Source/Templates/gcc/startup_stm32f030x6.s&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Это позволит оставить файлы &lt;em&gt;&lt;em&gt;.s_ на месте (они не попадают под сборку ассемблером), но в то же время включить нужный в сборку через файл _&lt;/em&gt;.asm&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ищем файл &lt;em&gt;../Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_msp_template.c&lt;/em&gt; и исключаем его из сборки, через свойства файла.&lt;/p&gt;
&lt;h3&gt;Перенос настроек&lt;/h3&gt;
&lt;p&gt;Далее, надо перенести настройки проекта из сгенерированного в существующий.
Открываем XML файл сгенерированного проекта в &lt;em&gt;./SW4STM32/&lt;project name&gt; Configuration/.cproject&lt;/em&gt;.
Делаем его текст более читаемым через любое средство форматирования XML, позволяющее разнести атрибуты по строкам.&lt;/p&gt;
&lt;h4&gt;Include&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле пути для Include, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths.976375416&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Include paths (-I)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.include.paths&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;includePath&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;..\..\..\Inc&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Compiler&lt;/em&gt; -&amp;gt; &lt;em&gt;Includes&lt;/em&gt;. Добавляем найденные каталоги из XML файла в список &lt;em&gt;Include paths (-I)&lt;/em&gt;.
Заменяем относительные пути:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;../../../Inc&lt;/span&gt;
&lt;span class="cp"&gt;../../../Drivers/STM32F0xx_HAL_Driver/Inc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ProjDirPath&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Inc
&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ProjDirPath&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Drivers/STM32F0xx_HAL_Driver/Inc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Define&lt;/h4&gt;
&lt;p&gt;Ищем в XML файле макросы, в ноде, подобной следующей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;tool&lt;/span&gt;
    &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler.147826764&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MCU GCC Compiler&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fr.ac6.managedbuild.tool.gnu.cross.c.compiler&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols.1801753735&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Defined symbols (-D)&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;superClass=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gnu.c.compiler.option.preprocessor.def.symbols&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;useByScannerDiscovery=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;valueType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;definedSymbols&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listOptionValue&lt;/span&gt;
            &lt;span class="na"&gt;builtIn=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__weak=__attribute__((weak))&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Compiler&lt;/em&gt; -&amp;gt; &lt;em&gt;Preprocessor&lt;/em&gt;. Добавляем найденные макросы из XML файла в список &lt;em&gt;Defined symbols (-D)&lt;/em&gt;.
Список примерно следующий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;__weak=&amp;quot;__attribute__((weak))&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;__packed=&amp;quot;__attribute__((__packed__))&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;USE_HAL_DRIVER&lt;/span&gt;
&lt;span class="err"&gt;STM32F030x6&lt;/span&gt;
&lt;span class="err"&gt;ARM_MATH_CM0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Последнего в XML файле нет, но без него библиотеки не соберутся.&lt;/p&gt;
&lt;h4&gt;ARM family&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Target Processor&lt;/em&gt; -&amp;gt; &lt;em&gt;ARM family&lt;/em&gt;, выбираем &lt;em&gt;cortex-m0&lt;/em&gt;, соответственно микроконтроллеру.&lt;/p&gt;
&lt;h4&gt;Linker script&lt;/h4&gt;
&lt;p&gt;Открываем свойства проекта в Eclipse, идём в &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Tool Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Cross ARM C Linker&lt;/em&gt; -&amp;gt; &lt;em&gt;General&lt;/em&gt;. Добавляем в список &lt;em&gt;Scripts files (-T)&lt;/em&gt; путь к файлу скрипта, созданного при генерации проекта в STM32CubeMX. Например, &lt;em&gt;./SW4STM32/&lt;project name&gt; Configuration/STM32F030F4Px_FLASH.ld&lt;/em&gt;.
Ниже, в Miscellaneous, ставим галочку на &lt;em&gt;Use newlib-nano (--specs=nano.specs)&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Сборка.&lt;/h1&gt;
&lt;p&gt;Собираем проект.
Для ускорения сборки можно включить параллельную работу в свойствах проекта &lt;em&gt;C/C++ Build&lt;/em&gt; -&amp;gt; &lt;em&gt;Behavior&lt;/em&gt; -&amp;gt; &lt;em&gt;Enable parallel build&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Отладка&lt;/h1&gt;
&lt;h2&gt;Проверка связи с отладчиком и микроконтроллером через J-Flash.&lt;/h2&gt;
&lt;p&gt;Запускаем J-Flash. Создаём новый проект. В свойствах проекта выбираем свой отладчик, &lt;em&gt;Target Interface&lt;/em&gt;, &lt;em&gt;CPU&lt;/em&gt; -&amp;gt; &lt;em&gt;Device&lt;/em&gt;. Выполняем подключение &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Connect&lt;/em&gt;. Если в логах появилась запись &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;- Connected successfully&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;, то всё OK. Если нет, разбираемся с драйверами и подключением.
Для дополнительной проверки можно считать память программ микроконтроллера через меню &lt;em&gt;Target&lt;/em&gt; -&amp;gt; &lt;em&gt;Read back&lt;/em&gt; -&amp;gt; &lt;em&gt;Entire chip&lt;/em&gt;. Должно отобразиться содержимое памяти. Если нет - опять же разбираемся с поключением.&lt;/p&gt;
&lt;h2&gt;Настройка Eclipse&lt;/h2&gt;
&lt;p&gt;Открываем меню &lt;em&gt;Debug&lt;/em&gt; -&amp;gt; &lt;em&gt;Debug Configurations...&lt;/em&gt;.
Создаём новое подключение под &lt;em&gt;GDB Segger J-Link Debugging&lt;/em&gt;.
На вкладке &lt;em&gt;Debugger&lt;/em&gt; прописываем &lt;em&gt;Device name&lt;/em&gt; (ссылка на список поддерживаемых устройств там есть справа), например &lt;em&gt;STM32F030F4&lt;/em&gt;. Выбираем подключение &lt;em&gt;Connection&lt;/em&gt; и интерфейс &lt;em&gt;Interface&lt;/em&gt;, если требуется. 
На вкладке &lt;em&gt;Common&lt;/em&gt; ставим галочку на &lt;em&gt;Debug&lt;/em&gt; в списке &lt;em&gt;Display in favorites menu&lt;/em&gt; для упрощения перехода в режим отладки.
Далее окно настроек можно закрыть и запустить отладку через меню &lt;em&gt;Debug&lt;/em&gt;.
Бинарник должен прошиться в память программ и начаться отладка, с остановкой в начале функции &lt;em&gt;main&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Обновление проекта&lt;/h1&gt;
&lt;p&gt;Данная структура проекта позволяет обновить проект черех генератор кода STM32CubeMX без особых усилий, при соблюдении рекомендаций к написанию пользовательского кода в предназначенных для того участках.
Запускаем STM32CubeMX. Загружаем проект STM32CubeMX (файл *.ioc, сохранённый в каталоге проекта при генерации кода).
Меняем необходимые настройки, отключаем или подключаем модули.
Потом запускаем генерацию кода и файла описания.
Файлы перезаписываются поверх существующего проекта, сохраняя упомянутые выше участки пользовательского кода.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;На этом всё.&lt;/strong&gt;&lt;/p&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Hard-coded пути в QtCore.dll</title><link href="https://blog.riuson.com/ru/posts/2016/01/09/qtcore-hard-coded-paths" rel="alternate"></link><published>2016-01-09T00:00:00+05:00</published><updated>2016-01-09T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2016-01-09:/ru/posts/2016/01/09/qtcore-hard-coded-paths</id><summary type="html">&lt;p&gt;Hard-coded путь qt_prfxpath в библиотеке QtCore под Windows.&lt;/p&gt;</summary><content type="html">&lt;p&gt;После обновления Qt 5.5.0 до Qt 5.5.1 оказалось, что приложение перестало работать.
Выдаваемые ошибки:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
This application failed to start because it could not find or load the Qt platform plugin "windows".
Available platform plugins are: minimal, offscreen, windows windows.
Reinstalling the application may fix the problem.
&lt;/blockquote&gt;

&lt;p&gt;и&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
Microsoft Visual C++ Runtime Library
Runtime Error!
This application has requested the Runtime to terminate it in an unusual way.
Please contact the application's support team for more information.
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="QtCore Failure 1" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="QtCore Failure 2" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Поиск недостающих зависимостей в dependency walker ничего не дал. Нужные пакеты MS VC++ Redistibutable установлены..&lt;/p&gt;
&lt;p&gt;Скачал прежнюю версию Qt, 5.5.0, но случайно установил её не в &lt;em&gt;D:\Qt&lt;/em&gt;, а в &lt;em&gt;C:\Qt&lt;/em&gt; (по умолчанию). Копирование библиотек из этой установки в каталог к приложению привёл его в рабочее состояние.&lt;/p&gt;
&lt;p&gt;По объёму и версии библиотеки оказались идентичные. В сравнении содержимого обнаружилось отличие:&lt;/p&gt;
&lt;p&gt;&lt;img alt="QtCore Compare" class="img-fluid" src="https://blog.riuson.com/images/posts/2016/01/09/qtcore-hard-coded-paths-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Библиотека QtCore5.dll содержит в себе строку пути &lt;strong&gt;qt_prfxpath&lt;/strong&gt; к месту установки библиотеки Qt на компьютере разработчика.&lt;/p&gt;
&lt;p&gt;В багтрекере обнаружился следующий тикет: &lt;a href="https://bugreports.qt.io/browse/QTBUG-31760"&gt;QtQTBUG-31760 Local path information is baked into Qt5Core.dll causing very hard to reproduce crashes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;В качестве решения предлагают задействовать &lt;a href="http://doc.qt.io/qt-5/qt-conf.html"&gt;qt.conf&lt;/a&gt; для переопределения путей.&lt;/p&gt;</content><category term="misc"></category><category term="Qt"></category></entry><entry><title>Windows 7 - Перенос каталога пользователя на другой диск</title><link href="https://blog.riuson.com/ru/posts/2015/09/18/windows-7-move-user-dir-to-another-drive" rel="alternate"></link><published>2015-09-18T00:00:00+05:00</published><updated>2015-09-18T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-18:/ru/posts/2015/09/18/windows-7-move-user-dir-to-another-drive</id><summary type="html">&lt;p&gt;Как перенести каталог пользователя C:\Users\User на другой диск …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как перенести каталог пользователя C:\Users\User на другой диск, чтобы не забивать зря пространство.&lt;/p&gt;
&lt;p&gt;Установили Windows 7, получили одного пользователя (например, &lt;em&gt;Vasya&lt;/em&gt;) с правами администратора.&lt;/p&gt;
&lt;p&gt;Активируем учётную запись &lt;em&gt;Администратора&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;net user administrator /active:yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Выходим из учётной записи &lt;em&gt;Vasya&lt;/em&gt;, заходим под &lt;em&gt;Администратором&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Создаём на диске другом диске каталог для пользователя.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;mkdir D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Копируем прежний каталог пользователя в новое место&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;robocopy /copyall /mir /xj C:\Users\Vasya D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Удаляем прежний каталог пользователя&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;rmdir /S /Q C:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Создаём ссылку со старого местоположения на новое&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;mklink /J C:\Users\Vasya D:\Users\Vasya&lt;/span&gt;
&lt;span class="err"&gt;Junction created for C:\Users\Vasya &amp;lt;&amp;lt;===&amp;gt;&amp;gt; D:\Users\Vasya&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Готово.
Всё файлы, создаваемые операционной системой или сторонними программами в папках пользователя, будут находиться на диске D, и в то же время будут доступны по старому пути на диске C.&lt;/p&gt;</content><category term="misc"></category><category term="Windows7"></category></entry><entry><title>Git - корректировка дат в коммитах</title><link href="https://blog.riuson.com/ru/posts/2015/09/17/git-commit-dates-correction" rel="alternate"></link><published>2015-09-17T00:00:00+05:00</published><updated>2015-09-17T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-17:/ru/posts/2015/09/17/git-commit-dates-correction</id><summary type="html">&lt;p&gt;Как сменить дату коммита в Git&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Замена дат в предыдущих коммитах.&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://eddmann.com/posts/changing-the-timestamp-of-a-previous-git-commit/"&gt;Changing the timestamp of a previous Git commit&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git filter-branch --env-filter &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;if test \$GIT_COMMIT = &amp;#39;e6dbcffca68e4b51887ef660e2389052193ba4f4&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;then&lt;/span&gt;
&lt;span class="s2"&gt;    export GIT_AUTHOR_DATE=&amp;#39;Sat, 14 Dec 2013 12:40:00 +0000&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;    export GIT_COMMITTER_DATE=&amp;#39;Sat, 14 Dec 2013 12:40:00 +0000&amp;#39;&lt;/span&gt;
&lt;span class="s2"&gt;fi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -fr &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --git-dir&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/refs/original/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Замена даты в новом коммите.&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;GIT_COMMITTER_DATE=&amp;quot;2000-01-01 12:00:00 +0300&amp;quot; git commit --date &amp;quot;2000-01-01 12:00:00 +0300&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>Обновление PATH пользователя из командной строки</title><link href="https://blog.riuson.com/ru/posts/2015/09/03/updating-user-path-variable-from-command-line" rel="alternate"></link><published>2015-09-03T00:00:00+05:00</published><updated>2015-09-03T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-09-03:/ru/posts/2015/09/03/updating-user-path-variable-from-command-line</id><summary type="html">&lt;p&gt;Обновление пользовательской переменной окружения PATH из командной строки.&lt;/p&gt;
&lt;h3&gt;Git Bash …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;Обновление пользовательской переменной окружения PATH из командной строки.&lt;/p&gt;
&lt;h3&gt;Git Bash:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;setlocal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ENABLEEXTENSIONS&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;HKEY_CURRENT_USER\Environment&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;FOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;usebackq skip=2 tokens=1,2*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;REG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;QUERY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;^&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueName&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueType&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defined&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ValueName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;@echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;User_Path&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;@echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;KEY_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;VALUE_NAME&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;NOT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path%&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path:Git=%&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;added&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Adding&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;setx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;%User_Path%;c:\Tools\Git64\bin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;PowerShell&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Current path: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EnsurePathAdded&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;System.String&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Exists: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathNew&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;SetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathNew&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathUpdated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="o"&gt;]::&lt;/span&gt;&lt;span class="n"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;userPathUpdated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Added: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;Write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Failed to add path: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;EnsurePathAdded&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;requiredPath&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;c:\Work\Tools\Git64\bin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;DisplayPath&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Опциональный запуск через bat:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;@echo off&lt;/span&gt;
&lt;span class="err"&gt;set dir=%cd%&lt;/span&gt;
&lt;span class="err"&gt;PowerShell.exe -ExecutionPolicy bypass %dir%\update-path.ps1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Git"></category></entry><entry><title>STM32 HAL UART DMA приём пакетов переменной длины</title><link href="https://blog.riuson.com/ru/posts/2015/07/27/stm32-hal-uart-dma-rx-variable-length" rel="alternate"></link><published>2015-07-27T00:00:00+05:00</published><updated>2015-07-27T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-07-27:/ru/posts/2015/07/27/stm32-hal-uart-dma-rx-variable-length</id><summary type="html">&lt;p&gt;STM32 HAL UART Приём данных переменной длины с помощью DMA …&lt;/p&gt;</summary><content type="html">&lt;p&gt;STM32 HAL UART Приём данных переменной длины с помощью DMA.&lt;/p&gt;
&lt;p&gt;Добавляем определение обработчика для IDLE.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h b/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h&lt;/span&gt;
&lt;span class="gu"&gt;@@ -693,6 +693,7 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart);&lt;/span&gt;
 void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
&lt;span class="gi"&gt;+void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart);&lt;/span&gt;
 void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart);
 void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Добавляем обработку прерывания IDLE в обработчик прерываний UART.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c b/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1238,6 +1238,15 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)&lt;/span&gt;
     UART_EndTransmit_IT(huart);
   }  

&lt;span class="gi"&gt;+  tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  /* UART in mode Transmitter end --------------------------------------------*/&lt;/span&gt;
&lt;span class="gi"&gt;+  if((tmp_flag != RESET) &amp;amp;&amp;amp; (tmp_it_source != RESET))&lt;/span&gt;
&lt;span class="gi"&gt;+  {&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_CLEAR_IDLEFLAG(huart);&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_RxIdleCallback(huart);&lt;/span&gt;
&lt;span class="gi"&gt;+  }&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
   if(huart-&amp;gt;ErrorCode != HAL_UART_ERROR_NONE)
   {
     /* Set the UART state ready to be able to start again the process */
&lt;span class="gu"&gt;@@ -1248,6 +1257,19 @@ void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)&lt;/span&gt;
 }

 /**
&lt;span class="gi"&gt;+  * @brief  Rx Idle callbacks.&lt;/span&gt;
&lt;span class="gi"&gt;+  * @param  huart: Pointer to a UART_HandleTypeDef structure that contains&lt;/span&gt;
&lt;span class="gi"&gt;+  *                the configuration information for the specified UART module.&lt;/span&gt;
&lt;span class="gi"&gt;+  * @retval None&lt;/span&gt;
&lt;span class="gi"&gt;+  */&lt;/span&gt;
&lt;span class="gi"&gt;+__weak void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+ /* NOTE: This function should not be modified, when the callback is needed,&lt;/span&gt;
&lt;span class="gi"&gt;+          the HAL_UART_RxIdleCallback can be implemented in the user file&lt;/span&gt;
&lt;span class="gi"&gt;+  */&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+/**&lt;/span&gt;
   * @brief  Tx Transfer completed callbacks.
   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
   *                the configuration information for the specified UART module.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Доработка задачи приёма.&lt;br&gt;
Настраивается приём через DMA для пакета размером в весь доступный буфер.&lt;br&gt;
Затем идёт ожидание семафора. Семафор устанавливается в обработчике IDLE.&lt;br&gt;
После, вычисляется количество принятых данных, как разница между ожидаемым количеством (размером буфера) и оставшимся (ещё не принятым) CNDTR.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Src/freertos.c b/Src/freertos.c&lt;/span&gt;
&lt;span class="gh"&gt;index a7db5b3..5ffd4df 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/Src/freertos.c&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/Src/freertos.c&lt;/span&gt;
&lt;span class="gu"&gt;@@ -38,13 +38,15 @@&lt;/span&gt;

 /* USER CODE BEGIN Includes */     
 #include &amp;quot;stm32f1xx_hal.h&amp;quot;
&lt;span class="gi"&gt;+#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
 /* USER CODE END Includes */

 /* Variables -----------------------------------------------------------------*/
 osThreadId taskTestHandle;
 osThreadId taskSerialCommHandle;
 osThreadId taskDisplayHandle;
&lt;span class="gd"&gt;-osSemaphoreId semSerialCommReceivedHandle;&lt;/span&gt;
&lt;span class="gi"&gt;+osSemaphoreId semSerialCommRxIdleHandle;&lt;/span&gt;
&lt;span class="gi"&gt;+osSemaphoreId semSerialCommTxCompletedHandle;&lt;/span&gt;

 /* USER CODE BEGIN Variables */
 extern UART_HandleTypeDef huart1;
&lt;span class="gu"&gt;@@ -75,9 +77,13 @@ void MX_FREERTOS_Init(void) {&lt;/span&gt;
   /* USER CODE END RTOS_MUTEX */

   /* Create the semaphores(s) */
&lt;span class="gd"&gt;-  /* definition and creation of semSerialCommReceived */&lt;/span&gt;
&lt;span class="gd"&gt;-  osSemaphoreDef(semSerialCommReceived);&lt;/span&gt;
&lt;span class="gd"&gt;-  semSerialCommReceivedHandle = osSemaphoreCreate(osSemaphore(semSerialCommReceived), 1);&lt;/span&gt;
&lt;span class="gi"&gt;+  /* definition and creation of semSerialCommRxIdle */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreDef(semSerialCommRxIdle);&lt;/span&gt;
&lt;span class="gi"&gt;+  semSerialCommRxIdleHandle = osSemaphoreCreate(osSemaphore(semSerialCommRxIdle), 1);&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+  /* definition and creation of semSerialCommTxCompleted */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreDef(semSerialCommTxCompleted);&lt;/span&gt;
&lt;span class="gi"&gt;+  semSerialCommTxCompletedHandle = osSemaphoreCreate(osSemaphore(semSerialCommTxCompleted), 1);&lt;/span&gt;

   /* USER CODE BEGIN RTOS_SEMAPHORES */
   /* add semaphores, ... */
&lt;span class="gu"&gt;@@ -126,10 +132,29 @@ void TaskTestStart(void const * argument)&lt;/span&gt;
 void TaskSerialCommStart(void const * argument)
 {
   /* USER CODE BEGIN TaskSerialCommStart */
&lt;span class="gi"&gt;+  int i, retval, rcvdCount;&lt;/span&gt;
&lt;span class="gi"&gt;+  /* Set semaphores to default state */&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreWait(semSerialCommRxIdleHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreWait(semSerialCommTxCompletedHandle, osWaitForever);&lt;/span&gt;
   /* Infinite loop */
   for(;;)
   {
&lt;span class="gd"&gt;-    osDelay(1000);&lt;/span&gt;
&lt;span class="gi"&gt;+    uint8_t buffer[32];&lt;/span&gt;
&lt;span class="gi"&gt;+    memset(buffer, 0, sizeof(buffer));&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_CLEAR_IDLEFLAG(&amp;amp;huart1);&lt;/span&gt;
&lt;span class="gi"&gt;+    __HAL_UART_ENABLE_IT(&amp;amp;huart1, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+    if (HAL_UART_Receive_DMA(&amp;amp;huart1, buffer, sizeof(buffer)) != HAL_OK) {&lt;/span&gt;
&lt;span class="gi"&gt;+      // error&lt;/span&gt;
&lt;span class="gi"&gt;+    }&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    retval = osSemaphoreWait(semSerialCommRxIdleHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+    rcvdCount = sizeof(buffer) - huart1.hdmarx-&amp;gt;Instance-&amp;gt;CNDTR;&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_DMAStop(&amp;amp;huart1);&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_Transmit_DMA(&amp;amp;huart1, buffer, rcvdCount);&lt;/span&gt;
&lt;span class="gi"&gt;+    retval = osSemaphoreWait(semSerialCommTxCompletedHandle, osWaitForever);&lt;/span&gt;
&lt;span class="gi"&gt;+    HAL_UART_DMAStop(&amp;amp;huart1);&lt;/span&gt;
   }
   /* USER CODE END TaskSerialCommStart */
 }
&lt;span class="gu"&gt;@@ -147,6 +172,21 @@ void TaslDisplayStart(void const * argument)&lt;/span&gt;
 }

 /* USER CODE BEGIN Application */
&lt;span class="gi"&gt;+void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommTxCompletedHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommRxIdleHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
&lt;span class="gi"&gt;+&lt;/span&gt;
&lt;span class="gi"&gt;+void HAL_UART_RxIdleCallback(UART_HandleTypeDef *huart)&lt;/span&gt;
&lt;span class="gi"&gt;+{&lt;/span&gt;
&lt;span class="gi"&gt;+  __HAL_UART_DISABLE_IT(huart, UART_IT_IDLE);&lt;/span&gt;
&lt;span class="gi"&gt;+  osSemaphoreRelease(semSerialCommRxIdleHandle);&lt;/span&gt;
&lt;span class="gi"&gt;+}&lt;/span&gt;
 /* USER CODE END Application */
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="STM32"></category></entry><entry><title>Debian на BB + BB-View, мануал от element14</title><link href="https://blog.riuson.com/ru/posts/2015/05/20/bb-view-debian-manual-element14" rel="alternate"></link><published>2015-05-20T00:00:00+05:00</published><updated>2015-05-20T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-05-20:/ru/posts/2015/05/20/bb-view-debian-manual-element14</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.element14.com/community/community/designcenter/single-board-computers/next-gen_beaglebone/blog"&gt;BeagleBone Black &amp;amp; BB-View Demo&lt;/a&gt;&lt;br&gt;
Отсюда берём Debian patch files, по …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.element14.com/community/community/designcenter/single-board-computers/next-gen_beaglebone/blog"&gt;BeagleBone Black &amp;amp; BB-View Demo&lt;/a&gt;&lt;br&gt;
Отсюда берём Debian patch files, по указанной там ссылке: &lt;a href="http://www.element14.com/community/docs/DOC-67958/l/element14-bb-view-lcd-cape-software-download-centre1?ICID=beagleboneblack-bbview-software"&gt;element14: BB View LCD Cape Software Download Centre[1]&lt;/a&gt;. Файл называется &lt;a href="http://downloads.element14.com/downloads/bb-view/BB%20VIEW%20Debian%20Image.zip?COM=BeagleBoneBlack"&gt;Debian Image (Patched for BB-View)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.element14.com/community/community/designcenter/single-board-computers/next-gen_beaglebone/blog/2015/05/20/beaglebone-black-with-the-bbview-and-the-new-beaglebone-debian-image"&gt;Beaglebone Black with the BBView and the new Beaglebone Debian image&lt;/a&gt;&lt;br&gt;
По инструкциям здесь записываем Debian на SD карту. Затем распаковываем на карту, в папку /home/debian/bbview, содержимое указанного выше архива Debian image, дабы потом вытаскивать эти файлы сразу с SD, без монтирования внешней USB флэшки.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="text-success"&gt;&lt;b&gt;Работает.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;</content><category term="BeagleBone"></category><category term="BB-View"></category></entry><entry><title>Samsung Galaxy S3 &amp; Beeline</title><link href="https://blog.riuson.com/ru/posts/2015/05/01/samsung-galaxy-s3-beeline" rel="alternate"></link><published>2015-05-01T00:00:00+05:00</published><updated>2015-05-01T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-05-01:/ru/posts/2015/05/01/samsung-galaxy-s3-beeline</id><summary type="html">&lt;p&gt;Восстановление мобильного интернета Beeline на Samsung Galaxy S III.&lt;/p&gt;
&lt;p&gt;В …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Восстановление мобильного интернета Beeline на Samsung Galaxy S III.&lt;/p&gt;
&lt;p&gt;В последней прошивке для Samsung Galaxy S III перестал работать интернет от оператора Beeline.&lt;/p&gt;
&lt;p&gt;Причина в настройках точки доступа, установленных по умолчанию. Хоть там ничего особенного и не видно, всё вроде бы правильно. Кстати, секунд 30 после хард-ресета, в ходе настройки Android, интернет всё ещё работает.&lt;/p&gt;
&lt;p&gt;Для исправления создаём новую точку доступа со следующими известными настройками:&lt;/p&gt;
&lt;p&gt;| Параметр  | Значение |
| ------------- | ------------- |
| Имя  | internet  |
| Точка доступа  | internet.beeline.ru  |
| Прокси  | Не установлено  |
| Порт  | Не установлено  |
| Имя пользователя  | beeline  |
| Пароль  | beeline  |
| Сервер  | Не установлено  |
| MMSC  | Не установлено  |
| Прокси MMS  | Не установлено  |
| Порт MMS  | Не установлено  |
| MCC  | 250  |
| MNC  | 99  |
| Тип проверки подлинности  | PAP  |
| Тип точки доступа  | default  |
| Протокол APN  | IPv4  |
| Протокол роуминга точки доступа  | IPv4  |
| Включить или отключить сеть APN  | Точка доступа включена  |
| Канал  | Не указано  |
| Тип оператора мобильной виртуальной сети  | Нет  |
| Значение оператора мобильной виртуальной сети  | Не установлено  |&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-2" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;В конце мая ошибку признали: &lt;a href="http://www.cnews.ru/top/2015/05/29/samsung_izza_oshibki_v_svoem_po_porekomendoval_rossiyskim_polzovatelyam_smenit_sotovogo_operatora_596085"&gt;Samsung из-за ошибки в своем ПО порекомендовал российским пользователям сменить сотового оператора&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Дело было в использовании IPv6 в APN, вместо IPv4:&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-3" class="img-fluid" src="https://blog.riuson.com/images/posts/2015/05/01/samsung-galaxy-s3-beeline-3.png" /&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Установка Windows 7 на GPT и UEFI BIOS</title><link href="https://blog.riuson.com/ru/posts/2015/01/10/setup-windows-7-on-gpt-with-uefi" rel="alternate"></link><published>2015-01-10T00:00:00+05:00</published><updated>2015-01-10T00:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2015-01-10:/ru/posts/2015/01/10/setup-windows-7-on-gpt-with-uefi</id><summary type="html">&lt;p&gt;Как сделать из обычного диска Windows 7 установочный диск для …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Как сделать из обычного диска Windows 7 установочный диск для UEFI/GPT.&lt;/p&gt;
&lt;p&gt;Требуется USB Flash Drive на 4 ГБ или больше.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Качаем образ оригинальной Windows 7 x64 Ultimate, можно и с MSDN, если есть логин;&lt;/li&gt;
&lt;li&gt;Форматируем флэшку в один раздел с FAT32;&lt;/li&gt;
&lt;li&gt;Распаковываем образ винды на флэшку;&lt;/li&gt;
&lt;li&gt;Удаляем с флэшки 1 файл - &lt;strong&gt;EI.CFG&lt;/strong&gt;, лежит по пути &lt;strong&gt;FLASH:\SOURCES\EI.CFG&lt;/strong&gt;, это поволит выбрать версию устанавливаемой винды, которая вам нужна;&lt;/li&gt;
&lt;li&gt;Открываем на диске папку &lt;strong&gt;FLASH:\EFI&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Создаём внутри неё папку &lt;strong&gt;BOOT&lt;/strong&gt; (&lt;strong&gt;FLASH:\EFI\BOOT&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Копируем всё содержимое из &lt;strong&gt;FLASH:\EFI\MICROSOFT\BOOT&lt;/strong&gt; в &lt;strong&gt;FLASH:\EFI\BOOT&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Архиватором 7-zip открываем файл &lt;strong&gt;FLASH:\SOURCES\BOOT.WIM&lt;/strong&gt; или &lt;strong&gt;FLASH:\SOURCES\INSTALL.WIM&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;В архиве переходим в папку &lt;strong&gt;\1\Windows\Boot\EFI&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;В этот папке архива находим файл &lt;strong&gt;BOOTMGFW.EFI&lt;/strong&gt; и копируем его на флэшку в папку &lt;strong&gt;FLASH:\EFI\BOOT\ &lt;/strong&gt; ;&lt;/li&gt;
&lt;li&gt;Переименовываем &lt;strong&gt;BOOTMGFW.EFI&lt;/strong&gt; в &lt;strong&gt;BOOTX64.EFI&lt;/strong&gt; (будет &lt;strong&gt;FLASH:\EFI\BOOT\BOOTX64.EFI&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;Загружаем комп в биос UEFI;&lt;/li&gt;
&lt;li&gt;В загрузочном меню ищем что-то типа UEFI (FAT) Flash Drive. Там должна быть обычная флэшка, и флэшка в режиме UEFI загрузчика. Вот вторую и надо. См. рисунок ниже;&lt;/li&gt;
&lt;li&gt;Запускаем её и устанавливаем Windows на GPT в режиме UEFI.&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category><category term="Windows7"></category><category term="GPT"></category><category term="UEFI"></category></entry><entry><title>Настройки управления самолётом в Battlefield 3</title><link href="https://blog.riuson.com/ru/posts/2014/09/03/setup-jet-control-in-battlefield-3" rel="alternate"></link><published>2014-09-03T00:00:00+06:00</published><updated>2014-09-03T00:00:00+06:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-09-03:/ru/posts/2014/09/03/setup-jet-control-in-battlefield-3</id><summary type="html">&lt;ul&gt;
&lt;li&gt;Поворот вверх - пробелом.&lt;/li&gt;
&lt;li&gt;Рыскание влево/вправо - мышью.&lt;/li&gt;
&lt;li&gt;Поворот налево/направо …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;Поворот вверх - пробелом.&lt;/li&gt;
&lt;li&gt;Рыскание влево/вправо - мышью.&lt;/li&gt;
&lt;li&gt;Поворот налево/направо - A/D.&lt;/li&gt;
&lt;li&gt;Выход из кабины - F1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Для минимального радиуса разворота следует поддерживать скорость в пределах 305-315. Если крутиться в горизонтальной плоскости, достаточно иногда притормаживать кнопкой S.&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/09/03/setup-jet-control-in-battlefield-3-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="settings-1" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/09/03/setup-jet-control-in-battlefield-3-2.png" /&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Games"></category></entry><entry><title>Paradox &amp; Windows 7 x64</title><link href="https://blog.riuson.com/ru/posts/2014/07/28/paradox-windows-7-x64" rel="alternate"></link><published>2014-07-28T00:00:00+06:00</published><updated>2014-07-28T00:00:00+06:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-28:/ru/posts/2014/07/28/paradox-windows-7-x64</id><summary type="html">&lt;p&gt;Костыли для установки этого анахронизма на Windows 7 x64.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Настройка BDE на Windows 7 x64&lt;/p&gt;
&lt;p&gt;Идём на сайт Inno Setup.
http://www.jrsoftware.org/iskb.php?bde&lt;/p&gt;
&lt;p&gt;Скачиваем файлы minireg.exe и bdeinst.cab.
Распаковываем bdeinst.dll из bdeinst.cab (7zip, например), устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ minireg.exe bdeinst.dll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="bde-install" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/28/paradox-windows-7-x64-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Запускаем &lt;code&gt;C:\Program Files (x86)\Common Files\Borland Shared\BDE\BDEADMIN.EXE&lt;/code&gt; из под админа.
На вкладке Configuration в дереве находим &lt;strong&gt;Configuration&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Drivers&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Native&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Paradox&lt;/strong&gt;.
Путь &lt;strong&gt;NET DIR&lt;/strong&gt; меняем на любой каталог, к которому есть полный доступ у пользователя, который будет запускать программу с БД.&lt;/p&gt;
&lt;p&gt;&lt;img alt="bde-admin" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/28/paradox-windows-7-x64-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Если используемая программа не может сама создать алиас к БД, на вкладке Databases добавляем алиас вручную.&lt;/p&gt;</content><category term="misc"></category><category term="Windows 7"></category></entry><entry><title>BB &amp; Qt — UART</title><link href="https://blog.riuson.com/ru/posts/2014/07/21/bb-and-qt-uart" rel="alternate"></link><published>2014-07-21T10:13:00+05:00</published><updated>2014-07-21T10:13:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-21:/ru/posts/2014/07/21/bb-and-qt-uart</id><summary type="html">&lt;p&gt;Подключение UART интерфейса.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Настройка пинов&lt;/h3&gt;
&lt;p&gt;В комплекте с исходниками ядра можно найти файлы BB-UART1-00A0.dts, BB-UART2-00A0.dts, BB-UART4-00A0.dts, BB-UART4-RTSCTS-00A0.dts, BB-UART5-00A0.dts.
Перечень задействованных в них пинов:
  * BB-UART1-00A0.dts
    * P9.24 - кнопка User1 на BB-View
    * P9.26
  * BB-UART2-00A0.dts
    * P9.21
    * P9.22
  * BB-UART4-00A0.dts
    * P9.13
    * P9.11 - кнопка User3 на BB-View
  * BB-UART5-00A0.dts
    * P8.37 - LCD Data
    * P8.38 - LCD Data&lt;/p&gt;
&lt;p&gt;Отсюда видно, что можно задействовать UART2.
На BeagleBone открываем файл настроек окружения:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo nano /boot/uboot/uEnv.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Меняем ранее добавленную строку параметров на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;optargs=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN capemgr.enable_partno=BB-VIEW-LCD7-01,BB-UART2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Перезагружаемся.&lt;/p&gt;
&lt;p&gt;Теперь пины подключены к UART:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pingroups
...
group: pinmux_bb_uart2_pins
pin &lt;span class="m"&gt;84&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10950&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;85&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10954&lt;span class="o"&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В списке устройств должно появиться /dev/ttyO2.&lt;/p&gt;
&lt;h3&gt;Проверка обмена&lt;/h3&gt;
&lt;p&gt;Подключаем к ПК через адаптер RS-232 - UART 3.3V. На ПК можно воспользоваться любым терминалом для работы с RS-232. Настраиваем на скорость 115200, 8 бит, проверки чётности нет, 1 стоп бит.&lt;/p&gt;
&lt;h4&gt;Проверка передачи на ПК&lt;/h4&gt;
&lt;p&gt;На BeagleBone:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo stty -F /dev/ttyO2 speed &lt;span class="m"&gt;115200&lt;/span&gt; cs8 -cstopb -parenb
&lt;span class="m"&gt;115200&lt;/span&gt;
debian@beaglebone:~$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Hello, World!&amp;#39;&lt;/span&gt; &amp;gt; /dev/ttyO2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;На ПК должна быть принята эта строка.&lt;/p&gt;
&lt;h4&gt;Проверка передачи на BeagleBone&lt;/h4&gt;
&lt;p&gt;Включаем приём на плате:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ cat /dev/ttyO2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Отправляем строку текста с ПК, заканчивающуюся /r или /n. Строка должна отобразиться в консоли BeagleBone.&lt;/p&gt;</content><category term="BeagleBone"></category></entry><entry><title>BB &amp; Qt — Некоторые исправления</title><link href="https://blog.riuson.com/ru/posts/2014/07/18/bb-and-qt-some-fix" rel="alternate"></link><published>2014-07-18T14:30:00+05:00</published><updated>2014-07-18T14:30:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-18:/ru/posts/2014/07/18/bb-and-qt-some-fix</id><summary type="html">&lt;p&gt;Перекраска синего пингвина и исправление некоторых конфликтов.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Синий пингвин&lt;/h3&gt;
&lt;p&gt;Нужно поменять местами красный и синий цвета. Решение найдено &lt;a href="http://www.element14.com/community/message/108736/l/re-how-to-bb-view-on-latest-debian#108736"&gt;здесь&lt;/a&gt;.
Для этого открываем файл &lt;i&gt;/linux-dev/KERNEL/drivers/gpu/drm/drm_fb_helper.c&lt;/i&gt;, ищем все инициализации смещения цветовых каналов и меняем местами red/blue.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gd"&gt;--- ./drm_fb_helper.c.orig  2014-07-03 19:48:33.465438683 +0600&lt;/span&gt;
&lt;span class="gi"&gt;+++ ./drm_fb_helper.c   2014-07-18 18:52:09.336754771 +0600&lt;/span&gt;
&lt;span class="gu"&gt;@@ -603,5 +603,5 @@&lt;/span&gt;
    case 8:
&lt;span class="gd"&gt;-       var-&amp;gt;red.offset = 0;&lt;/span&gt;
&lt;span class="gd"&gt;-       var-&amp;gt;green.offset = 0;&lt;/span&gt;
        var-&amp;gt;blue.offset = 0;
&lt;span class="gi"&gt;+       var-&amp;gt;green.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;red.offset = 0;&lt;/span&gt;
        var-&amp;gt;red.length = 8;
&lt;span class="gu"&gt;@@ -613,5 +613,5 @@&lt;/span&gt;
    case 15:
&lt;span class="gd"&gt;-       var-&amp;gt;red.offset = 10;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;blue.offset = 10;&lt;/span&gt;
        var-&amp;gt;green.offset = 5;
&lt;span class="gd"&gt;-       var-&amp;gt;blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;red.offset = 0;&lt;/span&gt;
        var-&amp;gt;red.length = 5;
&lt;span class="gu"&gt;@@ -623,5 +623,5 @@&lt;/span&gt;
    case 16:
&lt;span class="gd"&gt;-       var-&amp;gt;red.offset = 11;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;blue.offset = 11;&lt;/span&gt;
        var-&amp;gt;green.offset = 5;
&lt;span class="gd"&gt;-       var-&amp;gt;blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;red.offset = 0;&lt;/span&gt;
        var-&amp;gt;red.length = 5;
&lt;span class="gu"&gt;@@ -633,5 +633,5 @@&lt;/span&gt;
    case 24:
&lt;span class="gd"&gt;-       var-&amp;gt;red.offset = 16;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;blue.offset = 16;&lt;/span&gt;
        var-&amp;gt;green.offset = 8;
&lt;span class="gd"&gt;-       var-&amp;gt;blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;red.offset = 0;&lt;/span&gt;
        var-&amp;gt;red.length = 8;
&lt;span class="gu"&gt;@@ -643,5 +643,5 @@&lt;/span&gt;
    case 32:
&lt;span class="gd"&gt;-       var-&amp;gt;red.offset = 16;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;blue.offset = 16;&lt;/span&gt;
        var-&amp;gt;green.offset = 8;
&lt;span class="gd"&gt;-       var-&amp;gt;blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       var-&amp;gt;red.offset = 0;&lt;/span&gt;
        var-&amp;gt;red.length = 8;
&lt;span class="gu"&gt;@@ -880,5 +880,5 @@&lt;/span&gt;
    case 8:
&lt;span class="gd"&gt;-       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
&lt;span class="gd"&gt;-       info-&amp;gt;var.green.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.blue.offset = 0;
&lt;span class="gi"&gt;+       info-&amp;gt;var.green.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.red.length = 8; /* 8bit DAC */
&lt;span class="gu"&gt;@@ -890,5 +890,5 @@&lt;/span&gt;
    case 15:
&lt;span class="gd"&gt;-       info-&amp;gt;var.red.offset = 10;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.blue.offset = 10;&lt;/span&gt;
        info-&amp;gt;var.green.offset = 5;
&lt;span class="gd"&gt;-       info-&amp;gt;var.blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.red.length = 5;
&lt;span class="gu"&gt;@@ -900,5 +900,5 @@&lt;/span&gt;
    case 16:
&lt;span class="gd"&gt;-       info-&amp;gt;var.red.offset = 11;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.blue.offset = 11;&lt;/span&gt;
        info-&amp;gt;var.green.offset = 5;
&lt;span class="gd"&gt;-       info-&amp;gt;var.blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.red.length = 5;
&lt;span class="gu"&gt;@@ -909,5 +909,5 @@&lt;/span&gt;
    case 24:
&lt;span class="gd"&gt;-       info-&amp;gt;var.red.offset = 16;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.blue.offset = 16;&lt;/span&gt;
        info-&amp;gt;var.green.offset = 8;
&lt;span class="gd"&gt;-       info-&amp;gt;var.blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.red.length = 8;
&lt;span class="gu"&gt;@@ -919,5 +919,5 @@&lt;/span&gt;
    case 32:
&lt;span class="gd"&gt;-       info-&amp;gt;var.red.offset = 16;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.blue.offset = 16;&lt;/span&gt;
        info-&amp;gt;var.green.offset = 8;
&lt;span class="gd"&gt;-       info-&amp;gt;var.blue.offset = 0;&lt;/span&gt;
&lt;span class="gi"&gt;+       info-&amp;gt;var.red.offset = 0;&lt;/span&gt;
        info-&amp;gt;var.red.length = 8;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Затем пересобираем ядро:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./tools/rebuild.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Снова копируем файлы на карту памяти, загружаемся с неё и видим уже нормального Тукса.&lt;/p&gt;
&lt;h3&gt;pin 44e10978 already requested by 4819c000.i2c&lt;/h3&gt;
&lt;p&gt;Полезная информация:
  * &lt;a href="http://www.embedded-things.com/bbb/beaglebone-black-pin-mux-spreadsheet"&gt;BeagleBone Black Pin Mux Spreadsheet&lt;/a&gt;
  * &lt;a href="http://inspire.logicsupply.com/p/building-custom-cape.html"&gt;Building A Custom Cape&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;При загрузке в логах можно увидеть конфликт назначения функции пина P9.20 (gpio0.12, смещение DT 0x178):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
[    0.811465] pinctrl-single 44e10800.pinmux: pin 44e10978 already requested by 4819c000.i2c; cannot claim for gpio-leds-cape-lcd.12
[    0.823793] pinctrl-single 44e10800.pinmux: pin-94 (gpio-leds-cape-lcd.12) status -22
[    0.831988] pinctrl-single 44e10800.pinmux: could not request pin 94 on device pinctrl-single
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Он используется как линия SDA в интерфейсе I2C2 на BeagleBone Black для поиска плат расширения. Каждая из них должна иметь I2C микросхему памяти с информацией о плате (см. BeagleBone Black SRM, пункт 8.2.2 - I2C Bus).&lt;/p&gt;
&lt;p&gt;На плате BB-View место под миксрохему предусмотрено, но сама она отсутствует. А в DTS файле из Angstrom, да и в на плате BB-View, пин P9.20 обозначен как подключенный к светодиоду LED1. При попытке его инициализации как GPIO и возникает эта ошибка.&lt;/p&gt;
&lt;p&gt;Удаляем из файла DTS упоминания о P9.20, а также некоторых других неиспользуемых здесь пинах.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gd"&gt;--- ./BB-VIEW-LCD7-01-00A0.dts.orig 2014-07-18 18:18:59.172344896 +0600&lt;/span&gt;
&lt;span class="gi"&gt;+++ ./BB-VIEW-LCD7-01-00A0.dts  2014-07-18 18:20:11.771734973 +0600&lt;/span&gt;
&lt;span class="gu"&gt;@@ -38,21 +38,16 @@&lt;/span&gt;
        &amp;quot;P8.29&amp;quot;,    /* lcd: lcd_hsync */
        &amp;quot;P8.28&amp;quot;,    /* lcd: lcd_pclk */
        &amp;quot;P8.30&amp;quot;,    /* lcd: lcd_ac_bias_en */
&lt;span class="gd"&gt;-       &amp;quot;P9.27&amp;quot;,    /* lcd: gpio3_19 */&lt;/span&gt;
        &amp;quot;P9.12&amp;quot;,    /* led: gpio1_28 */
        &amp;quot;P9.14&amp;quot;,    /* pwm: ehrpwm1a */
&lt;span class="gd"&gt;-       &amp;quot;P9.15&amp;quot;,    /* keys: gpio1_16 */&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;P9.23&amp;quot;,    /* keys: gpio1_17 */&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;P9.16&amp;quot;,    /* keys: gpio1_19 */&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;P9.21&amp;quot;,    /* keys: gpio0_3 */&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;quot;P9.11&amp;quot;,    /* keys: gpio0_30 USER3 */&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;quot;P9.23&amp;quot;,    /* keys: gpio1_17 USER2 */&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;quot;P9.16&amp;quot;,    /* keys: gpio1_19 USER0 */&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;quot;P9.24&amp;quot;,    /* keys: gpio0_15 USER1 */&lt;/span&gt;
        /* the hardware IP uses */
&lt;span class="gd"&gt;-       &amp;quot;gpio3_19&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;gpio1_28&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;gpio1_16&amp;quot;,&lt;/span&gt;
&lt;span class="gi"&gt;+       &amp;quot;gpio1_28&amp;quot;,     /* led: P9.12 */&lt;/span&gt;
        &amp;quot;gpio1_17&amp;quot;,
        &amp;quot;gpio1_19&amp;quot;,
&lt;span class="gd"&gt;-       &amp;quot;gpio0_3&amp;quot;,&lt;/span&gt;
&lt;span class="gd"&gt;-       &amp;quot;gpio0_12&amp;quot;,&lt;/span&gt;
        &amp;quot;lcd&amp;quot;,
        &amp;quot;ehrpwm1a&amp;quot;;

&lt;span class="gu"&gt;@@ -63,7 +58,6 @@&lt;/span&gt;
            bb_view_lcd_cape_led_pins: pinmux_bb_view_lcd_cape_led_pins {
                pinctrl-single,pins = &amp;lt;
                    0x078 0x2f      /* gpmc_be1n.gpio1_28, INPUT | PULLDIS | MODE7 */
&lt;span class="gd"&gt;-                   0x178 0x2f  /* uart1_ctsn.gpio0_12,INPUT | PULLDIS | MODE7 */&lt;/span&gt;
                &amp;gt;;
            };

&lt;span class="gu"&gt;@@ -100,10 +94,10 @@&lt;/span&gt;

            bb_view_lcd_cape_keys_pins: pinmux_bb_view_lcd_cape_keys_pins {
                pinctrl-single,pins = &amp;lt;
&lt;span class="gd"&gt;-                   0x4C 0x27   /* gpmc_a3.gpio1_19,   INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gd"&gt;-                   0x184 0x27  /* uart1_txd.gpio0_15, INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gd"&gt;-                   0x44 0x27   /* gpmc_a1.gpio1_17,   INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gd"&gt;-                   0x70 0x27   /* gpmc_wait0.gpio0_30,INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gi"&gt;+                   0x4C 0x27   /* gpmc_a3.gpio1_19    USER0, INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gi"&gt;+                   0x184 0x27  /* uart1_txd.gpio0_15  USER1, INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gi"&gt;+                   0x44 0x27   /* gpmc_a1.gpio1_17    USER2, INPUT | MODE7 */&lt;/span&gt;
&lt;span class="gi"&gt;+                   0x70 0x27   /* gpmc_wait0.gpio0_30 USER3, INPUT | MODE7 */&lt;/span&gt;
                &amp;gt;;
            };

&lt;span class="gu"&gt;@@ -179,13 +173,6 @@&lt;/span&gt;
                    linux,default-trigger = &amp;quot;none&amp;quot;;
                    default-state = &amp;quot;off&amp;quot;;
                };
&lt;span class="gd"&gt;-&lt;/span&gt;
&lt;span class="gd"&gt;-               bb_view_led1 {&lt;/span&gt;
&lt;span class="gd"&gt;-                   label = &amp;quot;bb-view:led1&amp;quot;;&lt;/span&gt;
&lt;span class="gd"&gt;-                   gpios = &amp;lt;&amp;amp;gpio1 12 0&amp;gt;;&lt;/span&gt;
&lt;span class="gd"&gt;-                   linux,default-trigger = &amp;quot;none&amp;quot;;&lt;/span&gt;
&lt;span class="gd"&gt;-                   default-state = &amp;quot;off&amp;quot;;&lt;/span&gt;
&lt;span class="gd"&gt;-               };&lt;/span&gt;
            };

            bb_view_gpio_keys {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Обновляем ядро.&lt;/p&gt;
&lt;p&gt;После загрузки можно увидеть следующие группы пинов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo cat /sys/kernel/debug/pinctrl/44e10800.pinmux/pingroups
registered pin groups:
group: pinmux_userled_pins
pin &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10854&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10858&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1085c&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10860&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_rstctl_pins
pin &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10850&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_i2c0_pins
pin &lt;span class="m"&gt;98&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10988&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;99&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1098c&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_i2c2_pins
pin &lt;span class="m"&gt;94&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10978&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;95&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1097c&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_pwm_bl_pins
pin &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10848&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_mmc1_pins
pin &lt;span class="m"&gt;88&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10960&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_emmc2_pins
pin &lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10880&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;33&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10884&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10800&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10804&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10808&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1080c&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10810&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10814&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10818&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1081c&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_userled_pins
pin &lt;span class="m"&gt;21&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10854&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10858&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;23&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1085c&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10860&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_bb_view_lcd_cape_led_pins
pin &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10878&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_bb_view_lcd_cape_pins
pin &lt;span class="m"&gt;40&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108a0&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;41&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108a4&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;42&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108a8&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;43&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108ac&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;44&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108b0&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;45&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108b4&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;46&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108b8&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;47&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108bc&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108c0&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;49&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108c4&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;50&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108c8&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;51&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108cc&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;52&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108d0&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;53&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108d4&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;54&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108d8&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;55&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108dc&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;56&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108e0&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;57&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108e4&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;58&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108e8&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;59&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e108ec&lt;span class="o"&gt;)&lt;/span&gt;

group: pinmux_bb_view_lcd_cape_keys_pins
pin &lt;span class="m"&gt;19&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e1084c&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;97&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10984&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10844&lt;span class="o"&gt;)&lt;/span&gt;
pin &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;44e10870&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="BeagleBone"></category><category term="BB-View"></category></entry><entry><title>BB &amp; Qt — Тестовое приложение</title><link href="https://blog.riuson.com/ru/posts/2014/07/16/bb-and-qt-test-application" rel="alternate"></link><published>2014-07-16T12:05:00+05:00</published><updated>2014-07-16T12:05:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-16:/ru/posts/2014/07/16/bb-and-qt-test-application</id><summary type="html">&lt;p&gt;Создание тестового приложения в Qt Creator с использованием ранее собранного Qt 5.2.1 для ARMv7.&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Консольное&lt;/h3&gt;
&lt;p&gt;В Qt Creator создаём консольное приложение bb-test-console.
При выборе комплекта выбираем Desktop Qt 5.2.1 GCC и ARMv7 Qt 5.2.1 GCC ARM.&lt;/p&gt;
&lt;p&gt;В проекте будет всего 2 файла, bb-test-console.pro и main.cpp.
bb-test-console.pro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#-------------------------------------------------
#
# Project created by QtCreator 2014-07-15T20:59:08
#
#-------------------------------------------------

QT       += core
QT       -= gui

TARGET = bb-test-console
CONFIG   += console
CONFIG   -= app_bundle

TEMPLATE = app

SOURCES += main.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;main.cpp приводим к следующему виду:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QCoreApplication&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;QCoreApplication&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// a.exec();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Вибираем сборку под ARM:&lt;/p&gt;
&lt;p&gt;&lt;img alt="kit-selection" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/16/bb-and-qt-test-application-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Собираем и копируем на BeagleBone.&lt;/p&gt;
&lt;p&gt;Проверить наличие требуемых библиотек можно командой ldd -v на устройстве:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~/usr-share$ ldd -v bb-test-console 
    libQt5Core.so.5 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/share/qt-5.2.1-armv7/lib/libQt5Core.so.5 &lt;span class="o"&gt;(&lt;/span&gt;0xb6bed000&lt;span class="o"&gt;)&lt;/span&gt;
    librt.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/librt.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0xb6bcf000&lt;span class="o"&gt;)&lt;/span&gt;
    libdl.so.2 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libdl.so.2 &lt;span class="o"&gt;(&lt;/span&gt;0xb6bc4000&lt;span class="o"&gt;)&lt;/span&gt;
    libpthread.so.0 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;0xb6ba9000&lt;span class="o"&gt;)&lt;/span&gt;
    libstdc++.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0xb6afe000&lt;span class="o"&gt;)&lt;/span&gt;
    libm.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0xb6a92000&lt;span class="o"&gt;)&lt;/span&gt;
    libgcc_s.so.1 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;0xb6a6e000&lt;span class="o"&gt;)&lt;/span&gt;
    libc.so.6 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;0xb6989000&lt;span class="o"&gt;)&lt;/span&gt;
    libicui18n.so.53 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/share/icu-4c-53.1-armv7/lib/libicui18n.so.53 &lt;span class="o"&gt;(&lt;/span&gt;0xb6820000&lt;span class="o"&gt;)&lt;/span&gt;
    libicuuc.so.53 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/share/icu-4c-53.1-armv7/lib/libicuuc.so.53 &lt;span class="o"&gt;(&lt;/span&gt;0xb6722000&lt;span class="o"&gt;)&lt;/span&gt;
    /lib/ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;0xb6f62000&lt;span class="o"&gt;)&lt;/span&gt;
    libicudata.so.53 &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/share/icu-4c-53.1-armv7/lib/libicudata.so.53 &lt;span class="o"&gt;(&lt;/span&gt;0xb5291000&lt;span class="o"&gt;)&lt;/span&gt;

    Version information:
    ./bb-test-console:
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_1.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBCXX_3.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_ARM_1.3.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
    /usr/share/qt-5.2.1-armv7/lib/libQt5Core.so.5:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        librt.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/librt.so.1
        libdl.so.2 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libdl.so.2
        libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libm.so.6
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.5&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_1.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_ARM_1.3.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBCXX_3.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libpthread.so.0
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.7&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.9&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/librt.so.1:
        libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libpthread.so.0
        libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libpthread.so.0
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/libdl.so.2:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/libpthread.so.0:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /usr/lib/arm-linux-gnueabihf/libstdc++.so.6:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.5&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libm.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/libm.so.6:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/libgcc_s.so.1:
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
    /lib/arm-linux-gnueabihf/libc.so.6:
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
        ld-linux-armhf.so.3 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_PRIVATE&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/ld-linux-armhf.so.3
    /usr/share/icu-4c-53.1-armv7/lib/libicui18n.so.53:
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBCXX_3.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_1.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.5&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libm.so.6
    /usr/share/icu-4c-53.1-armv7/lib/libicuuc.so.53:
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBCXX_3.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libstdc++.so.6 &lt;span class="o"&gt;(&lt;/span&gt;CXXABI_1.3&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /usr/lib/arm-linux-gnueabihf/libstdc++.so.6
        libdl.so.2 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libdl.so.2
        libm.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libm.so.6
        libgcc_s.so.1 &lt;span class="o"&gt;(&lt;/span&gt;GCC_3.5&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libgcc_s.so.1
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
        libpthread.so.0 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libpthread.so.0
    /usr/share/icu-4c-53.1-armv7/lib/libicudata.so.53:
        libc.so.6 &lt;span class="o"&gt;(&lt;/span&gt;GLIBC_2.4&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; /lib/arm-linux-gnueabihf/libc.so.6
debian@beaglebone:~/usr-share$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запускаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~/usr-share$ ./bb-test-console 
Hello, World!
debian@beaglebone:~/usr-share$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;GUI&lt;/h3&gt;
&lt;p&gt;В Qt Creator создаём приложение QT Widgets bb-test-widgets.
При выборе комплекта выбираем Desktop Qt 5.2.1 GCC и ARMv7 Qt 5.2.1 GCC ARM.&lt;/p&gt;
&lt;p&gt;На окне размещаем QLabel для вывода текста, и QButton для выхода из приложения.
Исходники приведены ниже.&lt;/p&gt;
&lt;p&gt;bb-test-widgets.pro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="c1"&gt;-------------------------------------------------&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;QtCreator&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;T21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="c1"&gt;-------------------------------------------------&lt;/span&gt;

&lt;span class="n"&gt;QT&lt;/span&gt;       &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt; &lt;span class="n"&gt;gui&lt;/span&gt;

&lt;span class="n"&gt;greaterThan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QT_MAJOR_VERSION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;QT&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;widgets&lt;/span&gt;

&lt;span class="n"&gt;TARGET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;widgets&lt;/span&gt;
&lt;span class="k"&gt;TEMPLATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;SOURCES&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
        &lt;span class="n"&gt;mainwindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;

&lt;span class="n"&gt;HEADERS&lt;/span&gt;  &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;mainwindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;

&lt;span class="n"&gt;FORMS&lt;/span&gt;    &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;mainwindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mainwindow.h:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef MAINWINDOW_H&lt;/span&gt;
&lt;span class="cp"&gt;#define MAINWINDOW_H&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QMainWindow&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QTimer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;Ui&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainWindow&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;QMainWindow&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Q_OBJECT&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;explicit&lt;/span&gt; &lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;Ui&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;QTimer&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nl"&gt;slots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;timerTick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;on_pushButtonClose_clicked&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="c1"&gt;// MAINWINDOW_H&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;main.cpp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mainwindow.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QApplication&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;QApplication&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;MainWindow&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setWindowState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;WindowMaximized&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mainwindow.cpp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mainwindow.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;ui_mainwindow.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QTimer&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QDateTime&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;QScreen&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QWidget&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Ui&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;QTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SIGNAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SLOT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timerTick&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;QScreen&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QGuiApplication&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;screens&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="o"&gt;::~&lt;/span&gt;&lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mTimer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;timerTick&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;QDateTime&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QDateTime&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;currentDateTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;QScreen&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QGuiApplication&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;screens&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;QRect&lt;/span&gt; &lt;span class="n"&gt;screenSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;QString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;%2 x %3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
                    &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;
                    &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screenSize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;
                    &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screenSize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;MainWindow&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;on_pushButtonClose_clicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;mainwindow.ui:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;code&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ui&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;4.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;class&amp;gt;&lt;/span&gt;MainWindow&lt;span class="nt"&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QMainWindow&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MainWindow&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;rect&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;x&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/x&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;y&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/y&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;width&amp;gt;&lt;/span&gt;90&lt;span class="nt"&gt;&amp;lt;/width&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;height&amp;gt;&lt;/span&gt;142&lt;span class="nt"&gt;&amp;lt;/height&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;windowTitle&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;MainWindow&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QWidget&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;centralWidget&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;layout&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QVBoxLayout&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;verticalLayout&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QLabel&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;TextLabel&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alignment&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;set&amp;gt;&lt;/span&gt;Qt::AlignCenter&lt;span class="nt"&gt;&amp;lt;/set&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QPushButton&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pushButtonClose&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Закрыть&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QMenuBar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;menuBar&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;geometry&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;rect&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;x&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/x&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;y&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/y&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;width&amp;gt;&lt;/span&gt;90&lt;span class="nt"&gt;&amp;lt;/width&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;height&amp;gt;&lt;/span&gt;29&lt;span class="nt"&gt;&amp;lt;/height&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QToolBar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mainToolBar&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;toolBarArea&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;enum&amp;gt;&lt;/span&gt;TopToolBarArea&lt;span class="nt"&gt;&amp;lt;/enum&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;toolBarBreak&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;bool&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/bool&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;widget&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;QStatusBar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;statusBar&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/widget&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;layoutdefault&lt;/span&gt; &lt;span class="na"&gt;spacing=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;6&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;margin=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;11&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;resources/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;connections/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ui&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Здесь размер окна подгоняется под размер экрана. Каждую секунду выводится текущее время и размер экрана.
При нажатии на кнопку происходит выход из приложения.&lt;/p&gt;
&lt;p&gt;Для запуска создаём скрипт:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; usr-share/
debian@beaglebone:~/usr-share$ touch run.sh
debian@beaglebone:~/usr-share$ chmod +x run.sh 
debian@beaglebone:~/usr-share$ nano run.sh 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В нём пишем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;QWS_KEYBOARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;usb

&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_TSDEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/input/touchscreen
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_CALIBFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/pointercal2
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_CONFFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/ts.conf

&lt;span class="c1"&gt;#export TSLIB_PLUGINDIR=/usr/share/tslib-armv7/lib/ts&lt;/span&gt;
&lt;span class="c1"&gt;#export TSLIB_FBDEVICE=/dev/fb0&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_CONSOLEDEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;none

&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;QT_QPA_PLATFORM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linuxfb:size&lt;span class="o"&gt;=&lt;/span&gt;800x480:mmSize&lt;span class="o"&gt;=&lt;/span&gt;153x91

./bb-test-widgets -platform linuxfb -plugin tslib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запускаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~/usr-share$ ./run.sh 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если выполнять запуск по SSH, то консоль устройства не отключится. На экране поверх приложения будет мигать курсор. Также, приложение можно остановить комбинацией Ctrl+C.
При запуске с самого устройства консоль отключится, курсор исчезнет, и прервать выполнение приложения будет возможно нажатием кнопки "Закрыть" в окне (сенсорная панель уже должна быть правильно настроена), либо перезагрузкой.&lt;/p&gt;
&lt;h3&gt;Запуск из Qt Creator&lt;/h3&gt;
&lt;p&gt;При настроенном устройстве и комплекте Qt, в параметрах Qt Creator, можно выполнять запуск (для отладки нужна поддержка python в gdb) приложения из самого Qt Creator.
Для этого надо в файл проекта добавить пару строк:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
TARGET = bb-test-console
target.files = bb-test-console
target.path = /home/debian/usr-share
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — Сборка Qt 5</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-build-qt5" rel="alternate"></link><published>2014-07-15T22:02:00+05:00</published><updated>2014-07-15T22:02:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-build-qt5</id><summary type="html">&lt;p&gt;Сборка Qt 5 для Debian и BeagleBone.&lt;/p&gt;
&lt;p&gt;Данный материал основан …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Сборка Qt 5 для Debian и BeagleBone.&lt;/p&gt;
&lt;p&gt;Данный материал основан на "Bare Metal Qt 5.2 on BeagleBone Black Ubuntu" &lt;a href="http://armsdr.blogspot.ru/2014/01/bare-metal-qt-52-on-beaglebone-black.html?showComment=1405048695791#c8161014580628478124"&gt;Part 1&lt;/a&gt;, &lt;a href="http://armsdr.blogspot.ru/2014/01/bare-metal-qt-52-on-beaglebone-black_10.html"&gt;Part 2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Внимание: для Qt 4.7, 4.8 процедура настройки другая.&lt;/strong&gt;
Её можно посмотреть, например, здесь: &lt;a href="http://we.easyelectronics.ru/rcdimon/qt-na-beagleboard---blueshark.html"&gt;Qt на BeagleBoard / BlueShark&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;С &lt;a href="http://download.qt-project.org/"&gt;официального сайта&lt;/a&gt; берём &lt;a href="http://download.qt-project.org/official_releases/qt/5.2/5.2.1/single/qt-everywhere-opensource-src-5.2.1.tar.xz"&gt;qt-everywhere-opensource-src-5.2.1.tar.xz&lt;/a&gt;.\
Распаковываем в /&lt;i&gt;home/user/Qt/qt-everywhere-opensource-src-5.2.1-armv7&lt;/i&gt; .&lt;/p&gt;
&lt;p&gt;Настраиваем mkspecs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Qt/qt-everywhere-opensource-src-5.2.1-armv7/qtbase/mkspecs/devices
$ cp -r linux-beagleboard-g++ linux-beaglebone-g++
$ nano linux-beaglebone-g++/qmake.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Меняем во флагах компилятора&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-mfloat-abi=softfp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-mfloat-abi=hard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В конце файла, перед строкой load(qt_config), добавляем строки для Tslib:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;QMAKE_INCDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/tslib-armv7/include
&lt;span class="nv"&gt;QMAKE_LIBDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/tslib-armv7/lib
&lt;span class="nv"&gt;QMAKE_RPATHDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/tslib-armv7/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И для ICU:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;QMAKE_INCDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/icu-4c-53.1-armv7/include
&lt;span class="nv"&gt;QMAKE_LIBDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/icu-4c-53.1-armv7/lib
&lt;span class="nv"&gt;QMAKE_RPATHDIR&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; /usr/share/icu-4c-53.1-armv7/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Далее:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Qt/qt-everywhere-opensource-src-5.2.1-armv7/qtbase/mkspecs
$ cp -r linux-arm-gnueabi-g++ linux-arm-gnueabihf-g++
$ nano linux-arm-gnueabihf-g++/qmake.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Меняем путь к компилятору:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# modifications to g++.conf&lt;/span&gt;
&lt;span class="nv"&gt;QMAKE_CC&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; arm-linux-gnueabi-gcc
&lt;span class="nv"&gt;QMAKE_CXX&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; arm-linux-gnueabi-g++
&lt;span class="nv"&gt;QMAKE_LINK&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; arm-linux-gnueabi-g++
&lt;span class="nv"&gt;QMAKE_LINK_SHLIB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; arm-linux-gnueabi-g++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;на&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# modifications to g++.conf&lt;/span&gt;
&lt;span class="nv"&gt;CROSS_TOOL&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; /home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/bin/arm-linux-gnueabihf
&lt;span class="nv"&gt;QMAKE_CC&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;CROSS_TOOL-gcc
&lt;span class="nv"&gt;QMAKE_CXX&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;CROSS_TOOL-g++
&lt;span class="nv"&gt;QMAKE_LINK&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;CROSS_TOOL-g++
&lt;span class="nv"&gt;QMAKE_LINK_SHLIB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;CROSS_TOOL-g++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://qt-project.org/doc/qt-5/configure-options.html"&gt;Конфигурация&lt;/a&gt; Qt 5.&lt;/p&gt;
&lt;p&gt;Создаём скрипт конфигурации:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Qt/qt-everywhere-opensource-src-5.2.1-armv7
$ touch ./start-conf.sh
$ chmod +x ./start-conf.sh
$ nano ./start-conf.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Пишем в нём:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./configure -prefix /usr/share/qt-5.2.1-armv7 -v -release -opensource -confirm-license -no-largefile -no-accessibility -nomake examples -nomake tests -qt-sql-sqlite -plugin-sql-sqlite -qt-zlib -no-gif -qt-libpng -qt-libjpeg -no-nis -no-eglfs -qpa linuxfb -no-cups -tslib -icu -xplatform linux-arm-gnueabihf-g++ -device linux-beaglebone-g++ -device-option &lt;span class="nv"&gt;CROSS_COMPILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/bin/arm-linux-gnueabihf- -qt-pcre
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Сохраняем (Ctrl+O, Enter) и выходим (Ctrl+X).
Дополнительные опции можно посмотреть по команде:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./configure --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Запускаем конфигурацию, собираем и устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./start-conf.sh
$ make
$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Копируем каталог &lt;i&gt;/usr/share/qt-5.2.1-armv7&lt;/i&gt; на BeagleBone.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — ICU</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-icu" rel="alternate"></link><published>2014-07-15T21:58:00+05:00</published><updated>2014-07-15T21:58:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-icu</id><summary type="html">&lt;p&gt;Сборка International Components for Unicode (ICU) для ARMv7. Используется в …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Сборка International Components for Unicode (ICU) для ARMv7. Используется в Qt с 5 версии.&lt;/p&gt;
&lt;p&gt;На основе статьи &lt;a href="http://starofrainnight-eng.blogspot.ru/2013/08/cross-compile-icu-512.html"&gt;Cross Compile ICU 51.2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Идём на &lt;a href="http://site.icu-project.org/download"&gt;сайт проекта ICU&lt;/a&gt;. Переходим по ссылке на последнюю версию ICU4C. Там скачиваем архив исходников, под названием "gzipped tar archive for Unix and other platforms".
Распаковываем в каталог &lt;i&gt;/home/user/Qt/icu&lt;/i&gt; .&lt;/p&gt;
&lt;p&gt;Сначала надо будет собрать ICU для текущей операционной системы.
Заходим в каталог icu и делаем копию исходников:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Qt/icu
$ cp -r &lt;span class="nb"&gt;source&lt;/span&gt; source_host
$ &lt;span class="nb"&gt;cd&lt;/span&gt; source_host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Собираем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./configure
$ make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь настраиваем основной каталог исходников.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Qt/icu/source
$ touch build.sh
chmod +x build.sh
nano build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В файле пишем команды конфигурации и сборки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; PATH
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TOOLCHAIN_TARGET_SYSTEM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm-linux-gnueabihf
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TOOLCHAIN_INSTALL_DIRECTORY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/icu-4c-53.1-armv7

./configure &lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TOOLCHAIN_TARGET_SYSTEM&lt;/span&gt;-gcc &lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TOOLCHAIN_TARGET_SYSTEM&lt;/span&gt;-g++ &lt;span class="nv"&gt;CPP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TOOLCHAIN_TARGET_SYSTEM&lt;/span&gt;-cpp --host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TOOLCHAIN_TARGET_SYSTEM&lt;/span&gt; --prefix&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TOOLCHAIN_INSTALL_DIRECTORY&lt;/span&gt; --enable-shared&lt;span class="o"&gt;=&lt;/span&gt;yes --enable-tests&lt;span class="o"&gt;=&lt;/span&gt;no --enable-samples&lt;span class="o"&gt;=&lt;/span&gt;no --with-cross-build&lt;span class="o"&gt;=&lt;/span&gt;/home/user/Qt/icu/source_host

make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Сохраняем (Ctrl+O, Enter) и выходим (Ctrl+X).&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;Для исправления бага с загрузкой библиотеки &lt;i&gt;libicudata.so&lt;/i&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error white loading shared libraries: libicudata.so.53: cannot open shared object file: No such file or directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;открываем файл &lt;i&gt;icu/source/mh-linux&lt;/i&gt; и комментируем эту строку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;LDFLAGSICUDT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-nodefaultlibs -nostdlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Решение найдено &lt;a href="http://stackoverflow.com/questions/17687336/icu-49-built-on-a-debian-system-fails-to-load-libicudata-so"&gt;здесь&lt;/a&gt;. Без этого исправления ldd -v libicudata.so.53 говорит, что библиотека statically linked. А после исправления - уже обычный вывод.&lt;/p&gt;
&lt;p&gt;Собираем и устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./build.sh
$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Каталог &lt;i&gt;/usr/share/icu-4c-53.1-armv7&lt;/i&gt; копируем на BeagleBone.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — Tslib</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-tslib" rel="alternate"></link><published>2014-07-15T21:54:00+05:00</published><updated>2014-07-15T21:54:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-tslib</id><summary type="html">&lt;p&gt;Сборка Tslib для Qt.&lt;/p&gt;
&lt;h3&gt;Сборка&lt;/h3&gt;
&lt;p&gt;Клонируем репозиторий &lt;a href="https://github.com/kergoth/tslib"&gt;tslib&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Сборка Tslib для Qt.&lt;/p&gt;
&lt;h3&gt;Сборка&lt;/h3&gt;
&lt;p&gt;Клонируем репозиторий &lt;a href="https://github.com/kergoth/tslib"&gt;tslib&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/
$ mkdir tslib
$ &lt;span class="nb"&gt;cd&lt;/span&gt; tslib
$ git clone https://github.com/kergoth/tslib.git .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Устанавливаем дополнительные пакеты для создания файлов конфигурации:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/tslib/
$ sudo apt-get install autoconf automake gettext libtool
$ ./autogen.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Создаём скрипт сборки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/tslib/
$ touch build.sh
$ chmod +x build.sh
$ nano build.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;С текстом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/bin/arm-linux-gnueabihf-gcc
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/bin/arm-linux-gnueabihf-g++
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CONFIG_SITE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm-linux.autogen
./configure --build&lt;span class="o"&gt;=&lt;/span&gt;i386-linux --host&lt;span class="o"&gt;=&lt;/span&gt;arm-linux --target&lt;span class="o"&gt;=&lt;/span&gt;arm --disable-inputapi --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/tslib-armv7
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Собираем и устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./build.sh
$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Получаем каталог &lt;i&gt;/usr/share/tslib-armv7&lt;/i&gt;, копируем на BeagleBone.&lt;/p&gt;
&lt;h3&gt;Настройка и калибровка&lt;/h3&gt;
&lt;p&gt;В &lt;i&gt;/dev/input/&lt;/i&gt; требуется определить, какой из event'ов относится к touchscreen.
Можно запустить, например, дамп и понажимать на панель:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo cat /dev/input/event1 &lt;span class="p"&gt;|&lt;/span&gt; hexdump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Либо запросить инфу о каждом event'е, пока не найдётся tsc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo udevadm info -n input/event1 -q path

/devices/ocp.3/44e0d000.tscadc/tsc/input/input1/event1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь надо создать симлинк к этому event'у и разрешить доступ к нему.
Создаём в каталоге &lt;i&gt;/etc/udev/rules.d&lt;/i&gt; файл &lt;i&gt;80-touchscreen.rules&lt;/i&gt; с одной строкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;KERNEL==&amp;quot;event1&amp;quot;, SUBSYSTEM==&amp;quot;input&amp;quot;, SUBSYSTEMS==&amp;quot;input&amp;quot;, ATTRS{name}==&amp;quot;ti-tsc&amp;quot;, SYMLINK+=&amp;quot;input/touchscreen&amp;quot;, MODE=&amp;quot;0644&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;и перезагружаемся. Должен появиться &lt;i&gt;/dev/input/touchscreen&lt;/i&gt; с правами на чтение для всех.
&lt;a href="http://rus-linux.net/lib.php?name=/MyLDP/sys-conf/udev.html"&gt;Инструкция по udev&lt;/a&gt;. В Debian udevinfo заменяется на udevadm info.&lt;/p&gt;
&lt;p&gt;Создаём в Debian скрипт калибровки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ mkdir /home/debian/test
debian@beaglebone:~$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/debian/test
debian@beaglebone:~/test$ nano ./calibr.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;С текстом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_TSDEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/input/touchscreen
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_CONFFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/ts.conf
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TSLIB_CALIBFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/pointercal2

/usr/share/tslib-armv7/bin/ts_calibrate
&lt;span class="c1"&gt;#/usr/share/tslib-armv7/bin/ts_test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Закрываем редактор. Запускаем скрипт калибровки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~/test$ chmod +x ./calibr.sh
debian@beaglebone:~/test$ sudo ./calibr.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В результате будет создан файл &lt;i&gt;/etc/pointercal2&lt;/i&gt; с данными калибровки.
После калибровки, если в скрипте заменить ts_calibrate на ts_test, можно проверить работу touchscreen.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — Кросс-компилятор</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-setup-cross-compiler" rel="alternate"></link><published>2014-07-15T21:50:00+05:00</published><updated>2014-07-15T21:50:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-setup-cross-compiler</id><summary type="html">&lt;p&gt;Установка кросс-компилятора.&lt;/p&gt;
&lt;p&gt;Операционная система на компьютере - &lt;a href="http://releases.ubuntu.com/14.04/"&gt;Ubuntu 14.04 LTS …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Установка кросс-компилятора.&lt;/p&gt;
&lt;p&gt;Операционная система на компьютере - &lt;a href="http://releases.ubuntu.com/14.04/"&gt;Ubuntu 14.04 LTS x64&lt;/a&gt;.
На BeagleBone Black - Debian 7.5 Wheezy.&lt;/p&gt;
&lt;h3&gt;32-битные библиотеки&lt;/h3&gt;
&lt;p&gt;Начиная с Ubuntu 13.10 выпилен пакет ia32-libs. Поэтому команда &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt-get install ia32-libs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;уже не пройдёт.&lt;/p&gt;
&lt;p&gt;Устанавливаем библиотеки как объяснено &lt;a href="http://www.linuxrussia.com/2014/02/32-libs-ubuntu.html"&gt;здесь&lt;/a&gt; и &lt;a href="http://gnuarmeclipse.livius.net/blog/toolchain-install/"&gt;здесь&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo dpkg --add-architecture i386
$ sudo apt-get update 

$ sudo apt-get install libc6:i386 libstdc++6:i386
$ sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Компилятор&lt;/h3&gt;
&lt;p&gt;В качестве кросс-компилятора берём &lt;a href="https://launchpad.net/gcc-linaro/"&gt;Linaro GCC&lt;/a&gt;.
У компилятора из репозитория Ubuntu версия libc выше используемой в Debian, программа на устройстве не запустится.&lt;/p&gt;
&lt;p&gt;Скачиваем и распаковываем бинарники компилятора в какой-нибудь каталог, например:
&lt;i&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux&lt;/i&gt;&lt;/p&gt;
&lt;h3&gt;Отладчик&lt;/h3&gt;
&lt;p&gt;Для Qt Creator понадобится gdb с поддержкой python.&lt;/p&gt;
&lt;p&gt;Скачиваем исходники &lt;a href="https://launchpad.net/gdb-linaro/+download"&gt;Linaro GDB&lt;/a&gt;.
Распаковываем в &lt;i&gt;/home/user/beaglebone/gdb-linaro-7.6-2013.05-sources&lt;/i&gt;
Собираем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/gdb-linaro-7.6-2013.05-sources
~/beaglebone/gdb-linaro-7.6-2013.05-sources$ ./configure --target&lt;span class="o"&gt;=&lt;/span&gt;arm-elf-linux-gnueabihf --prefix&lt;span class="o"&gt;=&lt;/span&gt;/home/user/beaglebone/gdb-linaro-7.6-2013.05
~/beaglebone/gdb-linaro-7.6-2013.05-sources$ make -j &lt;span class="m"&gt;2&lt;/span&gt;
~/beaglebone/gdb-linaro-7.6-2013.05-sources$ make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;GDB будет установлен в каталог &lt;i&gt;/home/user/beaglebone/gdb-linaro-7.6-2013.05&lt;/i&gt;. Поддержа python должна включиться автоматически.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — подключение дисплея BB-View</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-connect-bb-view" rel="alternate"></link><published>2014-07-15T21:38:00+05:00</published><updated>2014-07-15T21:38:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-connect-bb-view</id><summary type="html">&lt;p&gt;К сожалению, придётся перекомпилировать ядро. Видео будет работать сразу (за …&lt;/p&gt;</summary><content type="html">&lt;p&gt;К сожалению, придётся перекомпилировать ядро. Видео будет работать сразу (за исключением порядка цветов), а вот подключение сенсорной панели не совпадает со стандартным 4-проводным интерфейсом TI.&lt;/p&gt;
&lt;p class="p-3 mb-2 bg-info text-white"&gt;Первоисточник:
"How-to BB-View on latest Debian"&lt;br&gt;
http://www.element14.com/community/thread/31051/l/how-to-bb-view-on-latest-debian&lt;/p&gt;
&lt;p&gt;Создаём каталог &lt;i&gt;/home/user/beaglebone/kernel&lt;/i&gt; и заходим в него:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ mkdir /home/user/beaglebone/kernel
$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/kernel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если на ПК &lt;strong&gt;git&lt;/strong&gt; ещё не установлен, устанавливаем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Клонируем проект &lt;strong&gt;linux-dev&lt;/strong&gt; автора Robert Nelson. Готовьтесь к большой загрузке (~100 МБ для кросс-компилятора и ~700 МБ для исходников ядра).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ git clone https://github.com/RobertCNelson/linux-dev.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Заходим в новый каталог &lt;i&gt;linux-dev&lt;/i&gt; и выбираем ветку/тег, соответствующую версии Debian.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; linux-dev
$ git checkout &lt;span class="m"&gt;3&lt;/span&gt;.8.13-bone53 -b tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь нам нужно собрать базовый образ, чтобы каталог драйверов плат расширения заполнился. Сценарий подскажет вам, если понадобится что-то сделать или доустановить.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./build_kernel.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Процесс будет длиться час или около того. Наберитесь терпения...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;По состоянию на 2014-07-15:&lt;/strong&gt;
Скачиваем в каталог &lt;i&gt;/home/user/beaglebone/kernel&lt;/i&gt; архив &lt;i&gt;BB-View Angstrom Source Code&lt;/i&gt;.
Взять его можно здесь: &lt;a href="http://www.element14.com/community/docs/DOC-55844?ICID=beagleboneblack-bbview-learn"&gt;Expansion Board for BeagleBone family with 7 inch LCD&lt;/a&gt; - &lt;a href="http://www.element14.com/community/docs/DOC-55844?ICID=beagleboneblack-bbview-learn#cdownloads"&gt;Downloads&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Вытаскиваем оттуда два файла:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ unzip angstrom-source.zip
$ bzip2 -cd bb-black-kernel-3.8.13-bb-view.tar.bz2 &lt;span class="p"&gt;|&lt;/span&gt; tar -xvf -
$ cp kernel/kernel/drivers/input/touchscreen/ti_am335x_tsc.c ../linux-dev/KERNEL/drivers/input/touchscreen/
$ cp kernel/kernel/firmware/capes/BB-VIEW-LCD7-01-00A0.dts ../linux-dev/KERNEL/firmware/capes/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;По состоянию на 2014-09-02:&lt;/strong&gt;
Скачиваем в каталог &lt;i&gt;/home/user/beaglebone/kernel&lt;/i&gt; архив &lt;i&gt;Debian Source Code Patched for BB View&lt;/i&gt;.
Взять его можно здесь: &lt;a href="http://www.element14.com/community/docs/DOC-67958?ICID=beagleboneblack-bbview-software"&gt;element14: BB View LCD Cape Software Download Centre[1]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Вытаскиваем оттуда три файла:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ unzip BB&lt;span class="se"&gt;\ &lt;/span&gt;VIEW&lt;span class="se"&gt;\ &lt;/span&gt;Debian&lt;span class="se"&gt;\ &lt;/span&gt;Source&lt;span class="se"&gt;\ &lt;/span&gt;Code.zip
$ &lt;span class="nb"&gt;cd&lt;/span&gt; BB&lt;span class="se"&gt;\ &lt;/span&gt;VIEW&lt;span class="se"&gt;\ &lt;/span&gt;Debian&lt;span class="se"&gt;\ &lt;/span&gt;Source&lt;span class="se"&gt;\ &lt;/span&gt;Code/
$ bzip2 -cd bb-black-kernel-3.8.13-bb-view.tar.bz2 &lt;span class="p"&gt;|&lt;/span&gt; tar -xvf -
$ cp kernel/kernel/drivers/input/touchscreen/ti_am335x_tsc.c ../linux-dev/KERNEL/drivers/input/touchscreen/
$ cp kernel/kernel/include/linux/mfd/ti_am335x_tscadc.h ../linux-dev/KERNEL/include/linux/mfd/
$ cp kernel/kernel/firmware/capes/BB-VIEW-LCD7-01-00A0.dts ../linux-dev/KERNEL/firmware/capes/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь надо включить добавленное в сборку. Открываем файл:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ nano /home/user/beaglebone/kernel/linux-dev/KERNEL/firmware/Makefile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Добавляем следующую строку где-то около 192-ой (CTRL-C показывает текущую позицию курсора):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;BB-VIEW-LCD7-01-00A0.dtbo \
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Не забываем про закрывающий слеш, это важно. Теперь сохраняем и выходим, нажимая CTRL-O, Enter, CTRL-X.
Переходим обратно в корневой каталог &lt;i&gt;linux-dev&lt;/i&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/beaglebone/kernel/linux-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь запускаем пересборку ядра, это уже не должно занять много времени:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./tools/rebuild.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В итоге получаем каталог &lt;i&gt;/home/user/beaglebone/kernel/linux-dev/deploy&lt;/i&gt; .
Из него размещаем файлы на SD карте:
  * &lt;i&gt;deploy/config-3.8.13-bone53&lt;/i&gt; копируем в &lt;i&gt;BEAGLE_BONE/config-3.8.13-bone53&lt;/i&gt;
  * &lt;i&gt;deploy/3.8.13-bone53.zImage&lt;/i&gt; копируем в &lt;i&gt;BEAGLE_BONE/zImage&lt;/i&gt;
  * &lt;i&gt;deploy/3.8.13-bone53-dtbs.tar.gz&lt;/i&gt; распаковываем в &lt;i&gt;BEAGLE_BONE/dtbs&lt;/i&gt;
  * &lt;i&gt;deploy/3.8.13-bone53-firmware.tar.gz&lt;/i&gt; распаковываем в &lt;i&gt;rootfs/lib/firmware/&lt;/i&gt;
  * &lt;i&gt;deploy/3.8.13-bone53-modules.tar.gz&lt;/i&gt; распаковываем в &lt;i&gt;rootfs/&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Также, надо включить поддержку этого дисплея.
Открываем файл &lt;i&gt;BEAGLE_BONE/uEnv.txt&lt;/i&gt;. Где-то после строки #Disable HDMI добавляем параметры загрузки, в которых отключаем поддержку HDMI и включаем BB-View:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;optargs=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN capemgr.enable_partno=BB-VIEW-LCD7-01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Подключаем карту памяти к плате и загружаемся. Проверяем, что HDMI выключен (должна отсутствовать буква ...-L в списке), а BB-View включен:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ cat /sys/devices/bone_capemgr.9/slots
 &lt;span class="m"&gt;0&lt;/span&gt;: &lt;span class="m"&gt;54&lt;/span&gt;:PF--- 
 &lt;span class="m"&gt;1&lt;/span&gt;: &lt;span class="m"&gt;55&lt;/span&gt;:PF--- 
 &lt;span class="m"&gt;2&lt;/span&gt;: &lt;span class="m"&gt;56&lt;/span&gt;:PF--- 
 &lt;span class="m"&gt;3&lt;/span&gt;: &lt;span class="m"&gt;57&lt;/span&gt;:PF--- 
 &lt;span class="m"&gt;4&lt;/span&gt;: ff:P-O-L Bone-LT-eMMC-2G,00A0,Texas Instrument,BB-BONE-EMMC-2G
 &lt;span class="m"&gt;5&lt;/span&gt;: ff:P-O-- Bone-Black-HDMI,00A0,Texas Instrument,BB-BONELT-HDMI
 &lt;span class="m"&gt;6&lt;/span&gt;: ff:P-O-- Bone-Black-HDMIN,00A0,Texas Instrument,BB-BONELT-HDMIN
 &lt;span class="m"&gt;7&lt;/span&gt;: ff:P-O-L Override Board Name,00A0,Override Manuf,BB-VIEW-LCD7-01
debian@beaglebone:~$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если всё нормально... в ходе загрузки наблюдаем синего пингвина :)
Как исправить - в продолжении.&lt;/p&gt;
&lt;p&gt;Приобрести BB-View можно на &lt;a href="http://www.ebay.com/itm/BB-VIEW-70-Embest-7-Inch-Lcd-Display-Cape-For-Beaglebone-/141212194989?pt=UK_BOI_Electrical_Components_Supplies_ET&amp;amp;hash=item20e0e718ad"&gt;eBay&lt;/a&gt;.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category><category term="BB-View"></category></entry><entry><title>BB &amp; Qt — Установка Debian на BeagleBone</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-install-debian-on-beaglebone" rel="alternate"></link><published>2014-07-15T02:00:00+05:00</published><updated>2014-07-15T02:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-install-debian-on-beaglebone</id><summary type="html">&lt;p&gt;Установка системы Debian 7.5 Wheezy на SD Card для …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Установка системы Debian 7.5 Wheezy на SD Card для загрузки BeageBone Black.&lt;/p&gt;
&lt;h3&gt;Загрузка&lt;/h3&gt;
&lt;p&gt;Создаём каталог /home/user/beaglebone.&lt;/p&gt;
&lt;p&gt;На &lt;a href="http://beagleboard.org/latest-images"&gt;странице последних образов&lt;/a&gt; берём вариант Debian (BeagleBone, BeagleBone Black - 2GB SD), запускаемый без прошивки в eMMC. Скачиваем его в &lt;i&gt;/home/user/beaglebone/images&lt;/i&gt;.
Получается что-то типа &lt;i&gt;/home/user/beaglebone/images/bone-debian-7.5-2014-05-14-2gb.img.xz&lt;/i&gt; .&lt;/p&gt;
&lt;h3&gt;Установка&lt;/h3&gt;
&lt;p&gt;Записываем образ на SD карту памяти, объёмом более 2 ГБ. В Ubuntu для этого есть встроенное средство - приложение Disks.&lt;/p&gt;
&lt;p&gt;&lt;img alt="disks" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-install-debian-on-beaglebone-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;На SD карте должно появиться 2 раздела:
  * BEAGLE_BONE, объёмом около 100 МБ;
  * rootfs, объёмом около 1,7 ГБ.&lt;/p&gt;
&lt;p&gt;На разделе rootfs остаются свободными около 88 МБ, чего явно будет недостаточно. Поэтому запускаем Gparted и меняем размер этого раздела так, чтобы он занимал всё остальное доступное место на карте памяти (поэтому и нужна карта объёмом более 2 ГБ).&lt;/p&gt;
&lt;p&gt;&lt;img alt="gparted" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-install-debian-on-beaglebone-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Устаналиваем карту памяти в BeagleBone. Зажимаем кнопку &lt;i&gt;boot&lt;/i&gt; и подключаем USB кабелем к ПК. После чего:
  * Загружается Debian;
  * Подключается съёмный диск BEAGLE_BONE (первый раздел на карте);
  * Поверх USB создаётся новое проводное подключение с адресом 192.168.7.1, маской 255.255.255.252, широковещательным адресом 192.168.7.3;&lt;/p&gt;
&lt;h3&gt;Связь&lt;/h3&gt;
&lt;p&gt;Теперь можно зайти по ssh. Логин debian, пароль temppwd.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ssh debian@192.168.7.2
Debian GNU/Linux &lt;span class="m"&gt;7&lt;/span&gt;

BeagleBoard.org BeagleBone Debian Image &lt;span class="m"&gt;2014&lt;/span&gt;-05-14

Support/FAQ: http://elinux.org/Beagleboard:BeagleBoneBlack_Debian
debian@192.168.7.2&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s password: temppwd
debian@beaglebone:~$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Выход в интернет&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://robotic-controls.com/learn/beaglebone/beaglebone-internet-over-usb-only"&gt;Настраиваем выход в интернет с BeagleBone через ПК по USB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;На BeagleBone:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo ifconfig usb0 &lt;span class="m"&gt;192&lt;/span&gt;.168.7.2
debian@beaglebone:~$ sudo route add default gw &lt;span class="m"&gt;192&lt;/span&gt;.168.7.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Возможно понадобится добавить строку &lt;i&gt;nameserver 8.8.8.8&lt;/i&gt; в файл &lt;i&gt;/etc/resolv.conf&lt;/i&gt; &lt;/p&gt;
&lt;p&gt;На ПК с Linux:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#eth0 интерфейс, смотрящий в интернет&lt;/span&gt;
&lt;span class="c1"&gt;#eth3 это подключение к BeagleBone по USB&lt;/span&gt;
$ sudo su
$ ifconfig eth3 &lt;span class="m"&gt;192&lt;/span&gt;.168.7.1
$ iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE
$ iptables --append FORWARD --in-interface eth3 -j ACCEPT
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &amp;gt; /proc/sys/net/ipv4/ip_forward
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь можно установить какой-либо дополнительный софт. Например Midnight Commander:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo apt-get install mc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Или обновить систему:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debian@beaglebone:~$ sudo apt-get update
debian@beaglebone:~$ sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(BeagleBone Black можно приобрести на &lt;a href="http://cgi.ebay.com/ws/eBayISAPI.dll?ViewItem&amp;amp;item=261487540514"&gt;eBay&lt;/a&gt;)&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry><entry><title>BB &amp; Qt — Установка Qt Creator</title><link href="https://blog.riuson.com/ru/posts/2014/07/15/bb-and-qt-setup-qt-creator" rel="alternate"></link><published>2014-07-15T01:00:00+05:00</published><updated>2014-07-15T01:00:00+05:00</updated><author><name>Vladimir</name></author><id>tag:blog.riuson.com,2014-07-15:/ru/posts/2014/07/15/bb-and-qt-setup-qt-creator</id><summary type="html">&lt;p&gt;Подготовка Qt Creator для сборки проектов под BeagleBone.&lt;/p&gt;
&lt;h3&gt;Установка&lt;/h3&gt;
&lt;p&gt;Для …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Подготовка Qt Creator для сборки проектов под BeagleBone.&lt;/p&gt;
&lt;h3&gt;Установка&lt;/h3&gt;
&lt;p&gt;Для установки Qt Creator берём &lt;a href="http://qt-project.org/downloads"&gt;Qt Online Installer&lt;/a&gt;. С его помощью загружаем Tools и Qt 5.2.1 gcc 32/64 bit.&lt;/p&gt;
&lt;p&gt;&lt;img alt="qt-maintenance-tool" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Далее запускаем свежеустановленный Qt Creator.&lt;/p&gt;
&lt;h3&gt;Добавление устройства&lt;/h3&gt;
&lt;p&gt;Открываем меню Иструменты -&amp;gt; Параметры -&amp;gt; Устройства.
Добавляем новое "Обычное Linux-устройство", называем его "BeagleBone Black - Debian".
Хост 192.168.7.2, авторизация по паролю, логин debian, пароль temppwd.&lt;/p&gt;
&lt;p&gt;&lt;img alt="device" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-2.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Добавление комплекта&lt;/h3&gt;
&lt;p&gt;Открываем меню Иструменты -&amp;gt; Параметры -&amp;gt; Сборка и запуск.&lt;/p&gt;
&lt;p&gt;На вкладке Отладчики добавляем новый отладчик Linaro GDB ARM Python, указывая путь к ранее собранному Linaro GDB:
&lt;i&gt;/home/user/beaglebone/gdb-linaro-7.6-2013.05/bin/arm-elf-linux-gnueabihf-gdb&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="gdb" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-3.png" /&gt;&lt;/p&gt;
&lt;p&gt;На вкладке Компиляторы добавляем новый кросс-компилятор Linaro GCC ARMv7, указывая путь к копилятору:
&lt;i&gt;/home/user/beaglebone/gcc-linaro-arm-linux-gnueabi-4.8-2014.03_linux/arm-linux-gnueabihf/bin/g++&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="compiler" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;На вкладке Профили Qt добавляем новый профиль Qt 5.2.1 (armv7), указывая путь к qmake, из собранного ранее Qt 5.2.1 для ARMv7:
&lt;i&gt;/usr/share/qt-5.2.1-armv7/bin/qmake&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="profile" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-5.png" /&gt;&lt;/p&gt;
&lt;p&gt;На вкладке комплекты добавляем новый комплект ARMv7 Qt 5.2.1 GCC ARM, указывая созданные выше компилятор Linaro GCC ARMv7, профиль Qt и устройство:&lt;/p&gt;
&lt;p&gt;&lt;img alt="kit" class="img-fluid" src="https://blog.riuson.com/images/posts/2014/07/15/bb-and-qt-setup-qt-creator-6.png" /&gt;&lt;/p&gt;
&lt;p&gt;Подтверждаем и закрываем.&lt;/p&gt;</content><category term="BeagleBone"></category><category term="Qt"></category></entry></feed>